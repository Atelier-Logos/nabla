{"version": 2, "width": 208, "height": 61, "timestamp": 1753531490, "env": {"SHELL": "/bin/zsh", "TERM": "xterm-256color"}}
[0.539846, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                                                                                               \r \r"]
[0.540377, "o", "\u001b]7;file://Jamess-MacBook-Air.local/Users/jdbohrman/nabla\u0007"]
[0.540452, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[Jjdbohrman@Jamess-MacBook-Air nabla % \u001b[K\u001b[?2004h"]
[1.433945, "o", "exit"]
[2.497343, "o", "\b\b\b\b    \b\b\b\b"]
[3.076344, "o", "\u001b[7m ./demo_script.sh   \u001b[27m"]
[3.958931, "o", "\u001b[20D\u001b[27m \u001b[27m.\u001b[27m/\u001b[27md\u001b[27me\u001b[27mm\u001b[27mo\u001b[27m_\u001b[27ms\u001b[27mc\u001b[27mr\u001b[27mi\u001b[27mp\u001b[27mt\u001b[27m.\u001b[27ms\u001b[27mh\u001b[27m \u001b[27m \u001b[27m \u001b[?2004l\r\r\n"]
[3.971706, "o", "\u001b[3J\u001b[H\u001b[2J"]
[3.972004, "o", "\r\n\u001b[0;36m\r\n███╗   ██╗ █████╗ ██████╗ ██╗      █████╗ \r\n████╗  ██║██╔══██╗██╔══██╗██║     ██╔══██╗\r\n██╔██╗ ██║███████║██████╔╝██║     ███████║\r\n██║╚██╗██║██╔══██║██╔══██╗██║     ██╔══██║\r\n██║ ╚████║██║  ██║██████╔╝███████╗██║  ██║\r\n╚═╝  ╚═══╝╚═╝  ╚═╝╚═════╝ ╚══════╝╚═╝  ╚═╝\r\n\u001b[0m\r\n\r\n"]
[3.97209, "o", "\u001b[1;37m🚀 Nabla Binary Analysis API Demo\u001b[0m\r\n"]
[3.972133, "o", "\u001b[1;37m=====================================\u001b[0m\r\n\r\n"]
[3.992276, "o", "\u001b[0;32m✅ Server is running at http://localhost:8080\u001b[0m\r\n\r\n"]
[3.992425, "o", "\r\n\u001b[1;33m╔══════════════════════════════════════════════════════════════╗\u001b[0m\r\n\u001b[1;33m║\u001b[0m \u001b[1;37mSetting up demo files\u001b[0m \u001b[1;33m║\u001b[0m\r\n\u001b[1;33m╚══════════════════════════════════════════════════════════════╝\u001b[0m\r\n\r\n"]
[4.350629, "o", "\u001b[0;32m✅ Demo files created\u001b[0m\r\n\r\n"]
[4.350659, "o", "\r\n\u001b[1;33m╔══════════════════════════════════════════════════════════════╗\u001b[0m\r\n\u001b[1;33m║\u001b[0m \u001b[1;37m1. Binary Analysis\u001b[0m \u001b[1;33m║\u001b[0m\r\n"]
[4.350667, "o", "\u001b[1;33m╚══════════════════════════════════════════════════════════════╝\u001b[0m\r\n\r\n"]
[4.350689, "o", "\u001b[0;34m🔗 Endpoint:\u001b[0m /binary/analyze\r\n\u001b[0;34m📝 Description:\u001b[0m Upload and analyze a binary file\r\n"]
[4.3507, "o", "\u001b[0;34m📋 Method:\u001b[0m POST\r\n\r\n"]
[4.350733, "o", "\u001b[0;36m💻 Command:\u001b[0m\r\n"]
[4.350855, "o", "\u001b[0;32mcurl -X POST http://localhost:8080/binary/analyze \\\r\n        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJQb3J0Y3VsbGlzIiwiZXhwIjoxNzU0NDkzMzg0LCJpYXQiOjE3NTMyODM3ODQsImp0aSI6Ijk0NWY4ZjBlLTgyNDctNDUyMS1hMDg5LThmNzUwNzBmZjNmNyIsInBsYW4iOiJmcmVlIiwicmF0ZV9saW1pdCI6MTAwMCwiZGVwbG95bWVudF9pZCI6IjEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMCJ9.2c-1o9kuERyrVxGunTBVfc6M3SFV_7YdLyvt4TJsfXw\" \\\r\n        -F \"file=@./demo_files/demo\"\u001b[0m\r\n\r\n\u001b[0;35m📡 Response:\u001b[0m\r\n"]
[4.356862, "o", "  % Total    %"]
[4.356874, "o", " Received % Xferd  Average Speed   Ti"]
[4.356878, "o", "me    Time"]
[4.356882, "o", "     Tim"]
[4.356915, "o", "e  Current\r\n                                 Dload  Uploa"]
[4.357018, "o", "d   Total   Spent    Left  Spe"]
[4.357031, "o", "ed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0"]
[4.764029, "o", "\r100 37571  100  3931  100 33640   9654  826"]
[4.764051, "o", "22 --:--:-- --:--:-- --:--:-- 92312\r\n"]
[4.764656, "o", "\u001b[1;39m{\r\n  \u001b[0m\u001b[1;34m\"id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"b9d7c43d-f215-42e0-9009-fabdbd552680\"\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"hash\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"499f6fbf2fa9e2b9c283f52f05136d3ddbcb6bfc38f2431f012d305dcc46a154\"\u001b[0m\u001b[1;39m,\r\n"]
[4.764669, "o", "  \u001b[0m\u001b[1;34m\"analysis\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n    \u001b[0m\u001b[1;34m\"id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"b9d7c43d-f215-42e0-9009-fabdbd552680\"\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"file_name\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"demo\"\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"format\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"macho\"\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"architecture\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"aarch64\"\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"languages\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"detected_symbols\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n      \u001b[0;32m\"__mh_execute_header\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"_main\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n"]
[4.764688, "o", "    \u001b[0m\u001b[1;34m\"embedded_strings\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n      \u001b[0;32m\"/usr/lib/dyld\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"/usr/lib/libSystem.B.dylib\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"2wH\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"3h|\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"Hello from Nabla demo!\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"Processing data...\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__DATA_CONST\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__LINKEDIT\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__PAGEZERO\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__TEXT\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__cstring\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__got\"\u001b[0m\u001b[1;39m,\r\n"]
[4.764917, "o", "      \u001b[0;32m\"__mh_execute_header\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__stubs\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__text\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"__unwind_info\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"_main\"\u001b[0m\u001b[1;39m,\r\n"]
[4.764971, "o", "      \u001b[0;32m\"_mh_execute_header\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"bv5h\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"demo\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"demo_secret_key_123\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"h\\t$nt\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"j8H\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"main\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"self\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"/usr/lib/libSystem.B.dylib\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"suspected_secrets\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"imports\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n      \u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"exports\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n      \u001b[0;32m\"__mh_execute_header\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"_main\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"hash_sha256\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"499f6fbf2fa9e2b9c283f52f05136d3ddbcb6bfc38f2431f012d305dcc46a154\"\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"hash_blake3\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"3f44c5cac7e9ccbf27b17bcd22fdbae05f00516056c9751f1"]
[4.765055, "o", "cee5721fc9a7455\"\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"size_bytes\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m33432\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"linked_libraries\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n      \u001b[0;32m\"self\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0;32m\"/usr/lib/libSystem.B.dylib\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"static_linked\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39mfalse\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"version_info\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"version_strings\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"file_version\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"product_version\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"company\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"product_name\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"confidence\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m0.0\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"license_info\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"licenses\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"copyright_notices\"\u001b[0m"]
[4.765107, "o", "\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"spdx_identifiers\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"license_texts\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"confidence\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m0.0\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"metadata\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cpe_candidates\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"macho_metadata\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n        \u001b[0m\u001b[1;34m\"analysis_type\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"macho\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"frameworks\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"load_commands\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n          \u001b[0;32m\"Segment64(SegmentCommand64 { cmd: 25, cmdsize: 72, segname: [95, 95, 80, 65, 71, 69, 90, 69, 82, 79, 0, 0, 0, 0, 0, 0], vmaddr: 0, vmsize: 4294967296, fileoff: 0, filesize: 0, maxprot: 0, initprot: 0, nsects: 0, flags: 0 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"Segment64(SegmentCommand64 { cmd: 25, cmdsize: 392, segname: [95, 95, 84, 69"]
[4.765268, "o", ", 88, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], vmaddr: 4294967296, vmsize: 16384, fileoff: 0, filesize: 16384, maxprot: 5, initprot: 5, nsects: 4, flags: 0 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"Segment64(SegmentCommand64 { cmd: 25, cmdsize: 152, segname: [95, 95, 68, 65, 84, 65, 95, 67, 79, 78, 83, 84, 0, 0, 0, 0], vmaddr: 4294983680, vmsize: 16384, fileoff: 16384, filesize: 16384, maxprot: 3, initprot: 3, nsects: 1, flags: 16 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"Segment64(SegmentCommand64 { cmd: 25, cmdsize: 72, segname: [95, 95, 76, 73, 78, 75, 69, 68, 73, 84, 0, 0, 0, 0, 0, 0], vmaddr: 4295000064, vmsize: 16384, fileoff: 32768, filesize: 664, maxprot: 1, initprot: 1, nsects: 0, flags: 0 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"DyldChainedFixups(LinkeditDataCommand { cmd: 2147483700, cmdsize: 16, dataoff: 32768, datasize: 96 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"DyldExportsTrie(LinkeditDataCommand { cmd: 2147483699, cmdsize: 16, dataoff: 32864, datasize: 48 })\"\u001b[0m\u001b[1;39m,\r\n"]
[4.76536, "o", "          \u001b[0;32m\"Symtab(SymtabCommand { cmd: 2, cmdsize: 24, symoff: 32920, nsyms: 3, stroff: 32976, strsize: 40 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"Dysymtab(DysymtabCommand { cmd: 11, cmdsize: 80, ilocalsym: 0, nlocalsym: 0, iextdefsym: 0, nextdefsym: 2, iundefsym: 2, nundefsym: 1, tocoff: 0, ntoc: 0, modtaboff: 0, nmodtab: 0, extrefsymoff: 0, nextrefsyms: 0, indirectsymoff: 32968, nindirectsyms: 2, extreloff: 0, nextrel: 0, locreloff: 0, nlocrel: 0 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"LoadDylinker(DylinkerCommand { cmd: 14, cmdsize: 32, name: 12 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"Uuid(UuidCommand { cmd: 27, cmdsize: 24, uuid: [209, 85, 7, 255, 98, 118, 53, 104, 190, 186, 32, 106, 56, 72, 168, 59] })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"BuildVersion(BuildVersionCommand { cmd: 50, cmdsize: 32, platform: 1, minos: 983040, sdk: 984064, ntools: 1 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"SourceVersion(SourceVersionCommand { cmd: 42, cmdsize: 16, version: 0 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"Main(EntryPointCommand { cmd: 21474"]
[4.76549, "o", "83688, cmdsize: 24, entryoff: 1120, stacksize: 0 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"LoadDylib(DylibCommand { cmd: 12, cmdsize: 56, dylib: Dylib { name: 24, timestamp: 2, current_version: 88539136, compatibility_version: 65536 } })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"FunctionStarts(LinkeditDataCommand { cmd: 38, cmdsize: 16, dataoff: 32912, datasize: 8 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"DataInCode(LinkeditDataCommand { cmd: 41, cmdsize: 16, dataoff: 32920, datasize: 0 })\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0;32m\"CodeSignature(LinkeditDataCommand { cmd: 29, cmdsize: 16, dataoff: 33024, datasize: 408 })\"\u001b[0m\u001b[1;39m\r\n        \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"min_os_version\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"15.0\"\u001b[0m\u001b[1;39m\r\n      \u001b[1;39m}\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"created_at\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"2025-07-26T12:04:54.685656Z\"\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"sbom\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m\r\n  \u001b[1;39m}\u001b[0m\u001b[1;39m\r\n\u001b[1;39m}\u001b[0m\r\n"]
[4.765643, "o", "\r\n\u001b[1;33m⏸️  Press Enter to continue...\u001b[0m\r\n"]
[7.3332, "o", "\r\n"]
[7.3405, "o", "\u001b[3J\u001b[H\u001b[2J"]
[7.341162, "o", "\r\n\u001b[1;33m╔══════════════════════════════════════════════════════════════╗\u001b[0m\r\n"]
[7.341332, "o", "\u001b[1;33m║\u001b[0m \u001b[1;37m2. Binary Comparison\u001b[0m \u001b[1;33m║\u001b[0m\r\n\u001b[1;33m╚══════════════════════════════════════════════════════════════╝\u001b[0m\r\n\r\n\u001b[0;34m🔗 Endpoint:\u001b[0m /binary/diff\r\n\u001b[0;34m📝 Description:\u001b[0m Compare two binary files\r\n\u001b[0;34m📋 Method:\u001b[0m POST\r\n\r\n"]
[7.341733, "o", "\u001b[0;36m💻 Command:\u001b[0m\r\n\u001b[0;32mcurl -X POST http://localhost:8080/binary/diff \\\r\n        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJQb3J0Y3VsbGlzIiwiZXhwIjoxNzU0NDkzMzg0LCJpYXQiOjE3NTMyODM3ODQsImp0aSI6Ijk0NWY4ZjBlLTgyNDctNDUyMS1hMDg5LThmNzUwNzBmZjNmNyIsInBsYW4iOiJmcmVlIiwicmF0ZV9saW1pdCI6MTAwMCwiZGVwbG95bWVudF9pZCI6IjEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMCJ9.2c-1o9kuERyrVxGunTBVfc6M3SFV_7YdLyvt4TJsfXw\" \\\r\n        -F \"file1=@./demo_files/demo\" \\\r\n        -F \"file2=@./demo_files/demo2\"\u001b[0m\r\n\r\n\u001b[0;35m📡 Response:\u001b[0m\r\n"]
[7.357551, "o", "  % Total    % Received % "]
[7.357654, "o", "Xferd  Average Speed   Time    Time     Time  Current\r\n  "]
[7.357675, "o", "                               Dload  Upload   Total   Spent    Left  Speed"]
[7.357755, "o", "\r\n\r  0     0    0     0  "]
[7.357834, "o", " "]
[7.357849, "o", " 0     0      0      0 --:--:-- --:--:-- --:--:--     0"]
[8.157216, "o", "\r100 67615  100   384  100 67231    480  "]
[8.157246, "o", "84070 --:--:-- --:--:-- --:--:-- 84624\r\n"]
[8.157947, "o", "\u001b[1;39m{\r\n  \u001b[0m\u001b[1;34m\"exports_added\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"exports_removed\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"file1_name\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"demo\"\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"file1_sha256\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"499f6fbf2fa9e2b9c283f52f05136d3ddbcb6bfc38f2431f012d305dcc46a154\"\u001b[0m\u001b[1;39m,\r\n"]
[8.157973, "o", "  \u001b[0m\u001b[1;34m\"file1_size\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m33432\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"file2_name\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"demo2\"\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"file2_sha256\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"fefb7153c809769fe29ba51c7941cc1052bec97cf0049764991e1ad9c719d39c\"\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"file2_size\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m33432\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"imports_added\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"imports_removed\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"size_diff_bytes\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m0\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"symbols_added\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"symbols_removed\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m\r\n"]
[8.158093, "o", "\u001b[1;39m}\u001b[0m\r\n"]
[8.158287, "o", "\r\n\u001b[1;33m⏸️  Press Enter to continue...\u001b[0m\r\n"]
[11.331747, "o", "\r\n"]
[11.344448, "o", "\u001b[3J\u001b[H\u001b[2J"]
[11.344972, "o", "\r\n\u001b[1;33m╔══════════════════════════════════════════════════════════════╗\u001b[0m\r\n"]
[11.345084, "o", "\u001b[1;33m║\u001b[0m \u001b[1;37m3. Binary Attestation\u001b[0m \u001b[1;33m║\u001b[0m\r\n\u001b[1;33m╚══════════════════════════════════════════════════════════════╝\u001b[0m\r\n\r\n"]
[11.345162, "o", "\u001b[0;34m🔗 Endpoint:\u001b[0m /binary/attest\r\n"]
[11.345187, "o", "\u001b[0;34m📝 Description:\u001b[0m Create in-toto attestation for binary\r\n\u001b[0;34m📋 Method:\u001b[0m POST\r\n\r\n"]
[11.345257, "o", "\u001b[0;36m💻 Command:\u001b[0m\r\n\u001b[0;32mcurl -X POST http://localhost:8080/binary/attest \\\r\n"]
[11.345291, "o", "        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJQb3J0Y3VsbGlzIiwiZXhwIjoxNzU0NDkzMzg0LCJpYXQiOjE3NTMyODM3ODQsImp0aSI6Ijk0NWY4ZjBlLTgyNDctNDUyMS1hMDg5LThmNzUwNzBmZjNmNyIsInBsYW4iOiJmcmVlIiwicmF0ZV9saW1pdCI6MTAwMCwiZGVwbG95bWVudF9pZCI6IjEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMCJ9.2c-1o9kuERyrVxGunTBVfc6M3SFV_7YdLyvt4TJsfXw\" \\\r\n        -F \"file=@./demo_files/demo\"\u001b[0m\r\n\r\n"]
[11.345407, "o", "\u001b[0;35m📡 Response:\u001b[0m\r\n"]
[11.358086, "o", "  % Total    % Received"]
[11.35813, "o", " % Xferd  Average Speed   Time    Time     Time  "]
[11.358227, "o", "Current\r\n        "]
[11.35828, "o", "                         Dload  Upload   Total   Spent    Left  Speed\r\n\r  0     0    0   "]
[11.358338, "o", "  0    0     0      0      0 --:--:-- --:-"]
[11.358419, "o", "-:-- --:--:--     0"]
[11.776337, "o", "\r100 37725  100  4085  100 33640   9766  804"]
[11.776358, "o", "25 --:--:-- --:--:-- --:--:-- 90251\r\n"]
[11.777243, "o", "\u001b[1;39m{\r\n  \u001b[0m\u001b[1;34m\"_type\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"https://in-toto.io/Statement/v0.1\"\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"predicate\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n    \u001b[0m\u001b[1;34m\"analysis\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"architecture\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"aarch64\"\u001b[0m\u001b[1;39m,\r\n"]
[11.777256, "o", "      \u001b[0m\u001b[1;34m\"created_at\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"2025-07-26T12:05:01.690919Z\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"detected_symbols\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n        \u001b[0;32m\"__mh_execute_header\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"_main\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m\r\n      \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"embedded_strings\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n        \u001b[0;32m\"/usr/lib/dyld\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"/usr/lib/libSystem.B.dylib\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"2wH\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"3h|\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"Hello from Nabla demo!\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"Processing data...\"\u001b[0m\u001b[1;39m,\r\n"]
[11.777261, "o", "        \u001b[0;32m\"__DATA_CONST\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"__LINKEDIT\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"__PAGEZERO\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"__TEXT\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"__cstring\"\u001b[0m\u001b[1;39m,\r\n"]
[11.777277, "o", "        \u001b[0;32m\"__got\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"__mh_execute_header\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"__stubs\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"__text\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"__unwind_info\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"_main\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"_mh_execute_header\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"bv5h\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"demo\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"demo_secret_key_123\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"h\\t$nt\"\u001b[0m\u001b[1;39m,\r\n"]
[11.777282, "o", "        \u001b[0;32m\"j8H\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"main\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"self\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"/usr/lib/libSystem.B.dylib\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m\r\n"]
[11.777286, "o", "      \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"exports\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n        \u001b[0;32m\"__mh_execute_header\"\u001b[0m\u001b[1;39m,\r\n"]
[11.77729, "o", "        \u001b[0;32m\"_main\"\u001b[0m\u001b[1;39m\r\n      \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"file_name\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"demo\"\u001b[0m\u001b[1;39m,\r\n"]
[11.777379, "o", "      \u001b[0m\u001b[1;34m\"format\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"macho\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"hash_blake3\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"3f44c5cac7e9ccbf27b17bcd22fdbae05f00516056c9751f1cee5721fc9a7455\"\u001b[0m\u001b[1;39m,\r\n"]
[11.777493, "o", "      \u001b[0m\u001b[1;34m\"hash_sha256\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"499f6fbf2fa9e2b9c283f52f05136d3ddbcb6bfc38f2431f012d305dcc46a154\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"46cb42f3-b3d2-4b2a-8c5a-6a6874ecf9cb\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"imports\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n        \u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m\r\n      \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"languages\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"license_info\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n        \u001b[0m\u001b[1;34m\"confidence\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m0.0\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"copyright_notices\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"license_texts\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"licenses\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"spdx_identifiers\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m\r\n      \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"linked_libraries\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n        \u001b[0;32m\"self\"\u001b[0m\u001b[1;39m,\r\n        \u001b[0;32m\"/usr/lib/libSystem.B.dylib\"\u001b[0m\u001b[1;39m\r"]
[11.777671, "o", "\r\n      \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"metadata\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n        \u001b[0m\u001b[1;34m\"cpe_candidates\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"macho_metadata\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n          \u001b[0m\u001b[1;34m\"analysis_type\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"macho\"\u001b[0m\u001b[1;39m,\r\n          \u001b[0m\u001b[1;34m\"frameworks\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n          \u001b[0m\u001b[1;34m\"load_commands\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n            \u001b[0;32m\"Segment64(SegmentCommand64 { cmd: 25, cmdsize: 72, segname: [95, 95, 80, 65, 71, 69, 90, 69, 82, 79, 0, 0, 0, 0, 0, 0], vmaddr: 0, vmsize: 4294967296, fileoff: 0, filesize: 0, maxprot: 0, initprot: 0, nsects: 0, flags: 0 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"Segment64(SegmentCommand64 { cmd: 25, cmdsize: 392, segname: [95, 95, 84, 69, 88, 84, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], vmaddr: 4294967296, vmsize: 16384, fileoff: 0, filesize: 16384, maxprot: 5, initprot: 5, nsects: 4, flags: 0 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"Segment64(SegmentCommand64 { cmd: 25, cmdsize"]
[11.777722, "o", ": 152, segname: [95, 95, 68, 65, 84, 65, 95, 67, 79, 78, 83, 84, 0, 0, 0, 0], vmaddr: 4294983680, vmsize: 16384, fileoff: 16384, filesize: 16384, maxprot: 3, initprot: 3, nsects: 1, flags: 16 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"Segment64(SegmentCommand64 { cmd: 25, cmdsize: 72, segname: [95, 95, 76, 73, 78, 75, 69, 68, 73, 84, 0, 0, 0, 0, 0, 0], vmaddr: 4295000064, vmsize: 16384, fileoff: 32768, filesize: 664, maxprot: 1, initprot: 1, nsects: 0, flags: 0 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"DyldChainedFixups(LinkeditDataCommand { cmd: 2147483700, cmdsize: 16, dataoff: 32768, datasize: 96 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"DyldExportsTrie(LinkeditDataCommand { cmd: 2147483699, cmdsize: 16, dataoff: 32864, datasize: 48 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"Symtab(SymtabCommand { cmd: 2, cmdsize: 24, symoff: 32920, nsyms: 3, stroff: 32976, strsize: 40 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"Dysymtab(DysymtabCommand { cmd: 11, cmdsize: 80, ilocalsym: 0, nlocalsym: 0, iextdefsym: 0, nextdefsym: 2, iundefsym: 2, nun"]
[11.777866, "o", "defsym: 1, tocoff: 0, ntoc: 0, modtaboff: 0, nmodtab: 0, extrefsymoff: 0, nextrefsyms: 0, indirectsymoff: 32968, nindirectsyms: 2, extreloff: 0, nextrel: 0, locreloff: 0, nlocrel: 0 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"LoadDylinker(DylinkerCommand { cmd: 14, cmdsize: 32, name: 12 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"Uuid(UuidCommand { cmd: 27, cmdsize: 24, uuid: [209, 85, 7, 255, 98, 118, 53, 104, 190, 186, 32, 106, 56, 72, 168, 59] })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"BuildVersion(BuildVersionCommand { cmd: 50, cmdsize: 32, platform: 1, minos: 983040, sdk: 984064, ntools: 1 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"SourceVersion(SourceVersionCommand { cmd: 42, cmdsize: 16, version: 0 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"Main(EntryPointCommand { cmd: 2147483688, cmdsize: 24, entryoff: 1120, stacksize: 0 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"LoadDylib(DylibCommand { cmd: 12, cmdsize: 56, dylib: Dylib { name: 24, timestamp: 2, current_version: 88539136, compatibility_version: 65536 } })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;"]
[11.777961, "o", "32m\"FunctionStarts(LinkeditDataCommand { cmd: 38, cmdsize: 16, dataoff: 32912, datasize: 8 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"DataInCode(LinkeditDataCommand { cmd: 41, cmdsize: 16, dataoff: 32920, datasize: 0 })\"\u001b[0m\u001b[1;39m,\r\n            \u001b[0;32m\"CodeSignature(LinkeditDataCommand { cmd: 29, cmdsize: 16, dataoff: 33024, datasize: 408 })\"\u001b[0m\u001b[1;39m\r\n          \u001b[1;39m]\u001b[0m\u001b[1;39m,\r\n          \u001b[0m\u001b[1;34m\"min_os_version\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"15.0\"\u001b[0m\u001b[1;39m\r\n        \u001b[1;39m}\u001b[0m\u001b[1;39m\r\n      \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"sbom\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"size_bytes\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m33432\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"static_linked\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39mfalse\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"suspected_secrets\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"version_info\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n        \u001b[0m\u001b[1;34m\"company\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"confidence\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m0.0\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1"]
[11.778034, "o", ";34m\"file_version\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"product_name\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"product_version\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;90mnull\u001b[0m\u001b[1;39m,\r\n        \u001b[0m\u001b[1;34m\"version_strings\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[]\u001b[0m\u001b[1;39m\r\n      \u001b[1;39m}\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[0m\u001b[1;34m\"timestamp\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"2025-07-26T12:05:02.101148+00:00\"\u001b[0m\u001b[1;39m\r\n  \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"predicateType\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"https://nabla.sh/attestation/v0.1\"\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"subject\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"digest\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m{\r\n        \u001b[0m\u001b[1;34m\"sha256\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"499f6fbf2fa9e2b9c283f52f05136d3ddbcb6bfc38f2431f012d305dcc46a154\"\u001b[0m\u001b[1;39m\r\n      \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"name\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"demo\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m\r\n  \u001b[1;39m]\u001b[0m\u001b[1;39m\r\n\u001b[1;39m}\u001b[0m\r\n"]
[11.778254, "o", "\r\n\u001b[1;33m⏸️  Press Enter to continue...\u001b[0m\r\n"]
[17.908255, "o", "\r\n"]
[17.916444, "o", "\u001b[3J\u001b[H\u001b[2J"]
[17.916892, "o", "\r\n"]
[17.916992, "o", "\u001b[1;33m╔══════════════════════════════════════════════════════════════╗\u001b[0m\r\n"]
[17.917101, "o", "\u001b[1;33m║\u001b[0m \u001b[1;37m4. CVE Vulnerability Scanning\u001b[0m \u001b[1;33m║\u001b[0m\r\n\u001b[1;33m╚══════════════════════════════════════════════════════════════╝\u001b[0m\r\n\r\n\u001b[0;34m🔗 Endpoint:\u001b[0m /binary/check-cves\r\n\u001b[0;34m📝 Description:\u001b[0m Scan binary for known vulnerabilities\r\n\u001b[0;34m📋 Method:\u001b[0m POST\r\n\r\n"]
[17.917272, "o", "\u001b[0;36m💻 Command:\u001b[0m\r\n"]
[17.917457, "o", "\u001b[0;32mcurl -X POST http://localhost:8080/binary/check-cves \\\r\n        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJQb3J0Y3VsbGlzIiwiZXhwIjoxNzU0NDkzMzg0LCJpYXQiOjE3NTMyODM3ODQsImp0aSI6Ijk0NWY4ZjBlLTgyNDctNDUyMS1hMDg5LThmNzUwNzBmZjNmNyIsInBsYW4iOiJmcmVlIiwicmF0ZV9saW1pdCI6MTAwMCwiZGVwbG95bWVudF9pZCI6IjEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMCJ9.2c-1o9kuERyrVxGunTBVfc6M3SFV_7YdLyvt4TJsfXw\" \\\r\n        -F \"file=@./demo_files/vuln_demo\"\u001b[0m\r\n\r\n\u001b[0;35m📡 Response:\u001b[0m\r\n"]
[17.928533, "o", "  % Total    % R"]
[17.928559, "o", "eceived % Xferd  Average Speed   Time    Time   "]
[17.928566, "o", "  Time  Cu"]
[17.928714, "o", "rrent\r\n                                 Dload  Upload   Total   Spent    Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--    "]
[17.928827, "o", " 0"]
[18.545507, "o", "\r100  232k  100  199k  100 33821   32"]
[18.545527, "o", "2k  54816 --:--:-- --:--:-- --:--:--  376k\r100  232k  100  19"]
[18.545531, "o", "9k  100 338"]
[18.545535, "o", "21   322"]
[18.545539, "o", "k  54812"]
[18.545765, "o", " --:--:-- --:--:-- --:--:--  375k\r\n"]
[18.546205, "o", "\u001b[1;39m{\r\n  \u001b[0m\u001b[1;34m\"matches\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[1;39m[\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-0167\"\u001b[0m\u001b[1;39m,\r\n"]
[18.546258, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"When asked to use a `.netrc` file for credentials **and** to follow HTTP\\nredirects, curl could leak the password used for the first host to the\\nfollowed-to host under certain circumstances.\\n\\nThis flaw only manifests itself if the netrc file has a `default` entry that\\nomits both login and password. A rare circumstance.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-0337\"\u001b[0m\u001b[1;39m,\r\n"]
[18.546334, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"ServiceNow has addressed an authorization bypass vulnerability that was identified in the Washington release of the Now Platform. This vulnerability, if exploited, potentially could enable an authenticated user to access unauthorized data stored within the Now Platform that the user otherwise would not be entitled to access. \\n\\nThis issue is addressed in the listed patches and family release, which have been made available to hosted and self-hosted customers, as well as partners.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-0343\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Swift ASN.1 can be caused to crash when parsing certain BER/DER constructions. This crash is caused by a confusion in the ASN.1 library itself which assumes that certain objects can only be provided in either constructe"]
[18.54639, "o", "d or primitive forms, and will trigger a preconditionFailure if that constraint isn't met.\\n\\nImportantly, these constraints are actually required to be true in DER, but that correctness wasn't enforced on the early node parser side so it was incorrect to rely on it later on in decoding, which is what the library did.\\n\\nThese crashes can be triggered when parsing any DER/BER format object. There is no memory-safety issue here: the crash is a graceful one from the Swift runtime. The impact of this is that it can be used as a denial-of-service vector when parsing BER/DER data from unknown sources, e.g. when parsing TLS certificates.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-0539\"\u001b[0m\u001b[1;39m,\r\n"]
[18.546434, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In affected Microsoft Windows versions of Octopus Deploy, the server can be coerced into sending server-side requests that contain authentication material allowing a suitably positioned attacker to compromise the account running Octopus Server and potentially the host infrastructure itself.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-0589\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In affected versions of Octopus Deploy where customers are using Active Directory for authentication it was possible for an unauthenticated user to make an API request against two endpoints which would retrieve some data from the associated Active Directory. The requests when crafted correctly would return specific information from user profiles (Email address/UPN and Display name) from one endpoint and group "]
[18.546488, "o", "information ( Group ID and Display name) from the other. This vulnerability does not expose data within the Octopus Server product itself.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-0928\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In Juju versions prior to 3.6.8 and 2.9.52, any authenticated controller user was allowed to upload arbitrary agent binaries to any model or to the controller itself, without verifying model membership or requiring explicit permissions. This enabled the distribution of poisoned binaries to new or upgraded machines, potentially resulting in remote code execution.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-1213\"\u001b[0m\u001b[1;39m,\r\n"]
[18.546568, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"A vulnerability was found in pihome-shc PiHome 1.77. It has been rated as problematic. Affected by this issue is some unknown functionality of the file /index.php. The manipulation of the argument $_SERVER['PHP_SELF'] leads to cross site scripting. The attack may be launched remotely. The exploit has been disclosed to the public and may be used.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-1540\"\u001b[0m\u001b[1;39m,\r\n"]
[18.546662, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"An issue has been discovered in GitLab CE/EE for Self-Managed and Dedicated instances affecting all versions from 17.5 prior to 17.6.5, 17.7 prior to 17.7.4, and 17.8 prior to 17.8.2. It was possible for a user added as an External to read and clone internal projects under certain circumstances.\\\"\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-1713\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"When setting up interrupt remapping for legacy PCI(-X) devices,\\nincluding PCI(-X) bridges, a lookup of the upstream bridge is required.\\nThis lookup, itself involving acquiring of a lock, is done in a context\\nwhere acquiring that lock is unsafe.  This can lead to a deadlock.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m"]
[18.546674, "o", "{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-1723\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Zohocorp ManageEngine ADSelfService Plus versions 6510 and below are vulnerable to account takeover due to the session mishandling. Valid account holders in the setup only have the potential to exploit this bug.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-1795\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"During an address list folding when a separating comma ends up on a folded line and that line is to be unicode-encoded then the separator itself is also unicode-encoded. Expected behavior is that the separating comma remains a plan comma. This can result in the address header being misinterpreted by some mail servers.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n"]
[18.546714, "o", "    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n"]
[18.54682, "o", "    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-1949\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"A vulnerability, which was classified as problematic, has been found in ZZCMS 2025. This issue affects some unknown processing of the file /3/ucenter_api/code/register_nodb.php of the component URL Handler. The manipulation of the argument $_SERVER['PHP_SELF'] leads to cross site scripting. The attack may be initiated remotely. The exploit has been disclosed to the public and may be used.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-20258\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"A vulnerability in the self-service portal of Cisco Duo could allow an unauthenticated, remote attacker to inject arbitrary commands into emails that are sent by the service.\\r\\n\\r This vulnerability is due to insufficie"]
[18.546876, "o", "nt input validation. An attacker could exploit this vulnerability by injecting arbitrary commands into a portion of an email that is sent by the service. A successful exploit could allow the attacker to send emails that contain malicious content to unsuspecting users.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21609\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"SiYuan is self-hosted, open source personal knowledge management software. SiYuan Note version 3.1.18 has an arbitrary file deletion vulnerability. The vulnerability exists in the `POST /api/history/getDocHistoryContent` endpoint. An attacker can craft a payload to exploit this vulnerability, resulting in the deletion of arbitrary files on the server. Commit d9887aeec1b27073bec66299a9a4181dc42969f3 fixes this vulnerability and is expected to be available in version 3.1.19.\"\u001b[0m\u001b[1;39m,"]
[18.546929, "o", "\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21610\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Trix is a what-you-see-is-what-you-get rich text editor for everyday writing. Versions prior to 2.1.12 are vulnerable to cross-site scripting when pasting malicious code in the link field. An attacker could trick the user to copy&paste a malicious `javascript:` URL as a link that would execute arbitrary JavaScript code within the context of the user's session, potentially leading to unauthorized actions being performed or sensitive information being disclosed. Users should upgrade to Trix editor version 2.1.12 or later to receive a patch. In addition to upgrading, affected users can disallow browsers that don't support a Content Security Policy (CSP) as a workaround for this and other cross-site scripting vulnerabilities. Set CSP policies such as script-src 'se"]
[18.54695, "o", "lf' to ensure that only scripts hosted on the same origin are executed, and explicitly prohibit inline scripts using script-src-elem.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.546957, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n"]
[18.547086, "o", "    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21654\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\novl: support encoding fid from inode with no alias\\n\\nDmitry Safonov reported that a WARN_ON() assertion can be trigered by\\nuserspace when calling inotify_show_fdinfo() for an overlayfs watched\\ninode, whose dentry aliases were discarded with drop_caches.\\n\\nThe WARN_ON() assertion in inotify_show_fdinfo() was removed, because\\nit is possible for encoding file handle to fail for other reason, but\\nthe impact of failing to encode an overlayfs file handle goes beyond\\nthis assertion.\\n\\nAs shown in the LTP test case mentioned in the link below, failure to\\nencode an overlayfs file handle from a non-aliased inode also leads to\\nfailure to report an fid with FAN_DELETE_SELF fanotify events.\\n\\nAs Dmitry notes in his analyzis of the problem, ovl_encode_fh() fails\\nif it ca"]
[18.547178, "o", "nnot find an alias for the inode, but this failure can be fixed.\\novl_encode_fh() seldom uses the alias and in the case of non-decodable\\nfile handles, as is often the case with fanotify fid info,\\novl_encode_fh() never needs to use the alias to encode a file handle.\\n\\nDefer finding an alias until it is actually needed so ovl_encode_fh()\\nwill not fail in the common case of FAN_DELETE_SELF fanotify events.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21664\"\u001b[0m\u001b[1;39m,\r\n"]
[18.54722, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\ndm thin: make get_first_thin use rcu-safe list first function\\n\\nThe documentation in rculist.h explains the absence of list_empty_rcu()\\nand cautions programmers against relying on a list_empty() ->\\nlist_first() sequence in RCU safe code.  This is because each of these\\nfunctions performs its own READ_ONCE() of the list head.  This can lead\\nto a situation where the list_empty() sees a valid list entry, but the\\nsubsequent list_first() sees a different view of list head state after a\\nmodification.\\n\\nIn the case of dm-thin, this author had a production box crash from a GP\\nfault in the process_deferred_bios path.  This function saw a valid list\\nhead in get_first_thin() but when it subsequently dereferenced that and\\nturned it into a thin_c, it got the inside of the struct pool, since the\\nlist was now empty and referring to itself.  The kernel on which this\\noccurred printed both a"]
[18.547264, "o", " warning about a refcount_t being saturated, and\\na UBSAN error for an out-of-bounds cpuid access in the queued spinlock,\\nprior to the fault itself.  When the resulting kdump was examined, it\\nwas possible to see another thread patiently waiting in thin_dtr's\\nsynchronize_rcu.\\n\\nThe thin_dtr call managed to pull the thin_c out of the active thins\\nlist (and have it be the last entry in the active_thins list) at just\\nthe wrong moment which lead to this crash.\\n\\nFortunately, the fix here is straight forward.  Switch get_first_thin()\\nfunction to use list_first_or_null_rcu() which performs just a single\\nREAD_ONCE() and returns NULL if the list is already empty.\\n\\nThis was run against the devicemapper test suite's thin-provisioning\\nsuites for delete and suspend and no regressions were observed.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21681\"\u001b[0m\u001b[1;39m,\r\n"]
[18.547333, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nopenvswitch: fix lockup on tx to unregistering netdev with carrier\\n\\nCommit in a fixes tag attempted to fix the issue in the following\\nsequence of calls:\\n\\n    do_output\\n    -> ovs_vport_send\\n       -> dev_queue_xmit\\n          -> __dev_queue_xmit\\n             -> netdev_core_pick_tx\\n                -> skb_tx_hash\\n\\nWhen device is unregistering, the 'dev->real_num_tx_queues' goes to\\nzero and the 'while (unlikely(hash >= qcount))' loop inside the\\n'skb_tx_hash' becomes infinite, locking up the core forever.\\n\\nBut unfortunately, checking just the carrier status is not enough to\\nfix the issue, because some devices may still be in unregistering\\nstate while reporting carrier status OK.\\n\\nOne example of such device is a net/dummy.  It sets carrier ON\\non start, but it doesn't implement .ndo_stop to set the carrier off.\\nAnd it makes sense, because dummy doesn't really have a carr"]
[18.54737, "o", "ier.\\nTherefore, while this device is unregistering, it's still easy to hit\\nthe infinite loop in the skb_tx_hash() from the OVS datapath.  There\\nmight be other drivers that do the same, but dummy by itself is\\nimportant for the OVS ecosystem, because it is frequently used as a\\npacket sink for tcpdump while debugging OVS deployments.  And when the\\nissue is hit, the only way to recover is to reboot.\\n\\nFix that by also checking if the device is running.  The running\\nstate is handled by the net core during unregistering, so it covers\\nunregistering case better, and we don't really need to send packets\\nto devices that are not running anyway.\\n\\nWhile only checking the running state might be enough, the carrier\\ncheck is preserved.  The running and the carrier states seem disjoined\\nthroughout the code and different drivers.  And other core functions\\nlike __dev_direct_xmit() check both before attempting to transmit\\na packet.  So, it seems safer to check both flags in OVS as well.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b["]
[18.547471, "o", "1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21737\"\u001b[0m\u001b[1;39m,\r\n"]
[18.547514, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nceph: fix memory leak in ceph_mds_auth_match()\\n\\nWe now free the temporary target path substring allocation on every\\npossible branch, instead of omitting the default branch.  In some\\ncases, a memory leak occured, which could rapidly crash the system\\n(depending on how many file accesses were attempted).\\n\\nThis was detected in production because it caused a continuous memory\\ngrowth, eventually triggering kernel OOM and completely hard-locking\\nthe kernel.\\n\\nRelevant kmemleak stacktrace:\\n\\n    unreferenced object 0xffff888131e69900 (size 128):\\n      comm \\\"git\\\", pid 66104, jiffies 4295435999\\n      hex dump (first 32 bytes):\\n        76 6f 6c 75 6d 65 73 2f 63 6f 6e 74 61 69 6e 65  volumes/containe\\n        72 73 2f 67 69 74 65 61 2f 67 69 74 65 61 2f 67  rs/gitea/gitea/g\\n      backtrace (crc 2f3bb450):\\n        [<ffffffffaa68fb49>] __kmalloc_noprof+0x359/0x510\\n        [<fffff"]
[18.547533, "o", "fffc32bf1df>] ceph_mds_check_access+0x5bf/0x14e0 [ceph]\\n        [<ffffffffc3235722>] ceph_open+0x312/0xd80 [ceph]\\n        [<ffffffffaa7dd786>] do_dentry_open+0x456/0x1120\\n        [<ffffffffaa7e3729>] vfs_open+0x79/0x360\\n        [<ffffffffaa832875>] path_openat+0x1de5/0x4390\\n        [<ffffffffaa834fcc>] do_filp_open+0x19c/0x3c0\\n        [<ffffffffaa7e44a1>] do_sys_openat2+0x141/0x180\\n        [<ffffffffaa7e4945>] __x64_sys_open+0xe5/0x1a0\\n        [<ffffffffac2cc2f7>] do_syscall_64+0xb7/0x210\\n        [<ffffffffac400130>] entry_SYSCALL_64_after_hwframe+0x77/0x7f\\n\\nIt can be triggered by mouting a subdirectory of a CephFS filesystem,\\nand then trying to access files on this subdirectory with an auth token\\nusing a path-scoped capability:\\n\\n    $ ceph auth get client.services\\n    [client.services]\\n            key = REDACTED\\n            caps mds = \\\"allow rw fsname=cephfs path=/volumes/\\\"\\n            caps mon = \\\"allow r fsname=cephfs\\\"\\n            caps osd = \\\"allow rw tag cephfs data=cephfs\\\"\\n\\n   "]
[18.547562, "o", " $ cat /proc/self/mounts\\n    services@[REDACTED].cephfs=/volumes/containers /ceph/containers ceph rw,noatime,name=services,secret=<hidden>,ms_mode=prefer-crc,mount_timeout=300,acl,mon_addr=[REDACTED]:3300,recover_session=clean 0 0\\n\\n    $ seq 1 1000000 | xargs -P32 --replace={} touch /ceph/containers/file-{} && \\\\\\n    seq 1 1000000 | xargs -P32 --replace={} cat /ceph/containers/file-{}\\n\\n[ idryomov: combine if statements, rename rc to path_matched and make\\n            it a bool, formatting ]\"\u001b[0m\u001b[1;39m,\r\n"]
[18.547638, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21840\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nthermal/netlink: Prevent userspace segmentation fault by adjusting UAPI header\\n\\nThe intel-lpmd tool [1], which uses the THERMAL_GENL_ATTR_CPU_CAPABILITY\\nattribute to receive HFI events from kernel space, encounters a\\nsegmentation fault after commit 1773572863c4 (\\\"thermal: netlink: Add the\\ncommands and the events for the thresholds\\\").\\n\\nThe issue arises because the THERMAL_GENL_ATTR_CPU_CAPABILITY raw value\\nwas changed while intel_lpmd still uses the old value.\\n\\nAlthough intel_lpmd can be updated to check the THERMAL_GENL_VERSION and\\nuse the appropriate THERMAL_GENL_ATTR_CPU_CAPABILITY value, the commit\\nitself is questionable.\\n\\nThe commit introduced a new element in the middle of"]
[18.547674, "o", " enum thermal_genl_attr,\\nwhich affects many existing attributes and introduces potential risks\\nand unnecessary maintenance burdens for userspace thermal netlink event\\nusers.\\n\\nSolve the issue by moving the newly introduced\\nTHERMAL_GENL_ATTR_TZ_PREV_TEMP attribute to the end of the\\nenum thermal_genl_attr. This ensures that all existing thermal generic\\nnetlink attributes remain unaffected.\\n\\n[ rjw: Subject edits ]\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21861\"\u001b[0m\u001b[1;39m,\r\n"]
[18.547746, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nmm/migrate_device: don't add folio to be freed to LRU in migrate_device_finalize()\\n\\nIf migration succeeded, we called\\nfolio_migrate_flags()->mem_cgroup_migrate() to migrate the memcg from the\\nold to the new folio.  This will set memcg_data of the old folio to 0.\\n\\nSimilarly, if migration failed, memcg_data of the dst folio is left unset.\\n\\nIf we call folio_putback_lru() on such folios (memcg_data == 0), we will\\nadd the folio to be freed to the LRU, making memcg code unhappy.  Running\\nthe hmm selftests:\\n\\n  # ./hmm-tests\\n  ...\\n  #  RUN           hmm.hmm_device_private.migrate ...\\n  [  102.078007][T14893] page: refcount:1 mapcount:0 mapping:0000000000000000 index:0x7ff27d200 pfn:0x13cc00\\n  [  102.079974][T14893] anon flags: 0x17ff00000020018(uptodate|dirty|swapbacked|node=0|zone=2|lastcpupid=0x7ff)\\n  [  102.082037][T14893] raw: 017ff00000020018 dead000000000100 dead00000000"]
[18.547796, "o", "0122 ffff8881353896c9\\n  [  102.083687][T14893] raw: 00000007ff27d200 0000000000000000 00000001ffffffff 0000000000000000\\n  [  102.085331][T14893] page dumped because: VM_WARN_ON_ONCE_FOLIO(!memcg && !mem_cgroup_disabled())\\n  [  102.087230][T14893] ------------[ cut here ]------------\\n  [  102.088279][T14893] WARNING: CPU: 0 PID: 14893 at ./include/linux/memcontrol.h:726 folio_lruvec_lock_irqsave+0x10e/0x170\\n  [  102.090478][T14893] Modules linked in:\\n  [  102.091244][T14893] CPU: 0 UID: 0 PID: 14893 Comm: hmm-tests Not tainted 6.13.0-09623-g6c216bc522fd #151\\n  [  102.093089][T14893] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-2.fc40 04/01/2014\\n  [  102.094848][T14893] RIP: 0010:folio_lruvec_lock_irqsave+0x10e/0x170\\n  [  102.096104][T14893] Code: ...\\n  [  102.099908][T14893] RSP: 0018:ffffc900236c37b0 EFLAGS: 00010293\\n  [  102.101152][T14893] RAX: 0000000000000000 RBX: ffffea0004f30000 RCX: ffffffff8183f426\\n  [  102.102684][T14893] RDX: ffff8881063cb880 RSI: ffffffff81b8117f RDI:"]
[18.547851, "o", " ffff8881063cb880\\n  [  102.104227][T14893] RBP: 0000000000000000 R08: 0000000000000005 R09: 0000000000000000\\n  [  102.105757][T14893] R10: 0000000000000001 R11: 0000000000000002 R12: ffffc900236c37d8\\n  [  102.107296][T14893] R13: ffff888277a2bcb0 R14: 000000000000001f R15: 0000000000000000\\n  [  102.108830][T14893] FS:  00007ff27dbdd740(0000) GS:ffff888277a00000(0000) knlGS:0000000000000000\\n  [  102.110643][T14893] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\\n  [  102.111924][T14893] CR2: 00007ff27d400000 CR3: 000000010866e000 CR4: 0000000000750ef0\\n  [  102.113478][T14893] PKRU: 55555554\\n  [  102.114172][T14893] Call Trace:\\n  [  102.114805][T14893]  <TASK>\\n  [  102.115397][T14893]  ? folio_lruvec_lock_irqsave+0x10e/0x170\\n  [  102.116547][T14893]  ? __warn.cold+0x110/0x210\\n  [  102.117461][T14893]  ? folio_lruvec_lock_irqsave+0x10e/0x170\\n  [  102.118667][T14893]  ? report_bug+0x1b9/0x320\\n  [  102.119571][T14893]  ? handle_bug+0x54/0x90\\n  [  102.120494][T14893]  ? exc_invalid_op+0x17/0x50\\n  "]
[18.547994, "o", "[  102.121433][T14893]  ? asm_exc_invalid_op+0x1a/0x20\\n  [  102.122435][T14893]  ? __wake_up_klogd.part.0+0x76/0xd0\\n  [  102.123506][T14893]  ? dump_page+0x4f/0x60\\n  [  102.124352][T14893]  ? folio_lruvec_lock_irqsave+0x10e/0x170\\n  [  102.125500][T14893]  folio_batch_move_lru+0xd4/0x200\\n  [  102.126577][T14893]  ? __pfx_lru_add+0x10/0x10\\n  [  102.127505][T14893]  __folio_batch_add_and_move+0x391/0x720\\n  [  102.128633][T14893]  ? __pfx_lru_add+0x10/0x10\\n  [  102.129550][T14893]  folio_putback_lru+0x16/0x80\\n  [  102.130564][T14893]  migrate_device_finalize+0x9b/0x530\\n  [  102.131640][T14893]  dmirror_migrate_to_device.constprop.0+0x7c5/0xad0\\n  [  102.133047][T14893]  dmirror_fops_unlocked_ioctl+0x89b/0xc80\\n\\nLikely, nothing else goes wrong: putting the last folio reference will\\nremove the folio from the LRU again.  So besides memcg complaining, adding\\nthe folio to be freed to the LRU is just an unnecessary step.\\n\\nThe new flow resembles what we have in migrate_folio_move(): add the dst\\nto the lr"]
[18.54801, "o", "u, rem\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21883\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nice: Fix deinitializing VF in error path\\n\\nIf ice_ena_vfs() fails after calling ice_create_vf_entries(), it frees\\nall VFs without removing them from snapshot PF-VF mailbox list, leading\\nto list corruption.\\n\\nReproducer:\\n  devlink dev eswitch set $PF1_PCI mode switchdev\\n  ip l s $PF1 up\\n  ip l s $PF1 promisc on\\n  sleep 1\\n  echo 1 > /sys/class/net/$PF1/device/sriov_numvfs\\n  sleep 1\\n  echo 1 > /sys/class/net/$PF1/device/sriov_numvfs\\n\\nTrace (minimized):\\n  list_add corruption. next->prev should be prev (ffff8882e241c6f0), but was 0000000000000000. (next=ffff888455da1330).\\n  kernel BUG at lib/list_debug.c:29!\\n  RIP: 0010:__list_add_valid_or_repor"]
[18.548153, "o", "t+0xa6/0x100\\n   ice_mbx_init_vf_info+0xa7/0x180 [ice]\\n   ice_initialize_vf_entry+0x1fa/0x250 [ice]\\n   ice_sriov_configure+0x8d7/0x1520 [ice]\\n   ? __percpu_ref_switch_mode+0x1b1/0x5d0\\n   ? __pfx_ice_sriov_configure+0x10/0x10 [ice]\\n\\nSometimes a KASAN report can be seen instead with a similar stack trace:\\n  BUG: KASAN: use-after-free in __list_add_valid_or_report+0xf1/0x100\\n\\nVFs are added to this list in ice_mbx_init_vf_info(), but only removed\\nin ice_free_vfs(). Move the removing to ice_free_vf_entries(), which is\\nalso being called in other places where VFs are being removed (including\\nice_free_vfs() itself).\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21911\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\ndrm/imagination: avoid deadlock on fence release\\n\\nDo sched"]
[18.548262, "o", "uler queue fence release processing on a workqueue, rather\\nthan in the release function itself.\\n\\nFixes deadlock issues such as the following:\\n\\n[  607.400437] ============================================\\n[  607.405755] WARNING: possible recursive locking detected\\n[  607.415500] --------------------------------------------\\n[  607.420817] weston:zfq0/24149 is trying to acquire lock:\\n[  607.426131] ffff000017d041a0 (reservation_ww_class_mutex){+.+.}-{3:3}, at: pvr_gem_object_vunmap+0x40/0xc0 [powervr]\\n[  607.436728]\\n               but task is already holding lock:\\n[  607.442554] ffff000017d105a0 (reservation_ww_class_mutex){+.+.}-{3:3}, at: dma_buf_ioctl+0x250/0x554\\n[  607.451727]\\n               other info that might help us debug this:\\n[  607.458245]  Possible unsafe locking scenario:\\n\\n[  607.464155]        CPU0\\n[  607.466601]        ----\\n[  607.469044]   lock(reservation_ww_class_mutex);\\n[  607.473584]   lock(reservation_ww_class_mutex);\\n[  607.478114]\\n                *** DEADLOCK ***\"\u001b[0m"]
[18.548351, "o", "\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21923\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nHID: hid-steam: Fix use-after-free when detaching device\\n\\nWhen a hid-steam device is removed it must clean up the client_hdev used for\\nintercepting hidraw access. This can lead to scheduling deferred work to\\nreattach the input device. Though the cleanup cancels the deferred work, this\\nwas done before the client_hdev itself is cleaned up, so it gets rescheduled.\\nThis patch fixes the ordering to make sure the deferred work is properly\\ncanceled.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21977\"\u001b[0m\u001b[1;39m,\r\n"]
[18.548389, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nfbdev: hyperv_fb: Fix hang in kdump kernel when on Hyper-V Gen 2 VMs\\n\\nGen 2 Hyper-V VMs boot via EFI and have a standard EFI framebuffer\\ndevice. When the kdump kernel runs in such a VM, loading the efifb\\ndriver may hang because of accessing the framebuffer at the wrong\\nmemory address.\\n\\nThe scenario occurs when the hyperv_fb driver in the original kernel\\nmoves the framebuffer to a different MMIO address because of conflicts\\nwith an already-running efifb or simplefb driver. The hyperv_fb driver\\nthen informs Hyper-V of the change, which is allowed by the Hyper-V FB\\nVMBus device protocol. However, when the kexec command loads the kdump\\nkernel into crash memory via the kexec_file_load() system call, the\\nsystem call doesn't know the framebuffer has moved, and it sets up the\\nkdump screen_info using the original framebuffer address. The transition\\nto the kdump kernel does not go"]
[18.548432, "o", " through the Hyper-V host, so Hyper-V\\ndoes not reset the framebuffer address like it would do on a reboot.\\nWhen efifb tries to run, it accesses a non-existent framebuffer\\naddress, which traps to the Hyper-V host. After many such accesses,\\nthe Hyper-V host thinks the guest is being malicious, and throttles\\nthe guest to the point that it runs very slowly or appears to have hung.\\n\\nWhen the kdump kernel is loaded into crash memory via the kexec_load()\\nsystem call, the problem does not occur. In this case, the kexec command\\nbuilds the screen_info table itself in user space from data returned\\nby the FBIOGET_FSCREENINFO ioctl against /dev/fb0, which gives it the\\nnew framebuffer location.\\n\\nThis problem was originally reported in 2020 [1], resulting in commit\\n3cb73bc3fa2a (\\\"hyperv_fb: Update screen_info after removing old\\nframebuffer\\\"). This commit solved the problem by setting orig_video_isVGA\\nto 0, so the kdump kernel was unaware of the EFI framebuffer. The efifb\\ndriver did not try to load, and no"]
[18.548489, "o", " hang occurred. But in 2024, commit\\nc25a19afb81c (\\\"fbdev/hyperv_fb: Do not clear global screen_info\\\")\\neffectively reverted 3cb73bc3fa2a. Commit c25a19afb81c has no reference\\nto 3cb73bc3fa2a, so perhaps it was done without knowing the implications\\nthat were reported with 3cb73bc3fa2a. In any case, as of commit\\nc25a19afb81c, the original problem came back again.\\n\\nInterestingly, the hyperv_drm driver does not have this problem because\\nit never moves the framebuffer. The difference is that the hyperv_drm\\ndriver removes any conflicting framebuffers *before* allocating an MMIO\\naddress, while the hyperv_fb drivers removes conflicting framebuffers\\n*after* allocating an MMIO address. With the \\\"after\\\" ordering, hyperv_fb\\nmay encounter a conflict and move the framebuffer to a different MMIO\\naddress. But the conflict is essentially bogus because it is removed\\na few lines of code later.\\n\\nRather than fix the problem with the approach from 2020 in commit\\n3cb73bc3fa2a, instead slightly reorder the steps "]
[18.548531, "o", "in hyperv_fb so\\nconflicting framebuffers are removed before allocating an MMIO address.\\nThen the default framebuffer MMIO address should always be available, and\\nthere's never any confusion about which framebuffer address the kdump\\nkernel should use -- it's always the original address provided by\\nthe Hyper-V host. This approach is already used by the hyperv_drm\\ndriver, and is consistent with the usage guidelines at the head of\\nthe module with the function aperture_remove_conflicting_devices().\\n\\nThis approach also solves a related minor problem when kexec_load()\\nis used to load the kdump kernel. With current code, unbinding and\\nrebinding the hyperv_fb driver could result in the framebuffer moving\\nback to the default framebuffer address, because on the rebind there\\nare no conflicts. If such a move is done after the kdump kernel is\\nloaded with the new framebuffer address, at kdump time it could again\\nhave the wrong address.\\n\\nThis problem and fix are described in terms of the kdump kernel, but\\ni"]
[18.548543, "o", "t can also occur\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-21999\"\u001b[0m\u001b[1;39m,\r\n"]
[18.548638, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nproc: fix UAF in proc_get_inode()\\n\\nFix race between rmmod and /proc/XXX's inode instantiation.\\n\\nThe bug is that pde->proc_ops don't belong to /proc, it belongs to a\\nmodule, therefore dereferencing it after /proc entry has been registered\\nis a bug unless use_pde/unuse_pde() pair has been used.\\n\\nuse_pde/unuse_pde can be avoided (2 atomic ops!) because pde->proc_ops\\nnever changes so information necessary for inode instantiation can be\\nsaved _before_ proc_register() in PDE itself and used later, avoiding\\npde->proc_ops->...  dereference.\\n\\n      rmmod                         lookup\\nsys_delete_module\\n                         proc_lookup_de\\n\\t\\t\\t   pde_get(de);\\n\\t\\t\\t   proc_get_inode(dir->i_sb, de);\\n  mod->exit()\\n    proc_remove\\n      remove_proc_subtree\\n       proc_entry_rundown(de);\\n  free_module(mod);\\n\\n                               if (S_ISREG(inode->i_mode))\\n\\t "]
[18.548699, "o", "                        if (de->proc_ops->proc_read_iter)\\n                           --> As module is already freed, will trigger UAF\\n\\nBUG: unable to handle page fault for address: fffffbfff80a702b\\nPGD 817fc4067 P4D 817fc4067 PUD 817fc0067 PMD 102ef4067 PTE 0\\nOops: Oops: 0000 [#1] PREEMPT SMP KASAN PTI\\nCPU: 26 UID: 0 PID: 2667 Comm: ls Tainted: G\\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996)\\nRIP: 0010:proc_get_inode+0x302/0x6e0\\nRSP: 0018:ffff88811c837998 EFLAGS: 00010a06\\nRAX: dffffc0000000000 RBX: ffffffffc0538140 RCX: 0000000000000007\\nRDX: 1ffffffff80a702b RSI: 0000000000000001 RDI: ffffffffc0538158\\nRBP: ffff8881299a6000 R08: 0000000067bbe1e5 R09: 1ffff11023906f20\\nR10: ffffffffb560ca07 R11: ffffffffb2b43a58 R12: ffff888105bb78f0\\nR13: ffff888100518048 R14: ffff8881299a6004 R15: 0000000000000001\\nFS:  00007f95b9686840(0000) GS:ffff8883af100000(0000) knlGS:0000000000000000\\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\\nCR2: fffffbfff80a702b CR3: 0000000117dd2000 CR4: 00000000000006f0\\"]
[18.548788, "o", "nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\\nCall Trace:\\n <TASK>\\n proc_lookup_de+0x11f/0x2e0\\n __lookup_slow+0x188/0x350\\n walk_component+0x2ab/0x4f0\\n path_lookupat+0x120/0x660\\n filename_lookup+0x1ce/0x560\\n vfs_statx+0xac/0x150\\n __do_sys_newstat+0x96/0x110\\n do_syscall_64+0x5f/0x170\\n entry_SYSCALL_64_after_hwframe+0x76/0x7e\\n\\n[adobriyan@gmail.com: don't do 2 atomic ops on the common path]\"\u001b[0m\u001b[1;39m,\r\n"]
[18.548797, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22034\"\u001b[0m\u001b[1;39m,\r\n"]
[18.548898, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nmm/gup: reject FOLL_SPLIT_PMD with hugetlb VMAs\\n\\nPatch series \\\"mm: fixes for device-exclusive entries (hmm)\\\", v2.\\n\\nDiscussing the PageTail() call in make_device_exclusive_range() with\\nWilly, I recently discovered [1] that device-exclusive handling does not\\nproperly work with THP, making the hmm-tests selftests fail if THPs are\\nenabled on the system.\\n\\nLooking into more details, I found that hugetlb is not properly fenced,\\nand I realized that something that was bugging me for longer -- how\\ndevice-exclusive entries interact with mapcounts -- completely breaks\\nmigration/swapout/split/hwpoison handling of these folios while they have\\ndevice-exclusive PTEs.\\n\\nThe program below can be used to allocate 1 GiB worth of pages and making\\nthem device-exclusive on a kernel with CONFIG_TEST_HMM.\\n\\nOnce they are device-exclusive, these folios cannot get swapped out\\n(proc$pid/smaps_r"]
[18.548944, "o", "ollup will always indicate 1 GiB RSS no matter how much\\none forces memory reclaim), and when having a memory block onlined to\\nZONE_MOVABLE, trying to offline it will loop forever and complain about\\nfailed migration of a page that should be movable.\\n\\n# echo offline > /sys/devices/system/memory/memory136/state\\n# echo online_movable > /sys/devices/system/memory/memory136/state\\n# ./hmm-swap &\\n... wait until everything is device-exclusive\\n# echo offline > /sys/devices/system/memory/memory136/state\\n[  285.193431][T14882] page: refcount:2 mapcount:0 mapping:0000000000000000\\n  index:0x7f20671f7 pfn:0x442b6a\\n[  285.196618][T14882] memcg:ffff888179298000\\n[  285.198085][T14882] anon flags: 0x5fff0000002091c(referenced|uptodate|\\n  dirty|active|owner_2|swapbacked|node=1|zone=3|lastcpupid=0x7ff)\\n[  285.201734][T14882] raw: ...\\n[  285.204464][T14882] raw: ...\\n[  285.207196][T14882] page dumped because: migration failure\\n[  285.209072][T14882] page_owner tracks the page as allocated\\n[  285.210915][T14882] "]
[18.548994, "o", "page last allocated via order 0, migratetype\\n  Movable, gfp_mask 0x140dca(GFP_HIGHUSER_MOVABLE|__GFP_COMP|__GFP_ZERO),\\n  id 14926, tgid 14926 (hmm-swap), ts 254506295376, free_ts 227402023774\\n[  285.216765][T14882]  post_alloc_hook+0x197/0x1b0\\n[  285.218874][T14882]  get_page_from_freelist+0x76e/0x3280\\n[  285.220864][T14882]  __alloc_frozen_pages_noprof+0x38e/0x2740\\n[  285.223302][T14882]  alloc_pages_mpol+0x1fc/0x540\\n[  285.225130][T14882]  folio_alloc_mpol_noprof+0x36/0x340\\n[  285.227222][T14882]  vma_alloc_folio_noprof+0xee/0x1a0\\n[  285.229074][T14882]  __handle_mm_fault+0x2b38/0x56a0\\n[  285.230822][T14882]  handle_mm_fault+0x368/0x9f0\\n...\\n\\nThis series fixes all issues I found so far.  There is no easy way to fix\\nwithout a bigger rework/cleanup.  I have a bunch of cleanups on top (some\\nprevious sent, some the result of the discussion in v1) that I will send\\nout separately once this landed and I get to it.\\n\\nI wish we could just use some special present PROT_NONE PTEs instead of\\nthese (non"]
[18.549033, "o", "-present, non-none) fake-swap entries; but that just results in\\nthe same problem we keep having (lack of spare PTE bits), and staring at\\nother similar fake-swap entries, that ship has sailed.\\n\\nWith this series, make_device_exclusive() doesn't actually belong into\\nmm/rmap.c anymore, but I'll leave moving that for another day.\\n\\nI only tested this series with the hmm-tests selftests due to lack of HW,\\nso I'd appreciate some testing, especially if the interaction between two\\nGPUs wanting a device-exclusive entry works as expected.\\n\\n<program>\\n#include <stdio.h>\\n#include <fcntl.h>\\n#include <stdint.h>\\n#include <unistd.h>\\n#include <stdlib.h>\\n#include <string.h>\\n#include <sys/mman.h>\\n#include <sys/ioctl.h>\\n#include <linux/types.h>\\n#include <linux/ioctl.h>\\n\\n#define HMM_DMIRROR_EXCLUSIVE _IOWR('H', 0x05, struct hmm_dmirror_cmd)\\n\\nstruct hmm_dmirror_cmd {\\n\\t__u64 addr;\\n\\t__u64 ptr;\\n\\t__u64 npages;\\n\\t__u64 cpages;\\n\\t__u64 faults;\\n};\\n\\nconst size_t size = 1 * 1024 * 1024 * 1024ul;\\nconst size"]
[18.549097, "o", "_t chunk_size = 2 * 1024 * 1024ul;\\n\\nint m\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n"]
[18.549131, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22053\"\u001b[0m\u001b[1;39m,\r\n"]
[18.549208, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nnet: ibmveth: make veth_pool_store stop hanging\\n\\nv2:\\n- Created a single error handling unlock and exit in veth_pool_store\\n- Greatly expanded commit message with previous explanatory-only text\\n\\nSummary: Use rtnl_mutex to synchronize veth_pool_store with itself,\\nibmveth_close and ibmveth_open, preventing multiple calls in a row to\\nnapi_disable.\\n\\nBackground: Two (or more) threads could call veth_pool_store through\\nwriting to /sys/devices/vio/30000002/pool*/*. You can do this easily\\nwith a little shell script. This causes a hang.\\n\\nI configured LOCKDEP, compiled ibmveth.c with DEBUG, and built a new\\nkernel. I ran this test again and saw:\\n\\n    Setting pool0/active to 0\\n    Setting pool1/active to 1\\n    [   73.911067][ T4365] ibmveth 30000002 eth0: close starting\\n    Setting pool1/active to 1\\n    Setting pool1/active to 0\\n    [   73.911367][ T4366] ibmveth 30000002 eth0:"]
[18.549221, "o", " close starting\\n    [   73.916056][ T4365] ibmveth 30000002 eth0: close complete\\n    [   73.916064][ T4365] ibmveth 30000002 eth0: open starting\\n    [  110.808564][  T712] systemd-journald[712]: Sent WATCHDOG=1 notification.\\n    [  230.808495][  T712] systemd-journald[712]: Sent WATCHDOG=1 notification.\\n    [  243.683786][  T123] INFO: task stress.sh:4365 blocked for more than 122 seconds.\\n    [  243.683827][  T123]       Not tainted 6.14.0-01103-g2df0c02dab82-dirty #8\\n    [  243.683833][  T123] \\\"echo 0 > /proc/sys/kernel/hung_task_timeout_secs\\\" disables this message.\\n    [  243.683838][  T123] task:stress.sh       state:D stack:28096 pid:4365  tgid:4365  ppid:4364   task_flags:0x400040 flags:0x00042000\\n    [  243.683852][  T123] Call Trace:\\n    [  243.683857][  T123] [c00000000c38f690] [0000000000000001] 0x1 (unreliable)\\n    [  243.683868][  T123] [c00000000c38f840] [c00000000001f908] __switch_to+0x318/0x4e0\\n    [  243.683878][  T123] [c00000000c38f8a0] [c000000001549a70] __schedule+0x500/0x12a"]
[18.549315, "o", "0\\n    [  243.683888][  T123] [c00000000c38f9a0] [c00000000154a878] schedule+0x68/0x210\\n    [  243.683896][  T123] [c00000000c38f9d0] [c00000000154ac80] schedule_preempt_disabled+0x30/0x50\\n    [  243.683904][  T123] [c00000000c38fa00] [c00000000154dbb0] __mutex_lock+0x730/0x10f0\\n    [  243.683913][  T123] [c00000000c38fb10] [c000000001154d40] napi_enable+0x30/0x60\\n    [  243.683921][  T123] [c00000000c38fb40] [c000000000f4ae94] ibmveth_open+0x68/0x5dc\\n    [  243.683928][  T123] [c00000000c38fbe0] [c000000000f4aa20] veth_pool_store+0x220/0x270\\n    [  243.683936][  T123] [c00000000c38fc70] [c000000000826278] sysfs_kf_write+0x68/0xb0\\n    [  243.683944][  T123] [c00000000c38fcb0] [c0000000008240b8] kernfs_fop_write_iter+0x198/0x2d0\\n    [  243.683951][  T123] [c00000000c38fd00] [c00000000071b9ac] vfs_write+0x34c/0x650\\n    [  243.683958][  T123] [c00000000c38fdc0] [c00000000071bea8] ksys_write+0x88/0x150\\n    [  243.683966][  T123] [c00000000c38fe10] [c0000000000317f4] system_call_exception+0x124/0x340\\n  "]
[18.549416, "o", "  [  243.683973][  T123] [c00000000c38fe50] [c00000000000d05c] system_call_vectored_common+0x15c/0x2ec\\n    ...\\n    [  243.684087][  T123] Showing all locks held in the system:\\n    [  243.684095][  T123] 1 lock held by khungtaskd/123:\\n    [  243.684099][  T123]  #0: c00000000278e370 (rcu_read_lock){....}-{1:2}, at: debug_show_all_locks+0x50/0x248\\n    [  243.684114][  T123] 4 locks held by stress.sh/4365:\\n    [  243.684119][  T123]  #0: c00000003a4cd3f8 (sb_writers#3){.+.+}-{0:0}, at: ksys_write+0x88/0x150\\n    [  243.684132][  T123]  #1: c000000041aea888 (&of->mutex#2){+.+.}-{3:3}, at: kernfs_fop_write_iter+0x154/0x2d0\\n    [  243.684143][  T123]  #2: c0000000366fb9a8 (kn->active#64){.+.+}-{0:0}, at: kernfs_fop_write_iter+0x160/0x2d0\\n    [  243.684155][  T123]  #3: c000000035ff4cb8 (&dev->lock){+.+.}-{3:3}, at: napi_enable+0x30/0x60\\n    [  243.684166][  T123] 5 locks held by stress.sh/4366:\\n    [  243.684170][  T123]  #0: c00000003a4cd3f8 (sb_writers#3){.+.+}-{0:0}, at: ksys_write+0x88/0x150\\n    [  2"]
[18.54948, "o", "43.\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22093\"\u001b[0m\u001b[1;39m,\r\n"]
[18.549497, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\ndrm/amd/display: avoid NPD when ASIC does not support DMUB\\n\\nctx->dmub_srv will de NULL if the ASIC does not support DMUB, which is\\ntested in dm_dmub_sw_init.\\n\\nHowever, it will be dereferenced in dmub_hw_lock_mgr_cmd if\\nshould_use_dmub_lock returns true.\\n\\nThis has been the case since dmub support has been added for PSR1.\\n\\nFix this by checking for dmub_srv in should_use_dmub_lock.\\n\\n[   37.440832] BUG: kernel NULL pointer dereference, address: 0000000000000058\\n[   37.447808] #PF: supervisor read access in kernel mode\\n[   37.452959] #PF: error_code(0x0000) - not-present page\\n[   37.458112] PGD 0 P4D 0\\n[   37.460662] Oops: Oops: 0000 [#1] PREEMPT SMP NOPTI\\n[   37.465553] CPU: 2 UID: 1000 PID: 1745 Comm: DrmThread Not tainted 6.14.0-rc1-00003-gd62e938120f0 #23 99720e1cb1e0fc4773b8513150932a07de3c6e88\\n[   37.478324] Hardware name: Google Morphius/Morphius, BIOS Google_Morphi"]
[18.549611, "o", "us.13434.858.0 10/26/2023\\n[   37.487103] RIP: 0010:dmub_hw_lock_mgr_cmd+0x77/0xb0\\n[   37.492074] Code: 44 24 0e 00 00 00 00 48 c7 04 24 45 00 00 0c 40 88 74 24 0d 0f b6 02 88 44 24 0c 8b 01 89 44 24 08 85 f6 75 05 c6 44 24 0e 01 <48> 8b 7f 58 48 89 e6 ba 01 00 00 00 e8 08 3c 2a 00 65 48 8b 04 5\\n[   37.510822] RSP: 0018:ffff969442853300 EFLAGS: 00010202\\n[   37.516052] RAX: 0000000000000000 RBX: ffff92db03000000 RCX: ffff969442853358\\n[   37.523185] RDX: ffff969442853368 RSI: 0000000000000001 RDI: 0000000000000000\\n[   37.530322] RBP: 0000000000000001 R08: 00000000000004a7 R09: 00000000000004a5\\n[   37.537453] R10: 0000000000000476 R11: 0000000000000062 R12: ffff92db0ade8000\\n[   37.544589] R13: ffff92da01180ae0 R14: ffff92da011802a8 R15: ffff92db03000000\\n[   37.551725] FS:  0000784a9cdfc6c0(0000) GS:ffff92db2af00000(0000) knlGS:0000000000000000\\n[   37.559814] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\\n[   37.565562] CR2: 0000000000000058 CR3: 0000000112b1c000 CR4: 00000000003506f0\\n[   37.572697]"]
[18.549706, "o", " Call Trace:\\n[   37.575152]  <TASK>\\n[   37.577258]  ? __die_body+0x66/0xb0\\n[   37.580756]  ? page_fault_oops+0x3e7/0x4a0\\n[   37.584861]  ? exc_page_fault+0x3e/0xe0\\n[   37.588706]  ? exc_page_fault+0x5c/0xe0\\n[   37.592550]  ? asm_exc_page_fault+0x22/0x30\\n[   37.596742]  ? dmub_hw_lock_mgr_cmd+0x77/0xb0\\n[   37.601107]  dcn10_cursor_lock+0x1e1/0x240\\n[   37.605211]  program_cursor_attributes+0x81/0x190\\n[   37.609923]  commit_planes_for_stream+0x998/0x1ef0\\n[   37.614722]  update_planes_and_stream_v2+0x41e/0x5c0\\n[   37.619703]  dc_update_planes_and_stream+0x78/0x140\\n[   37.624588]  amdgpu_dm_atomic_commit_tail+0x4362/0x49f0\\n[   37.629832]  ? srso_return_thunk+0x5/0x5f\\n[   37.633847]  ? mark_held_locks+0x6d/0xd0\\n[   37.637774]  ? _raw_spin_unlock_irq+0x24/0x50\\n[   37.642135]  ? srso_return_thunk+0x5/0x5f\\n[   37.646148]  ? lockdep_hardirqs_on+0x95/0x150\\n[   37.650510]  ? srso_return_thunk+0x5/0x5f\\n[   37.654522]  ? _raw_spin_unlock_irq+0x2f/0x50\\n[   37.658883]  ? srso_return_thunk+0x5/0x5f\\n[   3"]
[18.549753, "o", "7.662897]  ? wait_for_common+0x186/0x1c0\\n[   37.666998]  ? srso_return_thunk+0x5/0x5f\\n[   37.671009]  ? drm_crtc_next_vblank_start+0xc3/0x170\\n[   37.675983]  commit_tail+0xf5/0x1c0\\n[   37.679478]  drm_atomic_helper_commit+0x2a2/0x2b0\\n[   37.684186]  drm_atomic_commit+0xd6/0x100\\n[   37.688199]  ? __cfi___drm_printfn_info+0x10/0x10\\n[   37.692911]  drm_atomic_helper_update_plane+0xe5/0x130\\n[   37.698054]  drm_mode_cursor_common+0x501/0x670\\n[   37.702600]  ? __cfi_drm_mode_cursor_ioctl+0x10/0x10\\n[   37.707572]  drm_mode_cursor_ioctl+0x48/0x70\\n[   37.711851]  drm_ioctl_kernel+0xf2/0x150\\n[   37.715781]  drm_ioctl+0x363/0x590\\n[   37.719189]  ? __cfi_drm_mode_cursor_ioctl+0x10/0x10\\n[   37.724165]  amdgpu_drm_ioctl+0x41/0x80\\n[   37.728013]  __se_sys_ioctl+0x7f/0xd0\\n[   37.731685]  do_syscall_64+0x87/0x100\\n[   37.735355]  ? vma_end_read+0x12/0xe0\\n[   37.739024]  ? srso_return_thunk+0x5/0x5f\\n[   37.743041]  ? find_held_lock+0x47/0xf0\\n[   37.746884]  ? vma_end_read+0x12/0xe0\\n[   37.750552]  ? srso_re"]
[18.549798, "o", "turn_thunk+0x5/0\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22107\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nnet: dsa: sja1105: fix kasan out-of-bounds warning in sja1105_table_delete_entry()\\n\\nThere are actually 2 problems:\\n- deleting the last element doesn't require the memmove of elements\\n  [i + 1, end) over it. Actually, element i+1 is out of bounds.\\n- The memmove itself should move size - i - 1 elements, because the last\\n  element is out of bounds.\\n\\nThe out-of-bounds element still remains out of bounds after being\\naccessed, so the problem is only that we touch it, not that it becomes\\nin active use. But I suppose it can lead to issues if the out-of-bounds\\nelement is part of an unmapped page.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keywo"]
[18.549844, "o", "rd\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22130\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Soft Serve is a self-hostable Git server for the command line. Prior to 0.8.2 , a path traversal attack allows existing non-admin users to access and take over other user's repositories. A malicious user then can modify, delete, and arbitrarily repositories as if they were an admin user without explicitly giving them permissions. This is patched in v0.8.2.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22137\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Pingvin Share is a self-hosted file sharing platform and an alternative for WeTransfer. This vulnerability allows an authenticated or unauthenticated (if anonymous shares are allow"]
[18.549953, "o", "ed) user to overwrite arbitrary files on the server, including sensitive system files, via HTTP POST requests. The issue has been patched in version 1.4.0.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22146\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Sentry is a developer-first error tracking and performance monitoring tool. A critical vulnerability was discovered in the SAML SSO implementation of Sentry. It was reported to us via our private bug bounty program. The vulnerability allows an attacker to take over any user account by using a malicious SAML Identity Provider and another organization on the same Sentry instance. The victim email address must be known in order to exploit this vulnerability. The Sentry SaaS fix was deployed on Jan 14, 2025. For self hosted users; if only a single organization is allowed `(SENTRY_SINGLE_ORGANIZATION "]
[18.549996, "o", "= True)`, then no action is needed. Otherwise, users should upgrade to version 25.1.0 or higher. There are no known workarounds for this vulnerability.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22152\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Atheos is a self-hosted browser-based cloud IDE. Prior to v600, the $path and $target parameters are not properly validated across multiple components, allowing an attacker to read, modify, or execute arbitrary files on the server. These vulnerabilities can be exploited through various attack vectors present in multiple PHP files. This vulnerability is fixed in v600.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22248\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"descripti"]
[18.550031, "o", "on\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"The bitnami/pgpool Docker image, and the bitnami/postgres-ha k8s chart, under default configurations, comes with an 'repmgr' user that allows unauthenticated access to the database inside the cluster. The PGPOOL_SR_CHECK_USER is the user that Pgpool itself uses to perform streaming replication checks against nodes, and should not be at trust level. This allows to log into a PostgreSQL database using the repgmr user without authentication. If Pgpool is exposed externally, a potential attacker could use this user to get access to the service. This is also present within the bitnami/postgres-ha Kubernetes Helm chart.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22605\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. St"]
[18.55008, "o", "arting in version 4.0.0-beta.18 and prior to 4.0.0-beta.253, a vulnerability in the execution of commands on remote servers allows an authenticated user to execute arbitrary code on the local Coolify container, gaining access to data and private keys or tokens of other users/teams. The ability to inject malicious commands into the Coolify container gives authenticated attackers the ability to fully retrieve and control the data and availability of the software. Centrally hosted Coolify instances (open registration and/or multiple teams with potentially untrustworthy users) are especially at risk, as sensitive data of all users and connected servers can be leaked by any user. Additionally, attackers are able to modify the running software, potentially deploying malicious images to remote nodes or generally changing its behavior. Version 4.0.0-beta.253 patches this issue.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.550186, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22606\"\u001b[0m\u001b[1;39m,\r\n"]
[18.550225, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. In version 4.0.0-beta.358 and possibly earlier versions, when creating or updating a \\\"project,\\\" it is possible to inject arbitrary shell commands by altering the project name. If a name includes unescaped characters, such as single quotes (`'`), it breaks out of the intended command structure, allowing attackers to execute arbitrary commands on the host system. This vulnerability allows attackers to execute arbitrary commands on the host server, which could result in full system compromise; create, modify, or delete sensitive system files; and escalate privileges depending on the permissions of the executed process. Attackers with access to project management features could exploit this flaw to gain unauthorized control over the host environment. Version 4.0.0-beta.359 fixes this issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;"]
[18.550303, "o", "32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n"]
[18.550366, "o", "      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22607\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Prior to version 4.0.0-beta.361, the missing authorization allows any authenticated user to fetch the details page for any GitHub / GitLab configuration on a Coolify instance by only knowing the UUID of the model. This exposes the \\\"client id\\\", \\\"client secret\\\" and \\\"webhook secret.\\\" Version 4.0.0-beta.361 fixes this issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22608\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Prior to version 4.0.0-beta.361, the missing authorization allows any authenticated user to revo"]
[18.550459, "o", "ke any team invitations on a Coolify instance by only providing a predictable and incrementing ID, resulting in a Denial-of-Service attack (DOS). Version 4.0.0-beta.361 fixes the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22609\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Prior to version 4.0.0-beta.361, the missing authorization allows any authenticated user to attach any existing private key on a coolify instance to his own server. If the server configuration of IP / domain, port (most likely 22) and user (root) matches with the victim's server configuration, then the attacker can use the `Terminal` feature and execute arbitrary commands on the victim's server. Version 4.0.0-beta.361 fixes the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"ma"]
[18.550471, "o", "tched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22610\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Prior to version 4.0.0-beta.361, the missing authorization allows any authenticated user to fetch the global coolify instance OAuth configuration. This exposes the \\\"client id\\\" and \\\"client secret\\\" for every custom OAuth provider. The attacker can also modify the global OAuth configuration. Version 4.0.0-beta.361 fixes the issue.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.550476, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22611\"\u001b[0m\u001b[1;39m,\r\n"]
[18.550547, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Prior to version 4.0.0-beta.361, the missing authorization allows any authenticated user to escalate his or any other team members privileges to any role, including the owner role. He's also able to kick every other member out of the team, including admins and owners. This allows the attacker to access the `Terminal` feature and execute remote commands. Version 4.0.0-beta.361 fixes the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22612\"\u001b[0m\u001b[1;39m,\r\n"]
[18.550574, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Prior to version 4.0.0-beta.374, the missing authorization allows an authenticated user to retrieve any existing private keys on a coolify instance in plain text. If the server configuration of IP / domain, port (most likely 22) and user (root) matches with the victim's server configuration, then the attacker can execute arbitrary commands on the remote server. Version 4.0.0-beta.374 fixes the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-22872\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"The tokenizer incorrectly interprets tags with unquoted attribute values that end with a solidus character (/) as self-closing. When directly using Tokenizer, this can result in such tags incorrectly "]
[18.550582, "o", "being marked as self-closing, and when using the Parse functions, this can result in content following such tags as being placed in the wrong scope during DOM construction, but only when tags are in foreign content (e.g. <math>, <svg>, etc contexts).\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n"]
[18.550708, "o", "    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-23138\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nwatch_queue: fix pipe accounting mismatch\\n\\nCurrently, watch_queue_set_size() modifies the pipe buffers charged to\\nuser->pipe_bufs without updating the pipe->nr_accounted on the pipe\\nitself, due to the if (!pipe_has_watch_queue()) test in\\npipe_resize_ring(). This means that when the pipe is ultimately freed,\\nwe decrement user->pipe_bufs by something other than what than we had\\ncharged to it, potentially leading to an underflow. This in turn can\\ncause subsequent too_many_pipe_buffers_soft() tests to fail with -EPERM.\\n\\nTo remedy this, explicitly account for the pipe usage in\\nwatch_queue_set_size() to match the number set via account_pipe_buffers()\\n\\n(It's unclear why watch_queue_set_size() does not update nr_accounted;\\nit may be due to intentional overprovisioning in watch_queue_set_s"]
[18.550726, "o", "ize()?)\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-23141\"\u001b[0m\u001b[1;39m,\r\n"]
[18.550813, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nKVM: x86: Acquire SRCU in KVM_GET_MP_STATE to protect guest memory accesses\\n\\nAcquire a lock on kvm->srcu when userspace is getting MP state to handle a\\nrather extreme edge case where \\\"accepting\\\" APIC events, i.e. processing\\npending INIT or SIPI, can trigger accesses to guest memory.  If the vCPU\\nis in L2 with INIT *and* a TRIPLE_FAULT request pending, then getting MP\\nstate will trigger a nested VM-Exit by way of ->check_nested_events(), and\\nemuating the nested VM-Exit can access guest memory.\\n\\nThe splat was originally hit by syzkaller on a Google-internal kernel, and\\nreproduced on an upstream kernel by hacking the triple_fault_event_test\\nselftest to stuff a pending INIT, store an MSR on VM-Exit (to generate a\\nmemory access on VMX), and do vcpu_mp_state_get() to trigger the scenario.\\n\\n  =============================\\n  WARNING: suspicious RCU usage\\n  6.14.0-rc3-b112d356"]
[18.55094, "o", "288b-vmx/pi_lockdep_false_pos-lock #3 Not tainted\\n  -----------------------------\\n  include/linux/kvm_host.h:1058 suspicious rcu_dereference_check() usage!\\n\\n  other info that might help us debug this:\\n\\n  rcu_scheduler_active = 2, debug_locks = 1\\n  1 lock held by triple_fault_ev/1256:\\n   #0: ffff88810df5a330 (&vcpu->mutex){+.+.}-{4:4}, at: kvm_vcpu_ioctl+0x8b/0x9a0 [kvm]\\n\\n  stack backtrace:\\n  CPU: 11 UID: 1000 PID: 1256 Comm: triple_fault_ev Not tainted 6.14.0-rc3-b112d356288b-vmx #3\\n  Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 0.0.0 02/06/2015\\n  Call Trace:\\n   <TASK>\\n   dump_stack_lvl+0x7f/0x90\\n   lockdep_rcu_suspicious+0x144/0x190\\n   kvm_vcpu_gfn_to_memslot+0x156/0x180 [kvm]\\n   kvm_vcpu_read_guest+0x3e/0x90 [kvm]\\n   read_and_check_msr_entry+0x2e/0x180 [kvm_intel]\\n   __nested_vmx_vmexit+0x550/0xde0 [kvm_intel]\\n   kvm_check_nested_events+0x1b/0x30 [kvm]\\n   kvm_apic_accept_events+0x33/0x100 [kvm]\\n   kvm_arch_vcpu_ioctl_get_mpstate+0x30/0x1d0 [kvm]\\n   kvm_vcpu_ioctl+0x33e/0x"]
[18.551, "o", "9a0 [kvm]\\n   __x64_sys_ioctl+0x8b/0xb0\\n   do_syscall_64+0x6c/0x170\\n   entry_SYSCALL_64_after_hwframe+0x4b/0x53\\n   </TASK>\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-23205\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"nbgrader is a system for assigning and grading notebooks. Enabling frame-ancestors: 'self' grants any JupyterHub user the ability to extract formgrader content by sending malicious links to users with access to formgrader, at least when using the default JupyterHub configuration of `enable_subdomains = False`. #1915 disables a protection which would allow user Alice to craft a page embedding formgrader in an IFrame. If Bob visits that page, his credentials will be sent and the formgrader page loaded. Because Alice's page is on the same Origin as the formgrader iframe, Javasript on Alice's page has _full access_ to the content"]
[18.551056, "o", "s of the page served by formgrader using Bob's credentials. This issue has been addressed in release 0.9.5 and all users are advised to upgrade. Users unable to upgrade may disable `frame-ancestors: self`, or enable per-user and per-service subdomains with `JupyterHub.enable_subdomains = True` (then even if embedding in an IFrame is allowed, the host page does not have access to the contents of the frame).\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-23214\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Cosmos provides users the ability self-host a home server by acting as a secure gateway to your application, as well as a server manager. By monitoring the error code returned in the login, it is possible to figure out whether a user exist or not in the database. Patched in 0.17.7.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b"]
[18.551089, "o", "[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-23215\"\u001b[0m\u001b[1;39m,\r\n"]
[18.551111, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"PMD is an extensible multilanguage static code analyzer. The passphrase for the PMD and PMD Designer release signing keys are included in jar published to Maven Central. The private key itself is not known to have been compromised itself, but given its passphrase is, it must also be considered potentially compromised. As a mitigation, both compromised keys have been revoked so that no future use of the keys are possible. Note, that the published artifacts in Maven Central under the group id net.sourceforge.pmd are not compromised and the signatures are valid.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-23620\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting') vulnerability in Alexey Trofimov Captchelfie – Capt"]
[18.551213, "o", "cha by Selfie allows Reflected XSS.This issue affects Captchelfie – Captcha by Selfie: from n/a through 1.0.7.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.551318, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-24025\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Coolify is an open-source and self-hostable tool for managing servers, applications, and databases. Prior to version 4.0.0-beta.380, the tags page allows users to search for tags. If the search does not return any results, the query gets reflected on the error modal, which leads to cross-site scripting. Version 4.0.0-beta.380 fixes the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-24807\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"eprosima Fast DDS is a C++ implementation of the DDS (Data Distribution Service) standard of the OMG (Object Management Group). Prior to versions 2.6.10, 2.10.7, 2"]
[18.551379, "o", ".14.5, 3.0.2, 3.1.2, and 3.2.0, per design, PermissionsCA is not full chain validated, nor is the expiration date validated. Access control plugin validates only the S/MIME signature which causes an expired PermissionsCA to be taken as valid. Even though this issue is responsible for allowing `governance/permissions` from an expired PermissionsCA and having the system crash when PermissionsCA is not self-signed and contains the full-chain, the impact is low. Versions 2.6.10, 2.10.7, 2.14.5, 3.0.2, 3.1.2, and 3.2.0 contain a fix for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-24888\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"The SecureDrop Client is a desktop application for journalists to communicate with sources and work with submissions on the SecureDrop Workstation. Prior to version 0.14.1, a malicious SecureDrop Server could o"]
[18.551439, "o", "btain code execution on the SecureDrop Client virtual machine (`sd-app`). SecureDrop Server itself has multiple layers of built-in hardening, and is a dedicated physical machine exposed on the internet only via Tor hidden services for the Source and Journalist interfaces, and optionally via remote SSH access over another Tor hidden service. A newsroom's SecureDrop Workstation communicates only with its own dedicated SecureDrop Server.\\n\\nThe SecureDrop Client runs in a dedicated Qubes virtual machine, named `sd-app`, as part of the SecureDrop Workstation. The private OpenPGP key used to decrypt submissions and replies is stored in a separate virtual machine and never accessed directly. The vulnerability lies in the code responsible for downloading replies. The filename of the reply is obtained from the `Content-Disposition` HTTP header and used to write the encrypted reply on disk. Note that filenames are generated and sanitized server-side, and files are downloaded in an encrypted format, so a remote attacke"]
[18.551461, "o", "r who has not achieved server compromise, such as one posing as a source, could not craft the HTTP response necessary for this attack.\\n\\nWhile the filename is later checked to guard against path traversal before being moved into the Client’s data storage directory, the file has already been written to a potentially arbitrary location. In this case, `safe_move()` would detect the path traversal and fail, leaving the original downloaded file in the attacker-chosen directory. Code execution can be gained by writing an autostart file in `/home/user/.config/autostart/`.\\n\\nVersion 0.14.1 fixes the issue. As of time of publication, there is no known evidence of exploitation in the wild. This attack requires a previously compromised SecureDrop Server.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n"]
[18.551465, "o", "      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-24889\"\u001b[0m\u001b[1;39m,\r\n"]
[18.551551, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"The SecureDrop Client is a desktop application for journalists to communicate with sources and work with submissions on the SecureDrop Workstation. Prior to versions 0.14.1 and 1.0.1, an attacker who has already gained code execution in a virtual machine on the SecureDrop Workstation could gain code execution in the `sd-log` virtual machine by sending a specially crafted log entry. The vulnerability is not exploitable remotely and requires an attacker to already have code execution on one of the other virtual machines (VMs) of the system. Due to the Workstation's underlying usage of Qubes for strong isolation, the vulnerability would have allowed lateral movement between any log-enabled VM and the `sd-log` VM, but no further. The SecureDrop workstation collects logs centrally in an isolated virtual machine named `sd-log` for easy export for support and debugging purposes. The `sd-log`  VM is completely isolated from the internet and ingests logs via a nar"]
[18.551642, "o", "row Qubes RPC policy that allows for specific inter-VM communication via the Xen vchan protocol used by Qubes's qrexec mechanism. A path traversal bug was found in the logic used to choose where to write the log file for a specific VM: the VM name, used unsanitized in the destination path in `sd-log`, is supplied by the logging VM itself instead of being read from a trusted source, such as the Qubes environment variable `QREXEC_REMOTE_DOMAIN` that is used in the fixed implementation. An attacker could provide an arbitrary source VM name, possibly overwriting logs of other VMs, or writing a file named `syslog.log`, with attacker-controlled content, in arbitrary directories as a low-privileged user. A successful attack could potentially overwrite or add configuration to software that loads configuration files from a directory. This is exploitable to achieve code execution by setting the target directory to `/home/user/.config/autostart/` and letting it write `syslog.log`, because XFCE treats any file in that di"]
[18.551684, "o", "rectory as a `.desktop` file regardless of its extension. Versions 0.14.1 and 1.0.1 contain a patch for this issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-25182\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Stroom is a data processing, storage and analysis platform. A vulnerability exists starting in version 7.2-beta.53 and prior to versions 7.2.24, 7.3-beta.22, 7.4.4, and 7.5-beta.2 that allows authentication bypass to a Stroom system when configured with ALB and installed in a way that the application is accessible not through the ALB itself. This vulnerability may also allow for server-side request forgery which may lead to code execution or further privileges escalations when using the AWS metadata URL. This scenario assumes that Stroom must be configured to use ALB Authentication integration and the application is network accessible."]
[18.55172, "o", " The vulnerability has been fixed in versions 7.2.24, 7.3-beta.22, 7.4.4, and 7.5-beta.2.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-25205\"\u001b[0m\u001b[1;39m,\r\n"]
[18.551802, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Audiobookshelf is a self-hosted audiobook and podcast server. Starting in version 2.17.0 and prior to version 2.19.1, a flaw in the authentication bypass logic allows unauthenticated requests to match certain unanchored regex patterns in the URL. Attackers can craft URLs containing substrings like \\\"/api/items/1/cover\\\" in a query parameter (?r=/api/items/1/cover) to partially bypass authentication or trigger server crashes under certain routes. This could lead to information disclosure of otherwise protected data and, in some cases, a complete denial of service (server crash) if downstream code expects an authenticated user object. Version 2.19.1 contains a patch for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-25539\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Local File Inclu"]
[18.551827, "o", "sion vulnerability in Vasco v3.14and before allows a remote attacker to obtain sensitive information via help menu.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-25565\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"SoftEther VPN 5.02.5187 is vulnerable to Buffer Overflow in the Command.c file via the PtMakeCert and PtMakeCert2048 functions. NOTE: the Supplier disputes this because the behavior only allows a user to attack himself by typing a long string on a command line.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-25567\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"SoftEther VPN 5.02.5187 is vulnerable to Buffer Overflow in Internat.c via the UniToStrForSingleChars function. NOTE"]
[18.551886, "o", ": the Supplier disputes this because the behavior only enables a local user to attack himself through the UI,\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n"]
[18.55205, "o", "    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-25730\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"An issue in Motorola Mobility Droid Razr HD (Model XT926) System Version: 9.18.94.XT926.Verizon.en.US allows physically proximate unauthorized attackers to access USB debugging, leading to control of the host device itself.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-26394\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"SolarWinds Observability Self-Hosted\\n\\n is susceptible to an open redirection vulnerability. The URL is not properly sanitized, and an attacker could manipulate the string to redirect a user to a malicious site. The attack complexity is high, and authentication is required.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.552134, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-26395\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"SolarWinds Observability Self-Hosted\\n\\n was susceptible to a cross-site scripting (XSS) vulnerability due to an unsanitized field in the URL. The attack requires authentication using an administrator-level account and user interaction is required.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27137\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Dependency-Track is a component analysis platform that allows organizations to identify and reduce risk in the software supply chain. Dependency-Track allows users with the `SYSTEM_CONFIGURATION` permission to customize notification templates. Templates are e"]
[18.552143, "o", "valuated using the Pebble template engine. Pebble supports an `include` tag, which allows template authors to include the content of arbitrary files upon evaluation. Prior to version 4.12.6, users of Dependency-Track with the `SYSTEM_CONFIGURATION` permission can abuse the `include` tag by crafting notification templates that `include` sensitive local files, such as `/etc/passwd` or `/proc/1/environ`. By configuring such a template for a notification rule (aka \\\"Alert\\\"), and having it send notifications to a destination controlled by the actor, sensitive information may be leaked. The issue has been fixed in Dependency-Track 4.12.6. In fixed versions, the `include` tag can no longer be used. Usage of the tag will cause template evaluation to fail. As a workaround, avoid assigning the `SYSTEM_CONFIGURATION` permission to untrusted users. The `SYSTEM_CONFIGURATION` permission per default is only granted to members of the `Administrators` team. Assigning this permission to non-administrative users or teams is a"]
[18.552232, "o", " security risk in itself, and highly discouraged.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27145\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"copyparty, a portable file server, has a DOM-based cross-site scripting vulnerability in versions prior to 1.16.15. The vulnerability is considered low-risk. By handing someone a maliciously-named file, and then tricking them into dragging the file into copyparty's Web-UI, an attacker could execute arbitrary javascript with the same privileges as that user. For example, this could give unintended read-access to files owned by that user. The bug is triggered by the drag-drop action itself; it is not necessary to actually initiate the upload. The file must be empty (zero bytes). Note that, as a general-purpose webserver, it is intentionally possible to upload HTML-files with arbitrary javascript in `<s"]
[18.552266, "o", "cript>` tags, which will execute when the file is opened. The difference is that this vulnerability would trigger execution of javascript during the act of uploading, and not when the uploaded file was opened. Version 1.16.15 contains a fix.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27148\"\u001b[0m\u001b[1;39m,\r\n"]
[18.552332, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Gradle is a build automation tool, and its native-platform tool provides Java bindings for native APIs. On Unix-like systems, the system temporary directory can be created with open permissions that allow multiple users to create and delete files within it. This library initialization could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory. Gradle builds that rely on versions of net.rubygrapefruit:native-platform prior to 0.22-milestone-28 could be vulnerable to a local privilege escalation from an attacker quickly deleting and recreating files in the system temporary directory.\\n\\nIn net.rubygrapefruit:native-platform prior to version 0.22-milestone-28, if the `Native.get(Class<>)` method was called, without calling `Native.init(File)` first, with a non-`null` argument used as working file path, then the library would initialize itself using the system temporary director"]
[18.552407, "o", "y and NativeLibraryLocator.java lines 68 through 78. Version 0.22-milestone-28 has been released with changes that fix the problem. Initialization is now mandatory and no longer uses the system temporary directory, unless such a path is passed for initialization. The only workaround for affected versions is to make sure to do a proper initialization, using a location that is safe.\\n\\nGradle 8.12, only that exact version, had codepaths where the initialization of the underlying native integration library took a default path, relying on copying the binaries to the system temporary directory. Any execution of Gradle exposed this exploit. Users of Windows or modern versions of macOS are not vulnerable, nor are users of a Unix-like operating system with the \\\"sticky\\\" bit set or `noexec` on their system temporary directory vulnerable. This problem was fixed in Gradle 8.12.1. Gradle 8.13 release also upgrades to a version of the native library that no longer has that bug. Some workarounds are available. On Unix-lik"]
[18.552455, "o", "e operating systems, ensure that the \\\"sticky\\\" bit is set. This only allows the original user (or root) to delete a file. Mounting `/tmp` as `noexec` will prevent Gradle 8.12 from starting. Those who are are unable to change the permissions of the system temporary directory can move the Java temporary directory by setting the System Property java.io.tmpdir. The new path needs to limit permissions to the build user only.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27157\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Mastodon is a self-hosted, federated microblogging platform. Starting in version 4.2.0 and prior to versions 4.2.16 and 4.3.4, the rate limits are missing on `/auth/setup`. Without those rate limits, an attacker can craft requests that will send an email to an arbitrary addresses. Versions 4.2.16 and 4.3.4 fix the issue.\"\u001b[0m\u001b[1;39m"]
[18.552518, "o", ",\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27399\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Mastodon is a self-hosted, federated microblogging platform. In versions prior to 4.1.23, 4.2.16, and 4.3.4, when the visibility for domain blocks/reasons is set to \\\"users\\\" (localized English string: \\\"To logged-in users\\\"), users that are not yet approved can view the block reasons. Instance admins that do not want their domain blocks to be public are impacted. Versions 4.1.23, 4.2.16, and 4.3.4 fix the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27496\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Snowflake, a platform for using artificial intelligence in the context of cloud computin"]
[18.552581, "o", "g, has a vulnerability in the Snowflake JDBC driver (\\\"Driver\\\") in versions 3.0.13 through 3.23.0 of the driver. When the logging level was set to DEBUG, the Driver would log locally the client-side encryption master key of the target stage during the execution of GET/PUT commands. This key by itself does not grant access to any sensitive data without additional access authorizations,  and is not logged server-side by Snowflake. Snowflake fixed the issue in version 3.23.1.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27507\"\u001b[0m\u001b[1;39m,\r\n"]
[18.552659, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"The open-source identity infrastructure software Zitadel allows administrators to disable the user self-registration. ZITADEL's Admin API contains Insecure Direct Object Reference (IDOR) vulnerabilities that allow authenticated users, without specific IAM roles, to modify sensitive settings. While several endpoints are affected, the most critical vulnerability lies in the ability to manipulate LDAP configurations. Customers who do not utilize LDAP for authentication are not at risk from the most severe aspects of this vulnerability. However, upgrading to the patched version to address all identified issues is strongly recommended. This vulnerability is fixed in 2.71.0, 2.70.1, ,2.69.4, 2.68.4, 2.67.8, 2.66.11, 2.65.6, 2.64.5, and 2.63.8.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27582\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b"]
[18.552669, "o", "[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"The Secure Password extension in One Identity Password Manager before 5.14.4 allows local privilege escalation. The issue arises from a flawed security hardening mechanism within the kiosk browser used to display the Password Self-Service site to end users. Specifically, the application attempts to restrict privileged actions by overriding the native window.print() function. However, this protection can be bypassed by an attacker who accesses the Password Self-Service site from the lock screen and navigates to an attacker-controlled webpage via the Help function. By hosting a crafted web page with JavaScript, the attacker can restore and invoke the window.print() function, launching a SYSTEM-privileged print dialog. From this dialog, the attacker can exploit standard Windows functionality - such as the Print to PDF or Add Printer wizard - to spawn a command prompt with SYSTEM privileges. Successful exploitation allows a local attacker (with access to a locked workst"]
[18.552817, "o", "ation) to gain SYSTEM-level privileges, granting full control over the affected device.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.552904, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27608\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Arduino IDE 2.x is an IDE based on the Theia IDE framework and built with Electron. A Self Cross-Site Scripting (XSS) vulnerability has been identified within the Arduino-IDE prior to version v2.3.5. The vulnerability occurs in the Additional Board Manager URLs field, which can be found in the Preferences -> Settings section of the Arduino IDE interface. In the vulnerable versions, any values entered in this field are directly displayed to the user through a notification tooltip object, without a proper output encoding routine, due to the underlying ElectronJS engine interpretation. This vulnerability exposes the input parameter to Self-XSS attacks, which may lead to security risks depending on where the malicious payload is injected. This vulnerability is fixed "]
[18.55293, "o", "in 2.3.5.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27612\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"libcontainer is a library for container control. Prior to libcontainer 0.5.3, while creating a tenant container, the tenant builder accepts a list of capabilities to be added in the spec of tenant container. The logic here adds the given capabilities to all capabilities of main container if present in spec, otherwise simply set provided capabilities as capabilities of the tenant container. However, setting inherited caps in any case for tenant container can lead to elevation of capabilities, similar to CVE-2022-29162. This does not affect youki binary itself. This is only applicable if you are using libcontainer directly and using the tenant builder.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r"]
[18.552937, "o", "\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27774\"\u001b[0m\u001b[1;39m,\r\n"]
[18.552997, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Applio is a voice conversion tool. Versions 3.2.7 and prior are vulnerable to server-side request forgery (SSRF) and file write in `model_download.py` (line 156 in 3.2.7). The blind SSRF allows for sending requests on behalf of Applio server and can be leveraged to probe for other vulnerabilities on the server itself or on other back-end systems on the internal network, that the Applio server can reach. The blind SSRF can also be coupled with the an arbitrary file read (e.g., CVE-2025-27784) to read files from hosts on the internal network, that the Applio server can reach, which would make it a full SSRF. The file write allows for writing files on the server, which can be coupled with other vulnerabilities, for example an unsafe deserialization, to achieve remote code execution on the Applio server. As of time of publication, no known patches are available.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1"]
[18.553069, "o", ";39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27775\"\u001b[0m\u001b[1;39m,\r\n"]
[18.553114, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Applio is a voice conversion tool. Versions 3.2.7 and prior are vulnerable to server-side request forgery (SSRF) and file write in `model_download.py` (line 143 in 3.2.7). The blind SSRF allows for sending requests on behalf of Applio server and can be leveraged to probe for other vulnerabilities on the server itself or on other back-end systems on the internal network, that the Applio server can reach. The file write allows for writing files on the server, which can be coupled with other vulnerabilities, for example an unsafe deserialization, to achieve remote code execution on the Applio server. As of time of publication, no known patches are available.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27776\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Applio is a voice conversion tool. Versi"]
[18.553148, "o", "ons 3.2.7 and prior are vulnerable to server-side request forgery (SSRF) and file write in `model_download.py` (line 240 in 3.2.7). The blind SSRF allows for sending requests on behalf of Applio server and can be leveraged to probe for other vulnerabilities on the server itself or on other back-end systems on the internal network, that the Applio server can reach. The blind SSRF can also be coupled with the arbitrary file read CVE-2025-27784 to read files from hosts on the internal network, that the Applio server can reach, which would make it a full SSRF. The file write allows for writing files on the server, which can be coupled with other vulnerabilities, for example an unsafe deserialization, to achieve remote code execution on the Applio server. As of time of publication, no known patches are available.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27777\"\u001b[0m\u001b[1;"]
[18.553209, "o", "39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Applio is a voice conversion tool. Versions 3.2.7 and prior are vulnerable to server-side request forgery (SSRF) in `model_download.py` (line 195 in 3.2.7). The blind SSRF allows for sending requests on behalf of Applio server and can be leveraged to probe for other vulnerabilities on the server itself or on other back-end systems on the internal network, that the Applio server can reach. The blind SSRF can also be coupled with a arbitrary file read (e.g., CVE-2025-27784) to read files from hosts on the internal network, that the Applio server can reach, which would make it a full SSRF. As of time of publication, no known patches are available.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-27789\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Babel is a compiler for writing next generati"]
[18.553284, "o", "on JavaScript. When using versions of Babel prior to 7.26.10 and 8.0.0-alpha.17 to compile regular expression named capturing groups, Babel will generate a polyfill for the `.replace` method that has quadratic complexity on some specific replacement pattern strings (i.e. the second argument passed to `.replace`). Generated code is vulnerable if all the following conditions are true: Using Babel to compile regular expression named capturing groups, using the `.replace` method on a regular expression that contains named capturing groups, and the code using untrusted strings as the second argument of `.replace`. This problem has been fixed in `@babel/helpers` and `@babel/runtime` 7.26.10 and 8.0.0-alpha.17. It's likely that individual users do not directly depend on `@babel/helpers`, and instead depend on `@babel/core` (which itself depends on `@babel/helpers`). Upgrading to `@babel/core` 7.26.10 is not required, but it guarantees use of a new enough `@babel/helpers` version. Note that just updating Babel depend"]
[18.553294, "o", "encies is not enough; one will also need to re-compile the code. No known workarounds are available.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-30371\"\u001b[0m\u001b[1;39m,\r\n"]
[18.553394, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Metabase is a business intelligence and embedded analytics tool. Versions prior to v0.52.16.4, v1.52.16.4, v0.53.8, and v1.53.8 are vulnerable to circumvention of local link access protection in GeoJson endpoint. Self hosted Metabase instances that are using the GeoJson feature could be potentially impacted if their Metabase is colocated with other unsecured resources. This is fixed in v0.52.16.4, v1.52.16.4, v0.53.8, and v1.53.8. Migrating to Metabase Cloud or redeploying Metabase in a dedicated subnet with strict outbound port controls is an available workaround.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-30657\"\u001b[0m\u001b[1;39m,\r\n"]
[18.553482, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"An Improper Encoding or Escaping of Output vulnerability in the Sampling Route Record Daemon (SRRD) of Juniper Networks Junos OS allows an unauthenticated, network-based attacker to cause a Denial-of-Service (DoS).\\n\\nWhen a device configured for flow-monitoring receives a specific BGP update message, it is correctly processed internally by the routing protocol daemon (rpd), but when it's sent to SRRD it's encoded incorrectly which leads to a crash and momentary interruption of jflow processing until it automatically restarts. This issue does not affect traffic forwarding itself.\\nThis issue affects Junos OS: \\n\\n\\n\\n  *  All versions before 21.2R3-S9,\\n  *  21.4 versions before 21.4R3-S10,\\n  *  22.2 versions before 22.2R3-S6,\\n  *  22.4 versions before 22.4R3,\\n  *  23.2 versions before 23.2R1-S2, 23.2R2.\\n\\n\\n\\nThis issue does not affected Junos OS Evolved.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    "]
[18.553568, "o", "\u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-30672\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Mite for Perl before 0.013000 generates code with the current working directory ('.') added to the @INC path similar to CVE-2016-1238.\\n\\nIf an attacker can place a malicious file in current working directory, it may be \\nloaded instead of the intended file, potentially leading to arbitrary \\ncode execution.\\n\\nThis affects the Mite distribution itself, and other distributions that contain code generated by Mite.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-30675\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In Apache CloudStack, a flaw in access control affects the listTemplates and listIsos APIs. A malicious Domain Admin or Resource Admin can exploit this issue by intentional"]
[18.553592, "o", "ly specifying the 'domainid' parameter along with the 'filter=self' or 'filter=selfexecutable' values. This allows the attacker to gain unauthorized visibility into templates and ISOs under the ROOT domain.\\n\\nA malicious admin can enumerate and extract metadata of templates and ISOs that belong to unrelated domains, violating isolation boundaries and potentially exposing sensitive or internal configuration details. \\n\\nThis vulnerability has been fixed by ensuring the domain resolution strictly adheres to the caller's scope rather than defaulting to the ROOT domain.\\n\\n\\n\\n\\nAffected users are recommended to upgrade to Apache CloudStack 4.19.3.0 or 4.20.1.0.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-31134\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreshRSS is a self-hosted RSS feed aggregator. Prior to version 1.26.2, an attacker can ga"]
[18.553631, "o", "in additional information about the server by checking if certain directories exist. An attacker can, for example, check if older PHP versions are installed or if certain software is installed on the server and potentially use that information to further attack the server. Version 1.26.2 contains a patch for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n"]
[18.553638, "o", "    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-31136\"\u001b[0m\u001b[1;39m,\r\n"]
[18.553741, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreshRSS is a self-hosted RSS feed aggregator. Prior to version 1.26.2, it's possible to run arbitrary JavaScript on the feeds page.\\nThis occurs by combining a cross-site scripting (XSS) issue that occurs in `f.php` when SVG favicons are downloaded from an attacker-controlled feed containing `<script>` tags inside of them that aren't sanitized, with the lack of CSP in `f.php` by embedding the malicious favicon in an iframe (that has `sandbox=\\\"allow-scripts allow-same-origin\\\"` set as its attribute). An attacker needs to control one of the feeds that the victim is subscribed to, and also must have an account on the FreshRSS instance. Other than that, the iframe payload can be embedded as one of two options. The first payload requires user interaction (the user clicking on the malicious feed entry) with default user configuration, and the second payload fires instantly right after the user adds the feed or logs into the account while the feed entry is sti"]
[18.553804, "o", "ll visible. This is because of lazy image loading functionality, which the second payload bypasses. An attacker can gain access to the victim's account by exploiting this vulnerability. If the victim is an admin it would be possible to delete all users (cause damage) or execute arbitrary code on the server by modifying the update URL using fetch() via the XSS. Version 1.26.2 has a patch for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-31482\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreshRSS is a self-hosted RSS feed aggregator. A vulnerability in versions prior to 1.26.2 causes a user to be repeatedly logged out after fetching a malicious feed entry, effectively causing that user to suffer denial of service. Version 1.26.2 contains a patch for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"sel"]
[18.553813, "o", "f\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-31483\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Miniflux is a feed reader. Due to a weak Content Security Policy on the /proxy/* route, an attacker can bypass the CSP of the media proxy and execute cross-site scripting when opening external images in a new tab/window. To mitigate the vulnerability, the CSP for the media proxy has been changed from default-src 'self' to default-src 'none'; form-action 'none'; sandbox;. This vulnerability is fixed in 2.2.7.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-31492\"\u001b[0m\u001b[1;39m,\r\n"]
[18.553899, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"mod_auth_openidc is an OpenID Certified authentication and authorization module for the Apache 2.x HTTP server that implements the OpenID Connect Relying Party functionality. Prior to 2.4.16.11, a bug in a mod_auth_openidc results in disclosure of protected content to unauthenticated users. The conditions for disclosure are an OIDCProviderAuthRequestMethod POST, a valid account, and there mustn't be any application-level gateway (or load balancer etc) protecting the server. When you request a protected resource, the response includes the HTTP status, the HTTP headers, the intended response (the self-submitting form), and the protected resource (with no headers). This is an example of a request for a protected resource, including all the data returned. In the case where mod_auth_openidc returns a form, it has to return OK from check_userid so as not to go down the error path in httpd. This means httpd will try to issue the protected resource. oidc_content_"]
[18.55397, "o", "handler is called early, which has the opportunity to prevent the normal output being issued by httpd. oidc_content_handler has a number of checks for when it intervenes, but it doesn't check for this case, so the handler returns DECLINED. Consequently, httpd appends the protected content to the response. The issue has been patched in mod_auth_openidc versions >= 2.4.16.11.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-31499\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Jellyfin is an open source self hosted media server. Versions before 10.10.7 are vulnerable to argument injection in FFmpeg. This can be leveraged to possibly achieve remote code execution by anyone with credentials to a low-privileged user. This vulnerability was previously reported in CVE-2023-49096 and patched in version 10.8.13, but the patch can be bypassed. The original fix"]
[18.554012, "o", " sanitizes some parameters to make injection impossible, but certain unsanitized parameters can still be used for argument injection. The same unauthenticated endpoints are vulnerable: /Videos/<itemId>/stream and /Videos/<itemId>/stream.<container>, likely alongside similar endpoints in AudioController. This argument injection can be exploited to achieve arbitrary file write, leading to possible remote code execution through the plugin system. While the unauthenticated endpoints are vulnerable, a valid itemId is required for exploitation and any authenticated attacker could easily retrieve a valid itemId to make the exploit work. This vulnerability is patched in version 10.10.7.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-3153\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Concrete CMS version 9 below 9.4.0RC2 and versions below 8.5.20 are vuln"]
[18.554023, "o", "erable to CSRF and XSS in the Concrete CMS Address attribute because addresses are not properly sanitized in the output when a country is not specified.  Attackers are limited to individuals whom a site administrator has granted the ability to fill in an address attribute. It is possible for the attacker to glean limited information from the site but amount and type is restricted by mitigating controls and the level of access of the attacker. Limited data modification is possible. The dashboard page itself could be rendered unavailable. \\nThe fix only sanitizes new data uploaded post update to Concrete CMS 9.4.0RC2. Existing database entries added before the update will still be “live” if there were successful exploits added under previous versions; a database search is recommended. The Concrete CMS security team gave this vulnerability CVSS v.4.0 score of 5.1  with vector CVSS:4.0/AV:N/AC:L/AT:N/PR:L/UI:P/VC:L/VI:L/VA:L/SC:L/SI:L/SA:L Thanks Myq Larson for reporting.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"mat"]
[18.554134, "o", "ched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-32012\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Jellyfin is an open source self hosted media server. In versions 10.9.0 to before 10.10.7, the /System/Restart endpoint provides administrators the ability to restart their Jellyfin server. This endpoint is intended to be admins-only, but it also authorizes requests from any device in the same local network as the Jellyfin server. Due to the method Jellyfin uses to determine the source IP of a request, an unauthenticated attacker is able to spoof their IP to appear as a LAN IP, allowing them to restart the Jellyfin server process without authentication. This means that an unauthenticated attacker could mount a denial-of-service attack on any default-configured Jellyfin server by simply sending the same spoofed request every few seconds to restart the server over and over. This method"]
[18.55419, "o", " of IP spoofing also bypasses some security mechanisms, cause a denial-of-service attack, and possible bypass the admin restart requirement if combined with remote code execution. This issue is patched in version 10.10.7.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n"]
[18.554198, "o", "    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-32015\"\u001b[0m\u001b[1;39m,\r\n"]
[18.554259, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreshRSS is a self-hosted RSS feed aggregator. Prior to version 1.26.2, HTML is sanitized improperly inside the `<iframe srcdoc>` attribute, which leads to cross-site scripting (XSS) by loading an attacker's UserJS inside `<script src>`. In order to execute the attack, the attacker needs to control one of the victim's feeds and have an account on the FreshRSS instance that the victim is using. An attacker can gain access to the victim's account by exploiting this vulnerability. If the victim is an admin it would be possible to delete all users (cause damage) or execute arbitrary code on the server by modifying the update URL using fetch() via the XSS. Version 1.26.2 contains a patch for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-32391\"\u001b[0m\u001b[1;39m,\r\n"]
[18.554368, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"HedgeDoc is an open source, real-time, collaborative, markdown notes application. Prior to 1.10.3, a malicious SVG file uploaded to HedgeDoc results in the possibility of XSS when opened in a new tab instead of the editor itself. The XSS is possible by exploiting the JSONP capabilities of GitHub Gist embeddings. Only instances with the local filesystem upload backend or special configurations, where the uploads are served from the same domain as HedgeDoc, are vulnerable. This vulnerability is fixed in 1.10.3. When upgrading to HedgeDoc 1.10.3 is not possible, instance owners could add the following headers for all routes under /uploads as a first-countermeasure: Content-Disposition: attachment and Content-Security-Policy: default-src 'none'. Additionally, the external URLs in the script-src attribute of the Content-Security-Policy header should be removed.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;3"]
[18.554438, "o", "9m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-32421\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Next.js is a React framework for building full-stack web applications. Versions prior to 14.2.24 and 15.1.6 have a race-condition vulnerability. This issue only affects the Pages Router under certain misconfigurations, causing normal endpoints to serve `pageProps` data instead of standard HTML. This issue was patched in versions 15.1.6 and 14.2.24 by stripping the `x-now-route-matches` header from incoming requests. Applications hosted on Vercel's platform are not affected by this issue, as the platform does not cache responses based solely on `200 OK` status without explicit `cache-control` headers. Those who self-host Next.js deployments and are unable to upgrade immediately can mitigate this vulnerability by stripping the `x-now-route-matches` header from all incoming requests at the content development network and setting `cache-control: no-st"]
[18.554576, "o", "ore` for all responses under risk. The maintainers of Next.js strongly recommend only caching responses with explicit cache-control headers.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-32875\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"An issue was discovered in the COROS application through 3.8.12 for Android. Bluetooth pairing and bonding is neither initiated nor enforced by the application itself. Also, the watch does not enforce pairing and bonding. As a result, any data transmitted via BLE remains unencrypted, allowing attackers within Bluetooth range to eavesdrop on the communication. Furthermore, even if a user manually initiates pairing and bonding in the Android settings, the application continues to transmit data without requiring the watch to be bonded. This fallback behavior enables attackers to exploit the communication, for exam"]
[18.554618, "o", "ple, by conducting an active machine-in-the-middle attack.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-32877\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"An issue was discovered on COROS PACE 3 devices through 3.0808.0. It identifies itself as a device without input or output capabilities, which results in the use of the Just Works pairing method. This method does not implement any authentication, which therefore allows machine-in-the-middle attacks. Furthermore, this lack of authentication allows attackers to interact with the device via BLE without requiring prior authorization.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-32878\"\u001b[0m\u001b[1;39m,\r\n"]
[18.5547, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"An issue was discovered on COROS PACE 3 devices through 3.0808.0. It implements a function to connect the watch to a WLAN. This function is mainly for downloading firmware files. Before downloading firmware files, the watch requests some information about the firmware via HTTPS from the back-end API. However, the X.509 server certificate within the TLS handshake is not validated by the device. This allows an attacker within an active machine-in-the-middle position, using a TLS proxy and a self-signed certificate, to eavesdrop and manipulate the HTTPS communication. This could be abused, for example, for stealing the API access token of the assigned user account.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-34070\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"A missing authentication vulnerab"]
[18.554781, "o", "ility in the GFIAgent component of GFI Kerio Control 9.4.5 allows unauthenticated remote attackers to perform privileged operations. The GFIAgent service, responsible for integration with GFI AppManager, exposes HTTP services on ports 7995 and 7996 without proper authentication. The /proxy handler on port 7996 allows arbitrary forwarding to administrative endpoints when provided with an Appliance UUID, which itself can be retrieved from port 7995. This results in a complete authentication bypass, permitting access to sensitive administrative APIs.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37805\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nsound/virtio: Fix cancel_sync warnings on uninitialized work_structs\\n\\nBetty reported hitting the following warning:\\n\\n[    8.70913"]
[18.55481, "o", "1][  T221] WARNING: CPU: 2 PID: 221 at kernel/workqueue.c:4182\\n...\\n[    8.713282][  T221] Call trace:\\n[    8.713365][  T221]  __flush_work+0x8d0/0x914\\n[    8.713468][  T221]  __cancel_work_sync+0xac/0xfc\\n[    8.713570][  T221]  cancel_work_sync+0x24/0x34\\n[    8.713667][  T221]  virtsnd_remove+0xa8/0xf8 [virtio_snd ab15f34d0dd772f6d11327e08a81d46dc9c36276]\\n[    8.713868][  T221]  virtsnd_probe+0x48c/0x664 [virtio_snd ab15f34d0dd772f6d11327e08a81d46dc9c36276]\\n[    8.714035][  T221]  virtio_dev_probe+0x28c/0x390\\n[    8.714139][  T221]  really_probe+0x1bc/0x4c8\\n...\\n\\nIt seems we're hitting the error path in virtsnd_probe(), which\\ntriggers a virtsnd_remove() which iterates over the substreams\\ncalling cancel_work_sync() on the elapsed_period work_struct.\\n\\nLooking at the code, from earlier in:\\nvirtsnd_probe()->virtsnd_build_devs()->virtsnd_pcm_parse_cfg()\\n\\nWe set snd->nsubstreams, allocate the snd->substreams, and if\\nwe then hit an error on the info allocation or something in\\nvirtsnd_ctl_query_in"]
[18.554878, "o", "fo() fails, we will exit without having\\ninitialized the elapsed_period work_struct.\\n\\nWhen that error path unwinds we then call virtsnd_remove()\\nwhich as long as the substreams array is allocated, will iterate\\nthrough calling cancel_work_sync() on the uninitialized work\\nstruct hitting this warning.\\n\\nTakashi Iwai suggested this fix, which initializes the substreams\\nstructure right after allocation, so that if we hit the error\\npaths we avoid trying to cleanup uninitialized data.\\n\\nNote: I have not yet managed to reproduce the issue myself, so\\nthis patch has had limited testing.\\n\\nFeedback or thoughts would be appreciated!\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37807\"\u001b[0m\u001b[1;39m,\r\n"]
[18.554974, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nbpf: Fix kmemleak warning for percpu hashmap\\n\\nVlad Poenaru reported the following kmemleak issue:\\n\\n  unreferenced object 0x606fd7c44ac8 (size 32):\\n    backtrace (crc 0):\\n      pcpu_alloc_noprof+0x730/0xeb0\\n      bpf_map_alloc_percpu+0x69/0xc0\\n      prealloc_init+0x9d/0x1b0\\n      htab_map_alloc+0x363/0x510\\n      map_create+0x215/0x3a0\\n      __sys_bpf+0x16b/0x3e0\\n      __x64_sys_bpf+0x18/0x20\\n      do_syscall_64+0x7b/0x150\\n      entry_SYSCALL_64_after_hwframe+0x4b/0x53\\n\\nFurther investigation shows the reason is due to not 8-byte aligned\\nstore of percpu pointer in htab_elem_set_ptr():\\n  *(void __percpu **)(l->key + key_size) = pptr;\\n\\nNote that the whole htab_elem alignment is 8 (for x86_64). If the key_size\\nis 4, that means pptr is stored in a location which is 4 byte aligned but\\nnot 8 byte aligned. In mm/kmemleak.c, scan_block() scans the memory based\\non 8 byte str"]
[18.555031, "o", "ide, so it won't detect above pptr, hence reporting the memory\\nleak.\\n\\nIn htab_map_alloc(), we already have\\n\\n        htab->elem_size = sizeof(struct htab_elem) +\\n                          round_up(htab->map.key_size, 8);\\n        if (percpu)\\n                htab->elem_size += sizeof(void *);\\n        else\\n                htab->elem_size += round_up(htab->map.value_size, 8);\\n\\nSo storing pptr with 8-byte alignment won't cause any problem and can fix\\nkmemleak too.\\n\\nThe issue can be reproduced with bpf selftest as well:\\n  1. Enable CONFIG_DEBUG_KMEMLEAK config\\n  2. Add a getchar() before skel destroy in test_hash_map() in prog_tests/for_each.c.\\n     The purpose is to keep map available so kmemleak can be detected.\\n  3. run './test_progs -t for_each/hash_map &' and a kmemleak should be reported.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37822\"\u001b[0m\u001b[1;39"]
[18.555079, "o", "m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nriscv: uprobes: Add missing fence.i after building the XOL buffer\\n\\nThe XOL (execute out-of-line) buffer is used to single-step the\\nreplaced instruction(s) for uprobes. The RISC-V port was missing a\\nproper fence.i (i$ flushing) after constructing the XOL buffer, which\\ncan result in incorrect execution of stale/broken instructions.\\n\\nThis was found running the BPF selftests \\\"test_progs:\\nuprobe_autoattach, attach_probe\\\" on the Spacemit K1/X60, where the\\nuprobes tests randomly blew up.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37824\"\u001b[0m\u001b[1;39m,\r\n"]
[18.555151, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\ntipc: fix NULL pointer dereference in tipc_mon_reinit_self()\\n\\nsyzbot reported:\\n\\ntipc: Node number set to 1055423674\\nOops: general protection fault, probably for non-canonical address 0xdffffc0000000000: 0000 [#1] SMP KASAN NOPTI\\nKASAN: null-ptr-deref in range [0x0000000000000000-0x0000000000000007]\\nCPU: 3 UID: 0 PID: 6017 Comm: kworker/3:5 Not tainted 6.15.0-rc1-syzkaller-00246-g900241a5cc15 #0 PREEMPT(full)\\nHardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2~bpo12+1 04/01/2014\\nWorkqueue: events tipc_net_finalize_work\\nRIP: 0010:tipc_mon_reinit_self+0x11c/0x210 net/tipc/monitor.c:719\\n...\\nRSP: 0018:ffffc9000356fb68 EFLAGS: 00010246\\nRAX: 0000000000000000 RBX: 0000000000000000 RCX: 000000003ee87cba\\nRDX: 0000000000000000 RSI: ffffffff8dbc56a7 RDI: ffff88804c2cc010\\nRBP: dffffc0000000000 R08: 0000000000000001 R09: 0000000000000000\\nR10: 0000000000000"]
[18.5552, "o", "001 R11: 0000000000000000 R12: 0000000000000007\\nR13: fffffbfff2111097 R14: ffff88804ead8000 R15: ffff88804ead9010\\nFS:  0000000000000000(0000) GS:ffff888097ab9000(0000) knlGS:0000000000000000\\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\\nCR2: 00000000f720eb00 CR3: 000000000e182000 CR4: 0000000000352ef0\\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\\nCall Trace:\\n <TASK>\\n tipc_net_finalize+0x10b/0x180 net/tipc/net.c:140\\n process_one_work+0x9cc/0x1b70 kernel/workqueue.c:3238\\n process_scheduled_works kernel/workqueue.c:3319 [inline]\\n worker_thread+0x6c8/0xf10 kernel/workqueue.c:3400\\n kthread+0x3c2/0x780 kernel/kthread.c:464\\n ret_from_fork+0x45/0x80 arch/x86/kernel/process.c:153\\n ret_from_fork_asm+0x1a/0x30 arch/x86/entry/entry_64.S:245\\n </TASK>\\n...\\nRIP: 0010:tipc_mon_reinit_self+0x11c/0x210 net/tipc/monitor.c:719\\n...\\nRSP: 0018:ffffc9000356fb68 EFLAGS: 00010246\\nRAX: 0000000000000000 RBX: 0000000000000000 RCX"]
[18.555209, "o", ": 000000003ee87cba\\nRDX: 0000000000000000 RSI: ffffffff8dbc56a7 RDI: ffff88804c2cc010\\nRBP: dffffc0000000000 R08: 0000000000000001 R09: 0000000000000000\\nR10: 0000000000000001 R11: 0000000000000000 R12: 0000000000000007\\nR13: fffffbfff2111097 R14: ffff88804ead8000 R15: ffff88804ead9010\\nFS:  0000000000000000(0000) GS:ffff888097ab9000(0000) knlGS:0000000000000000\\nCS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\\nCR2: 00000000f720eb00 CR3: 000000000e182000 CR4: 0000000000352ef0\\nDR0: 0000000000000000 DR1: 0000000000000000 DR2: 0000000000000000\\nDR3: 0000000000000000 DR6: 00000000fffe0ff0 DR7: 0000000000000400\\n\\nThere is a racing condition between workqueue created when enabling\\nbearer and another thread created when disabling bearer right after\\nthat as follow:\\n\\nenabling_bearer                          | disabling_bearer\\n---------------                          | ----------------\\ntipc_disc_timeout()                      |\\n{                                        | bearer_disable()\\n ...                "]
[18.555345, "o", "                     | {\\n schedule_work(&tn->work);               |  tipc_mon_delete()\\n ...                                     |  {\\n}                                        |   ...\\n                                         |   write_lock_bh(&mon->lock);\\n                                         |   mon->self = NULL;\\n                                         |   write_unlock_bh(&mon->lock);\\n                                         |   ...\\n                                         |  }\\ntipc_net_finalize_work()                 | }\\n{                                        |\\n ...                                     |\\n tipc_net_finalize()                     |\\n {                                       |\\n  ...                                    |\\n  tipc_mon_reinit_self()                 |\\n  {                                      |\\n   ...                                   |\\n   write_lock_bh(&mon->lock);            |\\n   mon->self->addr = tipc_own_addr(net); |\\n   write_unlock_bh(&mon->lock);          |\\"]
[18.555356, "o", "n   ...             \\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37843\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nPCI: pciehp: Avoid unnecessary device replacement check\\n\\nHot-removal of nested PCI hotplug ports suffers from a long-standing race\\ncondition which can lead to a deadlock:  A parent hotplug port acquires\\npci_lock_rescan_remove(), then waits for pciehp to unbind from a child\\nhotplug port.  Meanwhile that child hotplug port tries to acquire\\npci_lock_rescan_remove() as well in order to remove its own children.\\n\\nThe deadlock only occurs if the parent acquires pci_lock_rescan_remove()\\nfirst, not if the child happens to acquire it first.\\n\\nSeveral workarounds to avoid the issue have been proposed and discarded\\nover the years, e.g.:\\n\\nhtt"]
[18.555439, "o", "ps://lore.kernel.org/r/4c882e25194ba8282b78fe963fec8faae7cf23eb.1529173804.git.lukas@wunner.de/\\n\\nA proper fix is being worked on, but needs more time as it is nontrivial\\nand necessarily intrusive.\\n\\nRecent commit 9d573d19547b (\\\"PCI: pciehp: Detect device replacement during\\nsystem sleep\\\") provokes more frequent occurrence of the deadlock when\\nremoving more than one Thunderbolt device during system sleep.  The commit\\nsought to detect device replacement, but also triggered on device removal.\\nDifferentiating reliably between replacement and removal is impossible\\nbecause pci_get_dsn() returns 0 both if the device was removed, as well as\\nif it was replaced with one lacking a Device Serial Number.\\n\\nAvoid the more frequent occurrence of the deadlock by checking whether the\\nhotplug port itself was hot-removed.  If so, there's no sense in checking\\nwhether its child device was replaced.\\n\\nThis works because the ->resume_noirq() callback is invoked in top-down\\norder for the entire hierarchy:  A parent h"]
[18.55552, "o", "otplug port detecting device\\nreplacement (or removal) marks all children as removed using\\npci_dev_set_disconnected() and a child hotplug port can then reliably\\ndetect being removed.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37864\"\u001b[0m\u001b[1;39m,\r\n"]
[18.555537, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nnet: dsa: clean up FDB, MDB, VLAN entries on unbind\\n\\nAs explained in many places such as commit b117e1e8a86d (\\\"net: dsa:\\ndelete dsa_legacy_fdb_add and dsa_legacy_fdb_del\\\"), DSA is written given\\nthe assumption that higher layers have balanced additions/deletions.\\nAs such, it only makes sense to be extremely vocal when those\\nassumptions are violated and the driver unbinds with entries still\\npresent.\\n\\nBut Ido Schimmel points out a very simple situation where that is wrong:\\nhttps://lore.kernel.org/netdev/ZDazSM5UsPPjQuKr@shredder/\\n(also briefly discussed by me in the aforementioned commit).\\n\\nBasically, while the bridge bypass operations are not something that DSA\\nexplicitly documents, and for the majority of DSA drivers this API\\nsimply causes them to go to promiscuous mode, that isn't the case for\\nall drivers. Some have the necessary requirements for bridge bypass\\noperat"]
[18.555597, "o", "ions to do something useful - see dsa_switch_supports_uc_filtering().\\n\\nAlthough in tools/testing/selftests/net/forwarding/local_termination.sh,\\nwe made an effort to popularize better mechanisms to manage address\\nfilters on DSA interfaces from user space - namely macvlan for unicast,\\nand setsockopt(IP_ADD_MEMBERSHIP) - through mtools - for multicast, the\\nfact is that 'bridge fdb add ... self static local' also exists as\\nkernel UAPI, and might be useful to someone, even if only for a quick\\nhack.\\n\\nIt seems counter-productive to block that path by implementing shim\\n.ndo_fdb_add and .ndo_fdb_del operations which just return -EOPNOTSUPP\\nin order to prevent the ndo_dflt_fdb_add() and ndo_dflt_fdb_del() from\\nrunning, although we could do that.\\n\\nAccepting that cleanup is necessary seems to be the only option.\\nEspecially since we appear to be coming back at this from a different\\nangle as well. Russell King is noticing that the WARN_ON() triggers even\\nfor VLANs:\\nhttps://lore.kernel.org/netdev/Z_li8Bj8"]
[18.555665, "o", "bD4-BYKQ@shell.armlinux.org.uk/\\n\\nWhat happens in the bug report above is that dsa_port_do_vlan_del() fails,\\nthen the VLAN entry lingers on, and then we warn on unbind and leak it.\\n\\nThis is not a straight revert of the blamed commit, but we now add an\\ninformational print to the kernel log (to still have a way to see\\nthat bugs exist), and some extra comments gathered from past years'\\nexperience, to justify the logic.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37877\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\niommu: Clear iommu-dma ops on cleanup\\n\\nIf iommu_device_register() encounters an error, it can end up tearing\\ndown already-configured groups and default domains, however this\\ncurrently still leaves devices hooked up to iommu-dma (and even\\nhistorically the b"]
[18.555734, "o", "ehaviour in this area was at best inconsistent across\\narchitectures/drivers...) Although in the case that an IOMMU is present\\nwhose driver has failed to probe, users cannot necessarily expect DMA to\\nwork anyway, it's still arguable that we should do our best to put\\nthings back as if the IOMMU driver was never there at all, and certainly\\nthe potential for crashing in iommu-dma itself is undesirable. Make sure\\nwe clean up the dev->dma_iommu flag along with everything else.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37897\"\u001b[0m\u001b[1;39m,\r\n"]
[18.555764, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nwifi: plfxlc: Remove erroneous assert in plfxlc_mac_release\\n\\nplfxlc_mac_release() asserts that mac->lock is held. This assertion is\\nincorrect, because even if it was possible, it would not be the valid\\nbehaviour. The function is used when probe fails or after the device is\\ndisconnected. In both cases mac->lock can not be held as the driver is\\nnot working with the device at the moment. All functions that use mac->lock\\nunlock it just after it was held. There is also no need to hold mac->lock\\nfor plfxlc_mac_release() itself, as mac data is not affected, except for\\nmac->flags, which is modified atomically.\\n\\nThis bug leads to the following warning:\\n================================================================\\nWARNING: CPU: 0 PID: 127 at drivers/net/wireless/purelifi/plfxlc/mac.c:106 plfxlc_mac_release+0x7d/0xa0\\nModules linked in:\\nCPU: 0 PID: 127 Comm: kworker/0:2 Not taint"]
[18.555838, "o", "ed 6.1.124-syzkaller #0\\nHardware name: Google Google Compute Engine/Google Compute Engine, BIOS Google 09/13/2024\\nWorkqueue: usb_hub_wq hub_event\\nRIP: 0010:plfxlc_mac_release+0x7d/0xa0 drivers/net/wireless/purelifi/plfxlc/mac.c:106\\nCall Trace:\\n <TASK>\\n probe+0x941/0xbd0 drivers/net/wireless/purelifi/plfxlc/usb.c:694\\n usb_probe_interface+0x5c0/0xaf0 drivers/usb/core/driver.c:396\\n really_probe+0x2ab/0xcb0 drivers/base/dd.c:639\\n __driver_probe_device+0x1a2/0x3d0 drivers/base/dd.c:785\\n driver_probe_device+0x50/0x420 drivers/base/dd.c:815\\n __device_attach_driver+0x2cf/0x510 drivers/base/dd.c:943\\n bus_for_each_drv+0x183/0x200 drivers/base/bus.c:429\\n __device_attach+0x359/0x570 drivers/base/dd.c:1015\\n bus_probe_device+0xba/0x1e0 drivers/base/bus.c:489\\n device_add+0xb48/0xfd0 drivers/base/core.c:3696\\n usb_set_configuration+0x19dd/0x2020 drivers/usb/core/message.c:2165\\n usb_generic_driver_probe+0x84/0x140 drivers/usb/core/generic.c:238\\n usb_probe_device+0x130/0x260 drivers/usb/core/driver.c:293\\n rea"]
[18.555901, "o", "lly_probe+0x2ab/0xcb0 drivers/base/dd.c:639\\n __driver_probe_device+0x1a2/0x3d0 drivers/base/dd.c:785\\n driver_probe_device+0x50/0x420 drivers/base/dd.c:815\\n __device_attach_driver+0x2cf/0x510 drivers/base/dd.c:943\\n bus_for_each_drv+0x183/0x200 drivers/base/bus.c:429\\n __device_attach+0x359/0x570 drivers/base/dd.c:1015\\n bus_probe_device+0xba/0x1e0 drivers/base/bus.c:489\\n device_add+0xb48/0xfd0 drivers/base/core.c:3696\\n usb_new_device+0xbdd/0x18f0 drivers/usb/core/hub.c:2620\\n hub_port_connect drivers/usb/core/hub.c:5477 [inline]\\n hub_port_connect_change drivers/usb/core/hub.c:5617 [inline]\\n port_event drivers/usb/core/hub.c:5773 [inline]\\n hub_event+0x2efe/0x5730 drivers/usb/core/hub.c:5855\\n process_one_work+0x8a9/0x11d0 kernel/workqueue.c:2292\\n worker_thread+0xa47/0x1200 kernel/workqueue.c:2439\\n kthread+0x28d/0x320 kernel/kthread.c:376\\n ret_from_fork+0x1f/0x30 arch/x86/entry/entry_64.S:295\\n </TASK>\\n================================================================\\n\\nFound by Linux Verification Ce"]
[18.555959, "o", "nter (linuxtesting.org) with Syzkaller.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37938\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\ntracing: Verify event formats that have \\\"%*p..\\\"\\n\\nThe trace event verifier checks the formats of trace events to make sure\\nthat they do not point at memory that is not in the trace event itself or\\nin data that will never be freed. If an event references data that was\\nallocated when the event triggered and that same data is freed before the\\nevent is read, then the kernel can crash by reading freed memory.\\n\\nThe verifier runs at boot up (or module load) and scans the print formats\\nof the events and checks their arguments to make sure that dereferenced\\npointers are safe. If the format uses \\\"%*p..\\\" the verifier will ignore it,\\nand "]
[18.556042, "o", "that could be dangerous. Cover this case as well.\\n\\nAlso add to the sample code a use case of \\\"%*pbl\\\".\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37945\"\u001b[0m\u001b[1;39m,\r\n"]
[18.556139, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nnet: phy: allow MDIO bus PM ops to start/stop state machine for phylink-controlled PHY\\n\\nDSA has 2 kinds of drivers:\\n\\n1. Those who call dsa_switch_suspend() and dsa_switch_resume() from\\n   their device PM ops: qca8k-8xxx, bcm_sf2, microchip ksz\\n2. Those who don't: all others. The above methods should be optional.\\n\\nFor type 1, dsa_switch_suspend() calls dsa_user_suspend() -> phylink_stop(),\\nand dsa_switch_resume() calls dsa_user_resume() -> phylink_start().\\nThese seem good candidates for setting mac_managed_pm = true because\\nthat is essentially its definition [1], but that does not seem to be the\\nbiggest problem for now, and is not what this change focuses on.\\n\\nTalking strictly about the 2nd category of DSA drivers here (which\\ndo not have MAC managed PM, meaning that for their attached PHYs,\\nmdio_bus_phy_suspend() and mdio_bus_phy_resume() should run in full),\\nI have not"]
[18.556195, "o", "iced that the following warning from mdio_bus_phy_resume() is\\ntriggered:\\n\\n\\tWARN_ON(phydev->state != PHY_HALTED && phydev->state != PHY_READY &&\\n\\t\\tphydev->state != PHY_UP);\\n\\nbecause the PHY state machine is running.\\n\\nIt's running as a result of a previous dsa_user_open() -> ... ->\\nphylink_start() -> phy_start() having been initiated by the user.\\n\\nThe previous mdio_bus_phy_suspend() was supposed to have called\\nphy_stop_machine(), but it didn't. So this is why the PHY is in state\\nPHY_NOLINK by the time mdio_bus_phy_resume() runs.\\n\\nmdio_bus_phy_suspend() did not call phy_stop_machine() because for\\nphylink, the phydev->adjust_link function pointer is NULL. This seems a\\ntechnicality introduced by commit fddd91016d16 (\\\"phylib: fix PAL state\\nmachine restart on resume\\\"). That commit was written before phylink\\nexisted, and was intended to avoid crashing with consumer drivers which\\ndon't use the PHY state machine - phylink always does, when using a PHY.\\nBut phylink itself has historically not b"]
[18.556252, "o", "een developed with\\nsuspend/resume in mind, and apparently not tested too much in that\\nscenario, allowing this bug to exist unnoticed for so long. Plus, prior\\nto the WARN_ON(), it would have likely been invisible.\\n\\nThis issue is not in fact restricted to type 2 DSA drivers (according to\\nthe above ad-hoc classification), but can be extrapolated to any MAC\\ndriver with phylink and MDIO-bus-managed PHY PM ops. DSA is just where\\nthe issue was reported. Assuming mac_managed_pm is set correctly, a\\nquick search indicates the following other drivers might be affected:\\n\\n$ grep -Zlr PHYLINK_NETDEV drivers/ | xargs -0 grep -L mac_managed_pm\\ndrivers/net/ethernet/atheros/ag71xx.c\\ndrivers/net/ethernet/microchip/sparx5/sparx5_main.c\\ndrivers/net/ethernet/microchip/lan966x/lan966x_main.c\\ndrivers/net/ethernet/freescale/dpaa2/dpaa2-mac.c\\ndrivers/net/ethernet/freescale/fs_enet/fs_enet-main.c\\ndrivers/net/ethernet/freescale/dpaa/dpaa_eth.c\\ndrivers/net/ethernet/freescale/ucc_geth.c\\ndrivers/net/ethernet/freescale/en"]
[18.556292, "o", "etc/enetc_pf_common.c\\ndrivers/net/ethernet/marvell/mvpp2/mvpp2_main.c\\ndrivers/net/ethernet/marvell/mvneta.c\\ndrivers/net/ethernet/marvell/prestera/prestera_main.c\\ndrivers/net/ethernet/mediatek/mtk_eth_soc.c\\ndrivers/net/ethernet/altera/altera_tse_main.c\\ndrivers/net/ethernet/wangxun/txgbe/txgbe_phy.c\\ndrivers/net/ethernet/meta/fbnic/fbnic_phylink.c\\ndrivers/net/ethernet/tehuti/tn40_phy.c\\ndrivers/net/ethernet/mscc/ocelot_net.c\\n\\nMake the existing conditions dependent on the PHY device having a\\nphydev->phy_link_change() implementation equal to the default\\nphy_link_change() provided by phylib. Otherwise, we implicitly know that\\nthe phydev has the phylink-provided phylink_phy_change() callback, and\\nwhen phylink is used, the PHY state machine always needs to be stopped/\\nstarted on the suspend/resume path. The code is structured as such that\\nif phydev->phy_link_change() is absent, it is a matter of time until the\\nkernel will crash - no need to further complicate the test.\\n\\nThus, for the situation wher"]
[18.556388, "o", "e the PM is not managed b\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-37955\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nvirtio-net: free xsk_buffs on error in virtnet_xsk_pool_enable()\\n\\nThe selftests added to our CI by Bui Quang Minh recently reveals\\nthat there is a mem leak on the error path of virtnet_xsk_pool_enable():\\n\\nunreferenced object 0xffff88800a68a000 (size 2048):\\n  comm \\\"xdp_helper\\\", pid 318, jiffies 4294692778\\n  hex dump (first 32 bytes):\\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n    00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................\\n  backtrace (crc 0):\\n    __kvmalloc_node_noprof+0x402/0x570\\n    virtnet_xsk_pool_enable+0x293/0x6a0 (drivers/net/virtio_net.c:5882)\\n    xp_assign_dev+0x369"]
[18.556444, "o", "/0x670 (net/xdp/xsk_buff_pool.c:226)\\n    xsk_bind+0x6a5/0x1ae0\\n    __sys_bind+0x15e/0x230\\n    __x64_sys_bind+0x72/0xb0\\n    do_syscall_64+0xc1/0x1d0\\n    entry_SYSCALL_64_after_hwframe+0x77/0x7f\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38016\"\u001b[0m\u001b[1;39m,\r\n"]
[18.556565, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nHID: bpf: abort dispatch if device destroyed\\n\\nThe current HID bpf implementation assumes no output report/request will\\ngo through it after hid_bpf_destroy_device() has been called. This leads\\nto a bug that unplugging certain types of HID devices causes a cleaned-\\nup SRCU to be accessed. The bug was previously a hidden failure until a\\nrecent x86 percpu change [1] made it access not-present pages.\\n\\nThe bug will be triggered if the conditions below are met:\\n\\nA) a device under the driver has some LEDs on\\nB) hid_ll_driver->request() is uninplemented (e.g., logitech-djreceiver)\\n\\nIf condition A is met, hidinput_led_worker() is always scheduled *after*\\nhid_bpf_destroy_device().\\n\\nhid_destroy_device\\n` hid_bpf_destroy_device\\n  ` cleanup_srcu_struct(&hdev->bpf.srcu)\\n` hid_remove_device\\n  ` ...\\n    ` led_classdev_unregister\\n      ` led_trigger_set(led_cdev, NULL)\\n        ` le"]
[18.556579, "o", "d_set_brightness(led_cdev, LED_OFF)\\n          ` ...\\n            ` input_inject_event\\n              ` input_event_dispose\\n                ` hidinput_input_event\\n                  ` schedule_work(&hid->led_work) [hidinput_led_worker]\\n\\nThis is fine when condition B is not met, where hidinput_led_worker()\\ncalls hid_ll_driver->request(). This is the case for most HID drivers,\\nwhich implement it or use the generic one from usbhid. The driver itself\\nor an underlying driver will then abort processing the request.\\n\\nOtherwise, hidinput_led_worker() tries hid_hw_output_report() and leads\\nto the bug.\\n\\nhidinput_led_worker\\n` hid_hw_output_report\\n  ` dispatch_hid_bpf_output_report\\n    ` srcu_read_lock(&hdev->bpf.srcu)\\n    ` srcu_read_unlock(&hdev->bpf.srcu, idx)\\n\\nThe bug has existed since the introduction [2] of\\ndispatch_hid_bpf_output_report(). However, the same bug also exists in\\ndispatch_hid_bpf_raw_requests(), and I've reproduced (no visible effect\\nbecause of the lack of [1], but confirmed bpf.de"]
[18.556613, "o", "stroyed == 1) the bug\\nagainst the commit (i.e., the Fixes:) introducing the function. This is\\nbecause hidinput_led_worker() falls back to hid_hw_raw_request() when\\nhid_ll_driver->output_report() is uninplemented (e.g., logitech-\\ndjreceiver).\\n\\nhidinput_led_worker\\n` hid_hw_output_report: -ENOSYS\\n` hid_hw_raw_request\\n  ` dispatch_hid_bpf_raw_requests\\n    ` srcu_read_lock(&hdev->bpf.srcu)\\n    ` srcu_read_unlock(&hdev->bpf.srcu, idx)\\n\\nFix the issue by returning early in the two mentioned functions if\\nhid_bpf has been marked as destroyed. Though\\ndispatch_hid_bpf_device_event() handles input events, and there is no\\nevidence that it may be called after the destruction, the same check, as\\na safety net, is also added to it to maintain the consistency among all\\ndispatch functions.\\n\\nThe impact of the bug on other architectures is unclear. Even if it acts\\nas a hidden failure, this is still dangerous because it corrupts\\nwhatever is on the address calculated by SRCU. Thus, CC'ing the stable\\nlist.\\n\\n["]
[18.556687, "o", "1]: commit 9d7de2aa8b41 (\\\"x86/percpu/64: Use relative percpu offsets\\\")\\n[2]: commit 9286675a2aed (\\\"HID: bpf: add HID-BPF hooks for\\nhid_hw_output_report\\\")\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n"]
[18.556695, "o", "    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38033\"\u001b[0m\u001b[1;39m,\r\n"]
[18.556761, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nx86/Kconfig: make CFI_AUTO_DEFAULT depend on !RUST or Rust >= 1.88\\n\\nCalling core::fmt::write() from rust code while FineIBT is enabled\\nresults in a kernel panic:\\n\\n[ 4614.199779] kernel BUG at arch/x86/kernel/cet.c:132!\\n[ 4614.205343] Oops: invalid opcode: 0000 [#1] PREEMPT SMP NOPTI\\n[ 4614.211781] CPU: 2 UID: 0 PID: 6057 Comm: dmabuf_dump Tainted: G     U     O       6.12.17-android16-0-g6ab38c534a43 #1 9da040f27673ec3945e23b998a0f8bd64c846599\\n[ 4614.227832] Tainted: [U]=USER, [O]=OOT_MODULE\\n[ 4614.241247] RIP: 0010:do_kernel_cp_fault+0xea/0xf0\\n...\\n[ 4614.398144] RIP: 0010:_RNvXs5_NtNtNtCs3o2tGsuHyou_4core3fmt3num3impyNtB9_7Display3fmt+0x0/0x20\\n[ 4614.407792] Code: 48 f7 df 48 0f 48 f9 48 89 f2 89 c6 5d e9 18 fd ff ff 0f 1f 84 00 00 00 00 00 f3 0f 1e fa 41 81 ea 14 61 af 2c 74 03 0f 0b 90 <66> 0f 1f 00 55 48 89 e5 48 89 f2 48 8b 3f be 01 00 00 00 5d e9 e7\\n[ 4614.428775] RS"]
[18.556824, "o", "P: 0018:ffffb95acfa4ba68 EFLAGS: 00010246\\n[ 4614.434609] RAX: 0000000000000000 RBX: 0000000000000010 RCX: 0000000000000000\\n[ 4614.442587] RDX: 0000000000000007 RSI: ffffb95acfa4ba70 RDI: ffffb95acfa4bc88\\n[ 4614.450557] RBP: ffffb95acfa4bae0 R08: ffff0a00ffffff05 R09: 0000000000000070\\n[ 4614.458527] R10: 0000000000000000 R11: ffffffffab67eaf0 R12: ffffb95acfa4bcc8\\n[ 4614.466493] R13: ffffffffac5d50f0 R14: 0000000000000000 R15: 0000000000000000\\n[ 4614.474473]  ? __cfi__RNvXs5_NtNtNtCs3o2tGsuHyou_4core3fmt3num3impyNtB9_7Display3fmt+0x10/0x10\\n[ 4614.484118]  ? _RNvNtCs3o2tGsuHyou_4core3fmt5write+0x1d2/0x250\\n\\nThis happens because core::fmt::write() calls\\ncore::fmt::rt::Argument::fmt(), which currently has CFI disabled:\\n\\nlibrary/core/src/fmt/rt.rs:\\n171     // FIXME: Transmuting formatter in new and indirectly branching to/calling\\n172     // it here is an explicit CFI violation.\\n173     #[allow(inline_no_sanitize)]\\n174     #[no_sanitize(cfi, kcfi)]\\n175     #[inline]\\n176     pub(super) unsafe fn fmt"]
[18.556881, "o", "(&self, f: &mut Formatter<'_>) -> Result {\\n\\nThis causes a Control Protection exception, because FineIBT has sealed\\noff the original function's endbr64.\\n\\nThis makes rust currently incompatible with FineIBT. Add a Kconfig\\ndependency that prevents FineIBT from getting turned on by default\\nif rust is enabled.\\n\\n[ Rust 1.88.0 (scheduled for 2025-06-26) should have this fixed [1],\\n  and thus we relaxed the condition with Rust >= 1.88.\\n\\n  When `objtool` lands checking for this with e.g. [2], the plan is\\n  to ideally run that in upstream Rust's CI to prevent regressions\\n  early [3], since we do not control `core`'s source code.\\n\\n  Alice tested the Rust PR backported to an older compiler.\\n\\n  Peter would like that Rust provides a stable `core` which can be\\n  pulled into the kernel: \\\"Relying on that much out of tree code is\\n  'unfortunate'\\\".\\n\\n    - Miguel ]\\n\\n[ Reduced splat. - Miguel ]\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;"]
[18.556887, "o", "39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38037\"\u001b[0m\u001b[1;39m,\r\n"]
[18.556951, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nvxlan: Annotate FDB data races\\n\\nThe 'used' and 'updated' fields in the FDB entry structure can be\\naccessed concurrently by multiple threads, leading to reports such as\\n[1]. Can be reproduced using [2].\\n\\nSuppress these reports by annotating these accesses using\\nREAD_ONCE() / WRITE_ONCE().\\n\\n[1]\\nBUG: KCSAN: data-race in vxlan_xmit / vxlan_xmit\\n\\nwrite to 0xffff942604d263a8 of 8 bytes by task 286 on cpu 0:\\n vxlan_xmit+0xb29/0x2380\\n dev_hard_start_xmit+0x84/0x2f0\\n __dev_queue_xmit+0x45a/0x1650\\n packet_xmit+0x100/0x150\\n packet_sendmsg+0x2114/0x2ac0\\n __sys_sendto+0x318/0x330\\n __x64_sys_sendto+0x76/0x90\\n x64_sys_call+0x14e8/0x1c00\\n do_syscall_64+0x9e/0x1a0\\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\\n\\nread to 0xffff942604d263a8 of 8 bytes by task 287 on cpu 2:\\n vxlan_xmit+0xadf/0x2380\\n dev_hard_start_xmit+0x84/0x2f0\\n __dev_queue_xmit+0x45a/0x1650\\n packet_xmit+0x100/0x15"]
[18.556988, "o", "0\\n packet_sendmsg+0x2114/0x2ac0\\n __sys_sendto+0x318/0x330\\n __x64_sys_sendto+0x76/0x90\\n x64_sys_call+0x14e8/0x1c00\\n do_syscall_64+0x9e/0x1a0\\n entry_SYSCALL_64_after_hwframe+0x77/0x7f\\n\\nvalue changed: 0x00000000fffbac6e -> 0x00000000fffbac6f\\n\\nReported by Kernel Concurrency Sanitizer on:\\nCPU: 2 UID: 0 PID: 287 Comm: mausezahn Not tainted 6.13.0-rc7-01544-gb4b270f11a02 #5\\nHardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-3.fc41 04/01/2014\\n\\n[2]\\n #!/bin/bash\\n\\n set +H\\n echo whitelist > /sys/kernel/debug/kcsan\\n echo !vxlan_xmit > /sys/kernel/debug/kcsan\\n\\n ip link add name vx0 up type vxlan id 10010 dstport 4789 local 192.0.2.1\\n bridge fdb add 00:11:22:33:44:55 dev vx0 self static dst 198.51.100.1\\n taskset -c 0 mausezahn vx0 -a own -b 00:11:22:33:44:55 -c 0 -q &\\n taskset -c 2 mausezahn vx0 -a own -b 00:11:22:33:44:55 -c 0 -q &\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_i"]
[18.557104, "o", "d\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38045\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nwifi: iwlwifi: fix debug actions order\\n\\nThe order of actions taken for debug was implemented incorrectly.\\nNow we implemented the dump split and do the FW reset only in the\\nmiddle of the dump (rather than the FW killing itself on error.)\\nAs a result, some of the actions taken when applying the config\\nwill now crash the device, so we need to fix the order.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38060\"\u001b[0m\u001b[1;39m,\r\n"]
[18.557115, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nbpf: copy_verifier_state() should copy 'loop_entry' field\\n\\nThe bpf_verifier_state.loop_entry state should be copied by\\ncopy_verifier_state(). Otherwise, .loop_entry values from unrelated\\nstates would poison env->cur_state.\\n\\nAdditionally, env->stack should not contain any states with\\n.loop_entry != NULL. The states in env->stack are yet to be verified,\\nwhile .loop_entry is set for states that reached an equivalent state.\\nThis means that env->cur_state->loop_entry should always be NULL after\\npop_stack().\\n\\nSee the selftest in the next commit for an example of the program that\\nis not safe yet is accepted by verifier w/o this fix.\\n\\nThis change has some verification performance impact for selftests:\\n\\nFile                                Program                       Insns (A)  Insns (B)  Insns   (DIFF)  States (A)  States (B)  States (DIFF)\\n----------------------------------"]
[18.557159, "o", "  ----------------------------  ---------  ---------  --------------  ----------  ----------  -------------\\narena_htab.bpf.o                    arena_htab_llvm                     717        426  -291 (-40.59%)          57          37  -20 (-35.09%)\\narena_htab_asm.bpf.o                arena_htab_asm                      597        445  -152 (-25.46%)          47          37  -10 (-21.28%)\\narena_list.bpf.o                    arena_list_del                      309        279    -30 (-9.71%)          23          14   -9 (-39.13%)\\niters.bpf.o                         iter_subprog_check_stacksafe        155        141    -14 (-9.03%)          15          14    -1 (-6.67%)\\niters.bpf.o                         iter_subprog_iters                 1094       1003    -91 (-8.32%)          88          83    -5 (-5.68%)\\niters.bpf.o                         loop_state_deps2                    479        725  +246 (+51.36%)          46          63  +17 (+36.96%)\\nkmem_cache_iter.bpf.o               open_coded_iter      "]
[18.557236, "o", "                63         59     -4 (-6.35%)           7           6   -1 (-14.29%)\\nverifier_bits_iter.bpf.o            max_words                            92         84     -8 (-8.70%)           8           7   -1 (-12.50%)\\nverifier_iterating_callbacks.bpf.o  cond_break2                         113        107     -6 (-5.31%)          12          12    +0 (+0.00%)\\n\\nAnd significant negative impact for sched_ext:\\n\\nFile               Program                 Insns (A)  Insns (B)  Insns         (DIFF)  States (A)  States (B)  States      (DIFF)\\n-----------------  ----------------------  ---------  ---------  --------------------  ----------  ----------  ------------------\\nbpf.bpf.o          lavd_init                    7039      14723      +7684 (+109.16%)         490        1139     +649 (+132.45%)\\nbpf.bpf.o          layered_dispatch            11485      10548         -937 (-8.16%)         848         762       -86 (-10.14%)\\nbpf.bpf.o          layered_dump                 7422    1000001  +992579 (+1"]
[18.557283, "o", "3373.47%)         681       31178  +30497 (+4478.27%)\\nbpf.bpf.o          layered_enqueue             16854      71127     +54273 (+322.02%)        1611        6450    +4839 (+300.37%)\\nbpf.bpf.o          p2dq_dispatch                 665        791        +126 (+18.95%)          68          78       +10 (+14.71%)\\nbpf.bpf.o          p2dq_init                    2343       2980        +637 (+27.19%)         201         237       +36 (+17.91%)\\nbpf.bpf.o          refresh_layer_cpumasks      16487     674760   +658273 (+3992.68%)        1770       65370  +63600 (+3593.22%)\\nbpf.bpf.o          rusty_select_cpu             1937      40872    +38935 (+2010.07%)         177        3210   +3033 (+1713.56%)\\nscx_central.bpf.o  central_dispatch              636       2687      +2051 (+322.48%)          63         227     +164 (+260.32%)\\nscx_nest.bpf.o     nest_init                     636        815        +179 (+28.14%)          60          73       +13 (+21.67%)\\nscx_qmap.bpf.o     qmap_dispatch      \\n---truncated"]
[18.557356, "o", "---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38165\"\u001b[0m\u001b[1;39m,\r\n"]
[18.557412, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nbpf, sockmap: Fix panic when calling skb_linearize\\n\\nThe panic can be reproduced by executing the command:\\n./bench sockmap -c 2 -p 1 -a --rx-verdict-ingress --rx-strp 100000\\n\\nThen a kernel panic was captured:\\n'''\\n[  657.460555] kernel BUG at net/core/skbuff.c:2178!\\n[  657.462680] Tainted: [W]=WARN\\n[  657.463287] Workqueue: events sk_psock_backlog\\n...\\n[  657.469610]  <TASK>\\n[  657.469738]  ? die+0x36/0x90\\n[  657.469916]  ? do_trap+0x1d0/0x270\\n[  657.470118]  ? pskb_expand_head+0x612/0xf40\\n[  657.470376]  ? pskb_expand_head+0x612/0xf40\\n[  657.470620]  ? do_error_trap+0xa3/0x170\\n[  657.470846]  ? pskb_expand_head+0x612/0xf40\\n[  657.471092]  ? handle_invalid_op+0x2c/0x40\\n[  657.471335]  ? pskb_expand_head+0x612/0xf40\\n[  657.471579]  ? exc_invalid_op+0x2d/0x40\\n[  657.471805]  ? asm_exc_invalid_op+0x1a/0x20\\n[  657.472052]  ? pskb_expand_head+0xd1/0xf40\\n[  657.472292]  ?"]
[18.557489, "o", " pskb_expand_head+0x612/0xf40\\n[  657.472540]  ? lock_acquire+0x18f/0x4e0\\n[  657.472766]  ? find_held_lock+0x2d/0x110\\n[  657.472999]  ? __pfx_pskb_expand_head+0x10/0x10\\n[  657.473263]  ? __kmalloc_cache_noprof+0x5b/0x470\\n[  657.473537]  ? __pfx___lock_release.isra.0+0x10/0x10\\n[  657.473826]  __pskb_pull_tail+0xfd/0x1d20\\n[  657.474062]  ? __kasan_slab_alloc+0x4e/0x90\\n[  657.474707]  sk_psock_skb_ingress_enqueue+0x3bf/0x510\\n[  657.475392]  ? __kasan_kmalloc+0xaa/0xb0\\n[  657.476010]  sk_psock_backlog+0x5cf/0xd70\\n[  657.476637]  process_one_work+0x858/0x1a20\\n'''\\n\\nThe panic originates from the assertion BUG_ON(skb_shared(skb)) in\\nskb_linearize(). A previous commit(see Fixes tag) introduced skb_get()\\nto avoid race conditions between skb operations in the backlog and skb\\nrelease in the recvmsg path. However, this caused the panic to always\\noccur when skb_linearize is executed.\\n\\nThe \\\"--rx-strp 100000\\\" parameter forces the RX path to use the strparser\\nmodule which aggregates data until it reaches"]
[18.557543, "o", " 100KB before calling sockmap\\nlogic. The 100KB payload exceeds MAX_MSG_FRAGS, triggering skb_linearize.\\n\\nTo fix this issue, just move skb_get into sk_psock_skb_ingress_enqueue.\\n\\n'''\\nsk_psock_backlog:\\n    sk_psock_handle_skb\\n       skb_get(skb) <== we move it into 'sk_psock_skb_ingress_enqueue'\\n       sk_psock_skb_ingress____________\\n                                       ?\\n                                       |\\n                                       | ? sk_psock_skb_ingress_self\\n                                       |      sk_psock_skb_ingress_enqueue\\nsk_psock_verdict_apply_________________?          skb_linearize\\n'''\\n\\nNote that for verdict_apply path, the skb_get operation is unnecessary so\\nwe add 'take_ref' param to control it's behavior.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38211\"\u001b[0m\u001b[1;39m,\r\n"]
[18.55764, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nRDMA/iwcm: Fix use-after-free of work objects after cm_id destruction\\n\\nThe commit 59c68ac31e15 (\\\"iw_cm: free cm_id resources on the last\\nderef\\\") simplified cm_id resource management by freeing cm_id once all\\nreferences to the cm_id were removed. The references are removed either\\nupon completion of iw_cm event handlers or when the application destroys\\nthe cm_id. This commit introduced the use-after-free condition where\\ncm_id_private object could still be in use by event handler works during\\nthe destruction of cm_id. The commit aee2424246f9 (\\\"RDMA/iwcm: Fix a\\nuse-after-free related to destroying CM IDs\\\") addressed this use-after-\\nfree by flushing all pending works at the cm_id destruction.\\n\\nHowever, still another use-after-free possibility remained. It happens\\nwith the work objects allocated for each cm_id_priv within\\nalloc_work_entries() during cm_id creation, and subs"]
[18.557716, "o", "equently freed in\\ndealloc_work_entries() once all references to the cm_id are removed.\\nIf the cm_id's last reference is decremented in the event handler work,\\nthe work object for the work itself gets removed, and causes the use-\\nafter-free BUG below:\\n\\n  BUG: KASAN: slab-use-after-free in __pwq_activate_work+0x1ff/0x250\\n  Read of size 8 at addr ffff88811f9cf800 by task kworker/u16:1/147091\\n\\n  CPU: 2 UID: 0 PID: 147091 Comm: kworker/u16:1 Not tainted 6.15.0-rc2+ #27 PREEMPT(voluntary)\\n  Hardware name: QEMU Standard PC (i440FX + PIIX, 1996), BIOS 1.16.3-3.fc41 04/01/2014\\n  Workqueue:  0x0 (iw_cm_wq)\\n  Call Trace:\\n   <TASK>\\n   dump_stack_lvl+0x6a/0x90\\n   print_report+0x174/0x554\\n   ? __virt_addr_valid+0x208/0x430\\n   ? __pwq_activate_work+0x1ff/0x250\\n   kasan_report+0xae/0x170\\n   ? __pwq_activate_work+0x1ff/0x250\\n   __pwq_activate_work+0x1ff/0x250\\n   pwq_dec_nr_in_flight+0x8c5/0xfb0\\n   process_one_work+0xc11/0x1460\\n   ? __pfx_process_one_work+0x10/0x10\\n   ? assign_work+0x16c/0x240\\n   worke"]
[18.557727, "o", "r_thread+0x5ef/0xfd0\\n   ? __pfx_worker_thread+0x10/0x10\\n   kthread+0x3b0/0x770\\n   ? __pfx_kthread+0x10/0x10\\n   ? rcu_is_watching+0x11/0xb0\\n   ? _raw_spin_unlock_irq+0x24/0x50\\n   ? rcu_is_watching+0x11/0xb0\\n   ? __pfx_kthread+0x10/0x10\\n   ret_from_fork+0x30/0x70\\n   ? __pfx_kthread+0x10/0x10\\n   ret_from_fork_asm+0x1a/0x30\\n   </TASK>\\n\\n  Allocated by task 147416:\\n   kasan_save_stack+0x2c/0x50\\n   kasan_save_track+0x10/0x30\\n   __kasan_kmalloc+0xa6/0xb0\\n   alloc_work_entries+0xa9/0x260 [iw_cm]\\n   iw_cm_connect+0x23/0x4a0 [iw_cm]\\n   rdma_connect_locked+0xbfd/0x1920 [rdma_cm]\\n   nvme_rdma_cm_handler+0x8e5/0x1b60 [nvme_rdma]\\n   cma_cm_event_handler+0xae/0x320 [rdma_cm]\\n   cma_work_handler+0x106/0x1b0 [rdma_cm]\\n   process_one_work+0x84f/0x1460\\n   worker_thread+0x5ef/0xfd0\\n   kthread+0x3b0/0x770\\n   ret_from_fork+0x30/0x70\\n   ret_from_fork_asm+0x1a/0x30\\n\\n  Freed by task 147091:\\n   kasan_save_stack+0x2c/0x50\\n   kasan_save_track+0x10/0x30\\n   kasan_save_free_info+0x37/0x60\\n   __kasan_slab_fre"]
[18.55783, "o", "e+0x4b/0x70\\n   kfree+0x13a/0x4b0\\n   dealloc_work_entries+0x125/0x1f0 [iw_cm]\\n   iwcm_deref_id+0x6f/0xa0 [iw_cm]\\n   cm_work_handler+0x136/0x1ba0 [iw_cm]\\n   process_one_work+0x84f/0x1460\\n   worker_thread+0x5ef/0xfd0\\n   kthread+0x3b0/0x770\\n   ret_from_fork+0x30/0x70\\n   ret_from_fork_asm+0x1a/0x30\\n\\n  Last potentially related work creation:\\n   kasan_save_stack+0x2c/0x50\\n   kasan_record_aux_stack+0xa3/0xb0\\n   __queue_work+0x2ff/0x1390\\n   queue_work_on+0x67/0xc0\\n   cm_event_handler+0x46a/0x820 [iw_cm]\\n   siw_cm_upcall+0x330/0x650 [siw]\\n   siw_cm_work_handler+0x6b9/0x2b20 [siw]\\n   process_one_work+0x84f/0x1460\\n   worker_thread+0x5ef/0xfd0\\n   kthread+0x3b0/0x770\\n   ret_from_fork+0x30/0x70\\n   ret_from_fork_asm+0x1a/0x30\\n\\nThis BUG is reproducible by repeating the blktests test case nvme/061\\nfor the rdma transport and the siw driver.\\n\\nTo avoid the use-after-free of cm_id_private work objects, ensure that\\nthe last reference to the cm_id is decremented not in the event handler\\nworks, but in th"]
[18.557918, "o", "e cm_id destruction context. For that purpose, mo\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38234\"\u001b[0m\u001b[1;39m,\r\n"]
[18.557951, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nsched/rt: Fix race in push_rt_task\\n\\nOverview\\n========\\nWhen a CPU chooses to call push_rt_task and picks a task to push to\\nanother CPU's runqueue then it will call find_lock_lowest_rq method\\nwhich would take a double lock on both CPUs' runqueues. If one of the\\nlocks aren't readily available, it may lead to dropping the current\\nrunqueue lock and reacquiring both the locks at once. During this window\\nit is possible that the task is already migrated and is running on some\\nother CPU. These cases are already handled. However, if the task is\\nmigrated and has already been executed and another CPU is now trying to\\nwake it up (ttwu) such that it is queued again on the runqeue\\n(on_rq is 1) and also if the task was run by the same CPU, then the\\ncurrent checks will pass even though the task was migrated out and is no\\nlonger in the pushable tasks list.\\n\\nCrashes\\n=======\\nThis bug re"]
[18.557982, "o", "sulted in quite a few flavors of crashes triggering kernel\\npanics with various crash signatures such as assert failures, page\\nfaults, null pointer dereferences, and queue corruption errors all\\ncoming from scheduler itself.\\n\\nSome of the crashes:\\n-> kernel BUG at kernel/sched/rt.c:1616! BUG_ON(idx >= MAX_RT_PRIO)\\n   Call Trace:\\n   ? __die_body+0x1a/0x60\\n   ? die+0x2a/0x50\\n   ? do_trap+0x85/0x100\\n   ? pick_next_task_rt+0x6e/0x1d0\\n   ? do_error_trap+0x64/0xa0\\n   ? pick_next_task_rt+0x6e/0x1d0\\n   ? exc_invalid_op+0x4c/0x60\\n   ? pick_next_task_rt+0x6e/0x1d0\\n   ? asm_exc_invalid_op+0x12/0x20\\n   ? pick_next_task_rt+0x6e/0x1d0\\n   __schedule+0x5cb/0x790\\n   ? update_ts_time_stats+0x55/0x70\\n   schedule_idle+0x1e/0x40\\n   do_idle+0x15e/0x200\\n   cpu_startup_entry+0x19/0x20\\n   start_secondary+0x117/0x160\\n   secondary_startup_64_no_verify+0xb0/0xbb\\n\\n-> BUG: kernel NULL pointer dereference, address: 00000000000000c0\\n   Call Trace:\\n   ? __die_body+0x1a/0x60\\n   ? no_context+0x183/0x350\\n   ? __warn+0"]
[18.558057, "o", "x8a/0xe0\\n   ? exc_page_fault+0x3d6/0x520\\n   ? asm_exc_page_fault+0x1e/0x30\\n   ? pick_next_task_rt+0xb5/0x1d0\\n   ? pick_next_task_rt+0x8c/0x1d0\\n   __schedule+0x583/0x7e0\\n   ? update_ts_time_stats+0x55/0x70\\n   schedule_idle+0x1e/0x40\\n   do_idle+0x15e/0x200\\n   cpu_startup_entry+0x19/0x20\\n   start_secondary+0x117/0x160\\n   secondary_startup_64_no_verify+0xb0/0xbb\\n\\n-> BUG: unable to handle page fault for address: ffff9464daea5900\\n   kernel BUG at kernel/sched/rt.c:1861! BUG_ON(rq->cpu != task_cpu(p))\\n\\n-> kernel BUG at kernel/sched/rt.c:1055! BUG_ON(!rq->nr_running)\\n   Call Trace:\\n   ? __die_body+0x1a/0x60\\n   ? die+0x2a/0x50\\n   ? do_trap+0x85/0x100\\n   ? dequeue_top_rt_rq+0xa2/0xb0\\n   ? do_error_trap+0x64/0xa0\\n   ? dequeue_top_rt_rq+0xa2/0xb0\\n   ? exc_invalid_op+0x4c/0x60\\n   ? dequeue_top_rt_rq+0xa2/0xb0\\n   ? asm_exc_invalid_op+0x12/0x20\\n   ? dequeue_top_rt_rq+0xa2/0xb0\\n   dequeue_rt_entity+0x1f/0x70\\n   dequeue_task_rt+0x2d/0x70\\n   __schedule+0x1a8/0x7e0\\n   ? blk_finish_plug+0x25/0x40\\n"]
[18.558142, "o", "   schedule+0x3c/0xb0\\n   futex_wait_queue_me+0xb6/0x120\\n   futex_wait+0xd9/0x240\\n   do_futex+0x344/0xa90\\n   ? get_mm_exe_file+0x30/0x60\\n   ? audit_exe_compare+0x58/0x70\\n   ? audit_filter_rules.constprop.26+0x65e/0x1220\\n   __x64_sys_futex+0x148/0x1f0\\n   do_syscall_64+0x30/0x80\\n   entry_SYSCALL_64_after_hwframe+0x62/0xc7\\n\\n-> BUG: unable to handle page fault for address: ffff8cf3608bc2c0\\n   Call Trace:\\n   ? __die_body+0x1a/0x60\\n   ? no_context+0x183/0x350\\n   ? spurious_kernel_fault+0x171/0x1c0\\n   ? exc_page_fault+0x3b6/0x520\\n   ? plist_check_list+0x15/0x40\\n   ? plist_check_list+0x2e/0x40\\n   ? asm_exc_page_fault+0x1e/0x30\\n   ? _cond_resched+0x15/0x30\\n   ? futex_wait_queue_me+0xc8/0x120\\n   ? futex_wait+0xd9/0x240\\n   ? try_to_wake_up+0x1b8/0x490\\n   ? futex_wake+0x78/0x160\\n   ? do_futex+0xcd/0xa90\\n   ? plist_check_list+0x15/0x40\\n   ? plist_check_list+0x2e/0x40\\n   ? plist_del+0x6a/0xd0\\n   ? plist_check_list+0x15/0x40\\n   ? plist_check_list+0x2e/0x40\\n   ? dequeue_pushable_task+0x20/0x70\\n"]
[18.558221, "o", "   ? __schedule+0x382/0x7e0\\n   ? asm_sysvec_reschedule_i\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38276\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nfs/dax: Fix \\\"don't skip locked entries when scanning entries\\\"\\n\\nCommit 6be3e21d25ca (\\\"fs/dax: don't skip locked entries when scanning\\nentries\\\") introduced a new function, wait_entry_unlocked_exclusive(),\\nwhich waits for the current entry to become unlocked without advancing\\nthe XArray iterator state.\\n\\nWaiting for the entry to become unlocked requires dropping the XArray\\nlock. This requires calling xas_pause() prior to dropping the lock\\nwhich leaves the xas in a suitable state for the next iteration. However\\nthis has the side-effect of advancing the xas state to the next index.\\nNormally this i"]
[18.558262, "o", "sn't an issue because xas_for_each() contains code to\\ndetect this state and thus avoid advancing the index a second time on\\nthe next loop iteration.\\n\\nHowever both callers of and wait_entry_unlocked_exclusive() itself\\nsubsequently use the xas state to reload the entry. As xas_pause()\\nupdated the state to the next index this will cause the current entry\\nwhich is being waited on to be skipped. This caused the following\\nwarning to fire intermittently when running xftest generic/068 on an XFS\\nfilesystem with FS DAX enabled:\\n\\n[   35.067397] ------------[ cut here ]------------\\n[   35.068229] WARNING: CPU: 21 PID: 1640 at mm/truncate.c:89 truncate_folio_batch_exceptionals+0xd8/0x1e0\\n[   35.069717] Modules linked in: nd_pmem dax_pmem nd_btt nd_e820 libnvdimm\\n[   35.071006] CPU: 21 UID: 0 PID: 1640 Comm: fstest Not tainted 6.15.0-rc7+ #77 PREEMPT(voluntary)\\n[   35.072613] Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS rel-1.16.3-0-ga6ed6b701f0a-prebuilt.qemu.org 04/01/204\\n[   35.074845] RIP: "]
[18.558298, "o", "0010:truncate_folio_batch_exceptionals+0xd8/0x1e0\\n[   35.075962] Code: a1 00 00 00 f6 47 0d 20 0f 84 97 00 00 00 4c 63 e8 41 39 c4 7f 0b eb 61 49 83 c5 01 45 39 ec 7e 58 42 f68\\n[   35.079522] RSP: 0018:ffffb04e426c7850 EFLAGS: 00010202\\n[   35.080359] RAX: 0000000000000000 RBX: ffff9d21e3481908 RCX: ffffb04e426c77f4\\n[   35.081477] RDX: ffffb04e426c79e8 RSI: ffffb04e426c79e0 RDI: ffff9d21e34816e8\\n[   35.082590] RBP: ffffb04e426c79e0 R08: 0000000000000001 R09: 0000000000000003\\n[   35.083733] R10: 0000000000000000 R11: 822b53c0f7a49868 R12: 000000000000001f\\n[   35.084850] R13: 0000000000000000 R14: ffffb04e426c78e8 R15: fffffffffffffffe\\n[   35.085953] FS:  00007f9134c87740(0000) GS:ffff9d22abba0000(0000) knlGS:0000000000000000\\n[   35.087346] CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\\n[   35.088244] CR2: 00007f9134c86000 CR3: 000000040afff000 CR4: 00000000000006f0\\n[   35.089354] Call Trace:\\n[   35.089749]  <TASK>\\n[   35.090168]  truncate_inode_pages_range+0xfc/0x4d0\\n[   35.091078]  truncate_pa"]
[18.558405, "o", "gecache+0x47/0x60\\n[   35.091735]  xfs_setattr_size+0xc7/0x3e0\\n[   35.092648]  xfs_vn_setattr+0x1ea/0x270\\n[   35.093437]  notify_change+0x1f4/0x510\\n[   35.094219]  ? do_truncate+0x97/0xe0\\n[   35.094879]  do_truncate+0x97/0xe0\\n[   35.095640]  path_openat+0xabd/0xca0\\n[   35.096278]  do_filp_open+0xd7/0x190\\n[   35.096860]  do_sys_openat2+0x8a/0xe0\\n[   35.097459]  __x64_sys_openat+0x6d/0xa0\\n[   35.098076]  do_syscall_64+0xbb/0x1d0\\n[   35.098647]  entry_SYSCALL_64_after_hwframe+0x77/0x7f\\n[   35.099444] RIP: 0033:0x7f9134d81fc1\\n[   35.100033] Code: 75 57 89 f0 25 00 00 41 00 3d 00 00 41 00 74 49 80 3d 2a 26 0e 00 00 74 6d 89 da 48 89 ee bf 9c ff ff ff5\\n[   35.102993] RSP: 002b:00007ffcd41e0d10 EFLAGS: 00000202 ORIG_RAX: 0000000000000101\\n[   35.104263] RAX: ffffffffffffffda RBX: 0000000000000242 RCX: 00007f9134d81fc1\\n[   35.105452] RDX: 0000000000000242 RSI: 00007ffcd41e1200 RDI: 00000000ffffff9c\\n[   35.106663] RBP: 00007ffcd41e1200 R08: 0000000000000000 R09: 0000000000000064\\n[   35.107923] R10: 000"]
[18.558461, "o", "00000000001a4 R11: 0000000000000202 R12: 0000000000000066\\n[   35.109112] R13: 0000000000100000 R14: 0000000000100000 R15: 0000000000000400\\n[   35.110357]  </TASK>\\n[   35.110769] irq event stamp: 8415587\\n[   35.111486] hardirqs last  enabled at (8415599): [<ffffffff8d74b562>] __up_console_se\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38327\"\u001b[0m\u001b[1;39m,\r\n"]
[18.558522, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nfgraph: Do not enable function_graph tracer when setting funcgraph-args\\n\\nWhen setting the funcgraph-args option when function graph tracer is net\\nenabled, it incorrectly enables it. Worse, it unregisters itself when it\\nwas never registered. Then when it gets enabled again, it will register\\nitself a second time causing a WARNing.\\n\\n ~# echo 1 > /sys/kernel/tracing/options/funcgraph-args\\n ~# head -20 /sys/kernel/tracing/trace\\n # tracer: nop\\n #\\n # entries-in-buffer/entries-written: 813/26317372   #P:8\\n #\\n #                                _-----=> irqs-off/BH-disabled\\n #                               / _----=> need-resched\\n #                              | / _---=> hardirq/softirq\\n #                              || / _--=> preempt-depth\\n #                              ||| / _-=> migrate-disable\\n #                              |||| /     delay\\n #           TASK-PID     CPU"]
[18.558554, "o", "#  |||||  TIMESTAMP  FUNCTION\\n #              | |         |   |||||     |         |\\n           <idle>-0       [007] d..4.   358.966010:  7)   1.692 us    |          fetch_next_timer_interrupt(basej=4294981640, basem=357956000000, base_local=0xffff88823c3ae040, base_global=0xffff88823c3af300, tevt=0xffff888100e47cb8);\\n           <idle>-0       [007] d..4.   358.966012:  7)               |          tmigr_cpu_deactivate(nextexp=357988000000) {\\n           <idle>-0       [007] d..4.   358.966013:  7)               |            _raw_spin_lock(lock=0xffff88823c3b2320) {\\n           <idle>-0       [007] d..4.   358.966014:  7)   0.981 us    |              preempt_count_add(val=1);\\n           <idle>-0       [007] d..5.   358.966017:  7)   1.058 us    |              do_raw_spin_lock(lock=0xffff88823c3b2320);\\n           <idle>-0       [007] d..4.   358.966019:  7)   5.824 us    |            }\\n           <idle>-0       [007] d..5.   358.966021:  7)               |            tmigr_inactive_up(group=0xffff888100cb9"]
[18.558597, "o", "000, child=0x0, data=0xffff888100e47bc0) {\\n           <idle>-0       [007] d..5.   358.966022:  7)               |              tmigr_update_events(group=0xffff888100cb9000, child=0x0, data=0xffff888100e47bc0) {\\n\\nNotice the \\\"tracer: nop\\\" at the top there. The current tracer is the \\\"nop\\\"\\ntracer, but the content is obviously the function graph tracer.\\n\\nEnabling function graph tracing will cause it to register again and\\ntrigger a warning in the accounting:\\n\\n ~# echo function_graph > /sys/kernel/tracing/current_tracer\\n -bash: echo: write error: Device or resource busy\\n\\nWith the dmesg of:\\n\\n ------------[ cut here ]------------\\n WARNING: CPU: 7 PID: 1095 at kernel/trace/ftrace.c:3509 ftrace_startup_subops+0xc1e/0x1000\\n Modules linked in: kvm_intel kvm irqbypass\\n CPU: 7 UID: 0 PID: 1095 Comm: bash Not tainted 6.16.0-rc2-test-00006-gea03de4105d3 #24 PREEMPT\\n Hardware name: QEMU Standard PC (Q35 + ICH9, 2009), BIOS 1.16.3-debian-1.16.3-2 04/01/2014\\n RIP: 0010:ftrace_startup_subops+0xc1e/0x1000\\n"]
[18.558691, "o", " Code: 48 b8 22 01 00 00 00 00 ad de 49 89 84 24 88 01 00 00 8b 44 24 08 89 04 24 e9 c3 f7 ff ff c7 04 24 ed ff ff ff e9 b7 f7 ff ff <0f> 0b c7 04 24 f0 ff ff ff e9 a9 f7 ff ff c7 04 24 f4 ff ff ff e9\\n RSP: 0018:ffff888133cff948 EFLAGS: 00010202\\n RAX: 0000000000000001 RBX: 1ffff1102679ff31 RCX: 0000000000000000\\n RDX: 1ffffffff0b27a60 RSI: ffffffff8593d2f0 RDI: ffffffff85941140\\n RBP: 00000000000c2041 R08: ffffffffffffffff R09: ffffed1020240221\\n R10: ffff88810120110f R11: ffffed1020240214 R12: ffffffff8593d2f0\\n R13: ffffffff8593d300 R14: ffffffff85941140 R15: ffffffff85631100\\n FS:  00007f7ec6f28740(0000) GS:ffff8882b5251000(0000) knlGS:0000000000000000\\n CS:  0010 DS: 0000 ES: 0000 CR0: 0000000080050033\\n CR2: 00007f7ec6f181c0 CR3: 000000012f1d0005 CR4: 0000000000172ef0\\n Call Trace:\\n  <TASK>\\n  ? __pfx_ftrace_startup_subops+0x10/0x10\\n  ? find_held_lock+0x2b/0x80\\n  ? ftrace_stub_direct_tramp+0x10/0x10\\n  ? ftrace_stub_direct_tramp+0x10/0x10\\n  ? trace_preempt_on+0xd0/0x110\\n  ? __pfx_trace_graph_entry"]
[18.558781, "o", "_args+0x10/\\n---truncated---\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-3833\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Zohocorp ManageEngine ADSelfService Plus versions 6513 and prior are vulnerable to authenticated SQL injection in the MFA reports.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38332\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\nscsi: lpfc: Use memcpy() for BIOS version\\n\\nThe strlcat() with FORTIFY support is triggering a panic because it\\nthinks the target buffer will overflow although the correct target\\nbuffer size is passed in.\\n\\nAnyway, instead of memset() with 0 followed by a st"]
[18.558826, "o", "rlcat(), just use\\nmemcpy() and ensure that the resulting buffer is NULL terminated.\\n\\nBIOSVersion is only used for the lpfc_printf_log() which expects a\\nproperly terminated string.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"_printf\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-38349\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In the Linux kernel, the following vulnerability has been resolved:\\n\\neventpoll: don't decrement ep refcount while still holding the ep mutex\\n\\nJann Horn points out that epoll is decrementing the ep refcount and then\\ndoing a\\n\\n    mutex_unlock(&ep->mtx);\\n\\nafterwards. That's very wrong, because it can lead to a use-after-free.\\n\\nThat pattern is actually fine for the very last reference, because the\\ncode in question will delay the actual call to \\\"ep_free(ep)\\\" until after\\nit has unlocked the mutex.\\n\\nBut it's wrong for the much subtler \\\"next to last\\\" case"]
[18.558859, "o", " when somebody\\n*else* may also be dropping their reference and free the ep while we're\\nstill using the mutex.\\n\\nNote that this is true even if that other user is also using the same ep\\nmutex: mutexes, unlike spinlocks, can not be used for object ownership,\\neven if they guarantee mutual exclusion.\\n\\nA mutex \\\"unlock\\\" operation is not atomic, and as one user is still\\naccessing the mutex as part of unlocking it, another user can come in\\nand get the now released mutex and free the data structure while the\\nfirst user is still cleaning up.\\n\\nSee our mutex documentation in Documentation/locking/mutex-design.rst,\\nin particular the section [1] about semantics:\\n\\n\\t\\\"mutex_unlock() may access the mutex structure even after it has\\n\\t internally released the lock already - so it's not safe for\\n\\t another context to acquire the mutex and assume that the\\n\\t mutex_unlock() context is not using the structure anymore\\\"\\n\\nSo if we drop our ep ref before the mutex unlock, but we weren't the\\nlast one, we may th"]
[18.558965, "o", "en unlock the mutex, another user comes in, drops\\n_their_ reference and releases the 'ep' as it now has no users - all\\nwhile the mutex_unlock() is still accessing it.\\n\\nFix this by simply moving the ep refcount dropping to outside the mutex:\\nthe refcount itself is atomic, and doesn't need mutex protection (that's\\nthe whole _point_ of refcounts: unlike mutexes, they are inherently\\nabout object lifetimes).\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-40669\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Incorrect authorization vulnerability in TCMAN's GIM v11. This vulnerability allows an unprivileged attacker to modify the permissions held by each of the application's users, including the user himself by sending a POST request to /PC/Options.aspx?Command=2&amp;Page=-1.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\""]
[18.559006, "o", "self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-41255\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Cyberduck and Mountain Duck improperly handle TLS certificate pinning for untrusted certificates (e.g., self-signed), unnecessarily installing it to the Windows Certificate Store of the current user without any restrictions.\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\nThis issue affects Cyberduck through 9.1.6 and Mountain Duck through 4.17.5.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-41256\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Cyberduck and Mountain Duck improper handle TLS certificate pinning for untrusted certificates (e.g., self-signed), since the certificate fingerprint is stored as SHA-1, although SHA-1 is considered weak.\\n\\n\\n\\n\\n\\n\\n\\nThis issue affects Cy"]
[18.559096, "o", "berduck: through 9.1.6; Mountain Duck: through 4.17.5.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-4316\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Improper access control in PAM feature in Devolutions Server allows a PAM user to self approve their PAM requests even if disallowed by the configured policy via specific user interface actions.\\n\\n\\n\\n\\n\\nThis issue affects Devolutions Server versions from 2025.1.3.0 through 2025.1.6.0, and all versions up to 2024.3.15.0.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.559148, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-43856\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"immich is a high performance self-hosted photo and video management solution. Prior to 1.132.0, immich is vulnerable to account hijacking through oauth2, because the state parameter is not being checked. The oauth2 state parameter is similar to a csrf token, so when the user starts the login flow this unpredictable token is generated and somehow saved in the browser session and passed to the identity provider, which will return the state parameter when redirecting the user back to immich. Before the user is logged in that parameter needs to be verified to make sure the login was actively initiated by the user in this browser session. On it's own, this wouldn't be too bad, but when immich uses the /user-settings page as a redirect_uri, it will automatically link t"]
[18.559233, "o", "he accounts if the user was already logged in. This means that if someone has an immich instance with a public oauth provider (like google), an attacker can - for example - embed a hidden iframe in a webpage or even just send the victim a forged oauth login url with a code that logs the victim into the attackers oauth account and redirects back to immich and links the accounts. After this, the attacker can log into the victims account using their own oauth credentials. This vulnerability is fixed in 1.132.0.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-46329\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"libsnowflakeclient is the Snowflake Connector for C/C++. Versions starting from 0.5.0 to before 2.2.0, are vulnerable to local logging of sensitive information. When the logging level was set to DEBUG, the Connector would log locally the client-"]
[18.559337, "o", "side encryption master key of the target stage during the execution of GET/PUT commands. This key by itself does not grant access to any sensitive data without additional access authorizations, and is not logged server-side by Snowflake. This issue has been patched in version 2.2.0.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-46338\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Audiobookshelf is a self-hosted audiobook and podcast server. Prior to version 2.21.0, an improper input handling vulnerability in the `/api/upload` endpoint allows an attacker to perform a reflected cross-site scripting (XSS) attack by submitting malicious payloads in the `libraryId` field. The unsanitized input is reflected in the server’s error message, enabling arbitrary JavaScript execution in a victim's browser. This issue has been patched in version 2.21.0.\"\u001b[0m"]
[18.559408, "o", "\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-46339\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreshRSS is a self-hosted RSS feed aggregator. Prior to version 1.26.2, it's possible to poison feed favicons by adding a given URL as a feed with the proxy set to an attacker-controlled one and disabled SSL verifying. The favicon hash is computed by hashing the feed URL and the salt, whilst not including the following variables: proxy address, proxy protocol, and whether SSL should be verified. Therefore it's possible to poison a favicon of a given feed by simply intercepting the response of the feed, and changing the website URL to one where a threat actor controls the feed favicon. Feed favicons can be replaced for all users by anyone. Version 1.26.2 fixes the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b["]
[18.55945, "o", "1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-46341\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreshRSS is a self-hosted RSS feed aggregator. Prior to version 1.26.2, when the server is using HTTP auth via reverse proxy, it's possible to impersonate any user either via the `Remote-User` header or the `X-WebAuth-User` header by making specially crafted requests via the add feed functionality and obtaining the CSRF token via XPath scraping. The attacker has to know the IP address of the proxied FreshRSS instance and the admin's username, while also having an account on the instance. An attacker can send specially crafted requests in order to gain unauthorized access to internal services. This can also lead to privilege escalation like in the demonstrated scenario, although users that have setup OIDC are not affected by privilege escalation. Version 1.26.2 contains a patch for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_"]
[18.559517, "o", "keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n"]
[18.559631, "o", "    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-46571\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Open WebUI is a self-hosted artificial intelligence platform designed to operate entirely offline. Prior to version 0.6.6, low privileged users can upload HTML files which contain JavaScript code via the `/api/v1/files/` backend endpoint. This endpoint returns a file id, which can be used to open the file in the browser and trigger the JavaScript code in the user's browser. Under the default settings, files uploaded by low-privileged users can only be viewed by admins or themselves, limiting the impact of this vulnerability. A link to such a file can be sent to an admin, and if clicked, will give the low-privileged user complete control over the admin's account, ultimately enabling RCE via functions. Version 0.6.6 contains a fix for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b"]
[18.559682, "o", "[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-46719\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Open WebUI is a self-hosted artificial intelligence platform designed to operate entirely offline. Prior to version 0.6.6, a vulnerability in the way certain html tags in chat messages are rendered allows attackers to inject JavaScript code into a chat transcript. The JavaScript code will be executed in the user's browser every time that chat transcript is opened, allowing attackers to retrieve the user's access token and gain full control over their account. Chat transcripts can be shared with other users in the same server, or with the whole open-webui community if \\\"Enable Community Sharing\\\" is enabled in the admin panel. If this exploit is used against an admin user, it is possible to achieve Remote Code Execution on the server where the open-webui backend is hosted. This can be done by creating a new function which contains malicious python code. This vulnerabili"]
[18.559721, "o", "ty also affects chat transcripts uploaded to `https://openwebui.com/c/<user>/<chat_id>`, allowing for wormable stored XSS in https[:]//openwebui[.]com. Version 0.6.6 contains a patch for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47153\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Certain build processes for libuv and Node.js for 32-bit systems, such as for the nodejs binary package through nodejs_20.19.0+dfsg-2_i386.deb for Debian GNU/Linux, have an inconsistent off_t size (e.g., building on i386 Debian always uses _FILE_OFFSET_BITS=64 for the libuv dynamic library, but uses the _FILE_OFFSET_BITS global system default of 32 for nodejs), leading to out-of-bounds access. NOTE: this is not a problem in the Node.js software itself. In particular, the Node.js website's download page does not offer prebuilt Node.js for Linux on i386.\"\u001b["]
[18.559776, "o", "0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47274\"\u001b[0m\u001b[1;39m,\r\n"]
[18.559829, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"ToolHive is a utility designed to simplify the deployment and management of Model Context Protocol (MCP) servers. Due to the ordering of code used to start an MCP server container, versions of ToolHive prior to 0.0.33 inadvertently store secrets in the run config files which are used to restart stopped containers. This means that an attacker who has access to the home folder of the user who starts the MCP server can read secrets without needing access to the secrets store itself. This only applies to secrets which were used in containers whose run configs exist at a point in time - other secrets remaining inaccessible. ToolHive 0.0.33 fixes the issue. Some workarounds are available. Stop and delete any running MCP servers, or manually remove any runconfigs from `$HOME/Library/Application Support/toolhive/runconfigs/` (macOS) or `$HOME/.state/toolhive/runconfigs/` (Linux).\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b["]
[18.559915, "o", "1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47285\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Vyper is the Pythonic Programming Language for the Ethereum Virtual Machine. In versions up to and including 0.4.2rc1, `concat()` may skip evaluation of side effects when the length of an argument is zero. This is due to a fastpath in the implementation which skips evaluation of argument expressions when their length is zero. In practice, it would be very unusual in user code to construct zero-length bytestrings using an expression with side-effects, since zero-length bytestrings are typically constructed with the empty literal `b\\\"\\\"`; the only way to construct an empty bytestring which has side effects would be with the ternary operator introduced in v0.3.8, e.g. `b\\\"\\\" if self.do_some_side_effect() else b\\\"\\\"`. The fix is available in pull request 4644 and expected to be part of the 0.4.2 release. As a workaround, don't have sid"]
[18.559964, "o", "e effects in expressions which construct zero-length bytestrings.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47424\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Retool (self-hosted) before 3.196.0 allows Host header injection. When the BASE_DOMAIN environment variable is not set, the HTTP host header can be manipulated.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47774\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Vyper is the Pythonic Programming Language for the Ethereum Virtual Machine. In versions up to and including 0.4.2rc1, the `slice()` builtin can elide side effects when the output length is 0, and the source bytestring is a builtin (`msg.data` or `<address>.code`). T"]
[18.559978, "o", "he reason is that for these source locations, the check that `length >= 1` is skipped. The result is that a 0-length bytestring constructed with slice can be passed to `make_byte_array_copier`, which elides evaluation of its source argument when the max length is 0. The impact is that side effects in the `start` argument may be elided when the `length` argument is 0, e.g. `slice(msg.data, self.do_side_effect(), 0)`. The fix in pull request 4645 disallows any invocation of `slice()` with length 0, including for the ad hoc locations discussed in this advisory. The fix is expected to be part of version 0.4.2.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560035, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47788\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Atheos is a self-hosted browser-based cloud IDE. Prior to v602, similar to GHSA-rgjm-6p59-537v/CVE-2025-22152, the `$target` parameter in `/controller.php` was not properly validated, which could allow an attacker to execute arbitrary files on the server via path traversal. v602 contains a fix for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47790\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560087, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Nextcloud Server is a self hosted personal cloud system. Nextcloud Server prior to 29.0.15, 30.0.9, and 31.0.3 and Nextcloud Enterprise Server prior to 26.0.13.15, 27.1.11.15, 28.0.14.6, 29.0.15, 30.0.9, and 31.0.3 have a bug with session handling. The bug caused skipping the second factor confirmation after a successful login with the username and password when the server was configured with `remember_login_cookie_lifetime` set to `0`, once the session expired on the page to select the second factor and the page is reloaded. Nextcloud Server 29.0.15, 30.0.9, and 31.0.3 and Nextcloud Enterprise Server is upgraded to 26.0.13.15, 27.1.11.15, 28.0.14.6, 29.0.15, 30.0.9 and 31.0.3 contain a patch. As a workaround, set the `remember_login_cookie_lifetime` in config.php to a value other than `0`, e.g. `900`. Beware that this is only a workaround for new sessions created after the configuration change. System administration can delete affected sessions.\"\u001b[0m\u001b[1;"]
[18.560172, "o", "39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47791\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560234, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Nextcloud Server is a self hosted personal cloud system. In Nextcloud Server prior to 28.0.13, 29.0.10, and 30.0.3 and Nextcloud Enterprise Server prior to 28.0.13, 29.0.10, and 30.0.3, a currently unused endpoint to verify a share recipient was not protected correctly, allowing to proxy requests to another server. The endpoint was removed in Nextcloud Server 28.0.13, 29.0.10, and 30.0.3 and Nextcloud Enterprise Server 28.0.13, 29.0.10, and 30.0.3. No known workarounds are available.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47793\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Nextcloud Server is a self hosted personal cloud system, and the Nextcloud Groupfolders app provides admin-configured folders shared by everyone in a group or team. In Nextcloud Server prior to 30.0.2, 29.0.9, and 2"]
[18.560269, "o", "8.0.1, Nextcloud Enterprise Server prior to 30.0.2 and 29.0.9, and Nextcloud Groupfolders app prior to 18.0.3, 17.0.5, and 16.0.11, the absence of quota checking on attachments allowed logged-in users to upload files exceeding the group folder quota. Nextcloud Server versions 30.0.2 and 29.0.9, Nextcloud Enterprise Server versions 30.0.2, 29.0.9, or 28.0.12, and Nextcloud Groupfolders app 18.0.3, 17.0.5, and 16.0.11 fix the issue. No known workarounds are available.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47794\"\u001b[0m\u001b[1;39m,\r\n"]
[18.56029, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Nextcloud Server is a self hosted personal cloud system. In Nextcloud Server prior to 29.0.13, 30.0.7, and 31.0.1 and Nextcloud Enterprise Server prior to 26.0.13.13, 27.1.11.13, 28.0.14.4, 29.0.13, 30.0.7, and 31.0.1, an attacker on a multi-user system may read temporary files from Nextcloud running with a different user account, or run a symlink attack. Nextcloud Server versions 29.0.13, 30.0.7, and 31.0.1 and Nextcloud Enterprise Server 26.0.13.13, 27.1.11.13, 28.0.14.4, 29.0.13, 30.0.7, and 31.0.1 fix the issue. No known workarounds are available.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47811\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"In Wing FTP Server through 7.4.4, the administrative web interface (listening by default on port 5466) runs as root or SYSTEM by default. The web "]
[18.560375, "o", "application itself offers several legitimate ways to execute arbitrary system commands (i.e., through the web console or the task scheduler), and they are automatically executed in the highest possible privilege context. Because administrative users of the web interface are not necessarily also system administrators, one might argue that this is a privilege escalation. (If a privileged application role is not available to an attacker, CVE-2025-47812 can be leveraged.) NOTE: the vendor reportedly considers this behavior \\\"fine to keep.\\\"\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47936\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"TYPO3 is an open source, PHP based web content management system. In versions on the 12.x branch prior to 12.4.31 LTS and the 13.x branch prior to 13.4.2 LTS, Webhooks are inherently vulnerable to Cross-Site Request "]
[18.560418, "o", "Forgery (CSRF), which can be exploited by adversaries to target internal resources (e.g., localhost or other services on the local network). While this is not a vulnerability in TYPO3 itself, it may enable attackers to blindly access systems that would otherwise be inaccessible. An administrator-level backend user account is required to exploit this vulnerability. Users should update to TYPO3 version 12.4.31 LTS or 13.4.12 LTS to fix the problem.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-47943\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560477, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Gogs is an open source self-hosted Git service. In application version 0.14.0+dev and prior, there is a stored cross-site scripting (XSS) vulnerability present in Gogs, which allows client-side Javascript code execution. The vulnerability is caused by the usage of a vulnerable and outdated component: pdfjs-1.4.20 under public/plugins/. This issue has been fixed for gogs.io/gogs in version 0.13.3.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-4820\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Impact\\n\\nCloudflare quiche was discovered to be vulnerable to incorrect congestion window growth, which could cause it to send data at a rate faster than the path might actually support.\\n\\nAn unauthenticated remote attacker can exploit the vulnerability by first completing a handshake and initiating a "]
[18.560525, "o", "congestion-controlled data transfer towards itself. Then, it could manipulate the victim's congestion control state by sending ACK frames exercising an opportunistic ACK attack; see RFC 9000 Section 21.4. The victim could grow the congestion window beyond typical expectations and allow more bytes in flight than the path might really support.\\n\\n\\n\\nPatches\\n\\n\\nquiche 0.24.4 is the earliest version containing the fix for this issue.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560594, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-4821\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Impact\\n\\nCloudflare quiche was discovered to be vulnerable to incorrect congestion window growth, which could cause it to send data at a rate faster than the path might actually support.\\n\\nAn unauthenticated remote attacker can exploit the vulnerability by first completing a handshake and initiating a congestion-controlled data transfer towards itself. Then, it could manipulate the victim's congestion control state by sending ACK frames covering a large range of packet numbers (including packet numbers that had never been sent); see RFC 9000 Section 19.3. The victim could grow the congestion window beyond typical expectations and allow more bytes in flight than the path might really support. In extreme cases, the window might grow beyond the limit of the interna"]
[18.560601, "o", "l variable's type, leading to an overflow panic.\\n\\n\\n\\nPatches\\n\\n\\nquiche 0.24.4 is the earliest version containing the fix for this issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48388\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560644, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.178, the application performs insufficient validation of user-supplied data, which is used as arguments to string formatting functions. As a result, an attacker can pass a string containing special symbols (\\\\r, \\\\n, \\\\t)to the application. This issue has been patched in version 1.8.178.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48389\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.178, FreeScout is vulnerable to deserialization of untrusted data due to insufficient validation. Through the set function, a string with a serialized object can be passed, and when getting an option through the get method, deserialization will occu"]
[18.560668, "o", "r, which will allow arbitrary code execution This issue has been patched in version 1.8.178.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n"]
[18.560674, "o", "    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48390\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560735, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.178, FreeScout is vulnerable to code injection due to insufficient validation of user input in the php_path parameter. The backticks characters are not removed, as well as tabulation is not removed. When checking user input, the file_exists function is also called to check for the presence of such a file (folder) in the file system. A user with the administrator role can create a translation for the language, which will create a folder in the file system. Further in tools.php, the user can specify the path to this folder as php_path, which will lead to the execution of code in backticks. This issue has been patched in version 1.8.178.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48471\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560785, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.179, the application does not check or performs insufficient checking of files uploaded to the application. This allows files to be uploaded with the phtml and phar extensions, which can lead to remote code execution if the Apache web server is used. This issue has been patched in version 1.8.179.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48472\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560809, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.179, there is no check to ensure that the user is disabling notifications for the mailbox to which they already have access. Moreover, the code explicitly implements functionality that if the user does not have access to the mailbox, then after disabling (enabling) notifications for this mailbox, the user will gain access to it. This issue has been patched in version 1.8.179.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48473\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560863, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.179, when creating a conversation from a message in another conversation, there is no check to ensure that the user has the ability to view this message. Thus, the user can view arbitrary messages from other mailboxes or from other conversations to which they do not have access (access restriction to conversations is implemented by the show_only_assigned_conversations setting, which is also not checked). This issue has been patched in version 1.8.179.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48474\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, the application incorrectly checks user access rights for conversations. User"]
[18.560923, "o", "s with show_only_assigned_conversations enabled can assign themselves to an arbitrary conversation from the mailbox to which they have access, thereby bypassing the restriction on viewing conversations. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48475\"\u001b[0m\u001b[1;39m,\r\n"]
[18.560996, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, the System does not provide a check on which \\\"clients\\\" of the System an authorized user can view and edit, and which ones they cannot. As a result, an authorized user who does not have access to any of the existing mailboxes, as well as to any of the existing conversations, has the ability to view and edit the System's clients. The limitation of client visibility can be implemented by the limit_user_customer_visibility setting, however, in the specified scenarios, there is no check for the presence of this setting. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48476\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and"]
[18.561009, "o", " shared mailbox. Prior to version 1.8.180, when adding and editing user records using the fill() method, there is no check for the absence of the password field in the data coming from the user, which leads to a mass-assignment vulnerability. As a result, a user with the right to edit other users of the system can change their password, and then log in to the system using the set password. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48477\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, the application's logic requires the user to perform a correct sequence of actions to implement a functional capability, but the application allows access to the functional capability without correctly completing one or more actio"]
[18.561053, "o", "ns in the sequence. The leaves the attributes of Mailbox object able to be changed by the fill method. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48478\"\u001b[0m\u001b[1;39m,\r\n"]
[18.561075, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, insufficient input validation during user creation has resulted in a mass assignment vulnerability, allowing an attacker to manipulate all fields of the object, which are enumerated in the $fillable array (the User object), when creating a new user. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48479\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, the laravel-translation-manager package does not correctly validate user input, enabling the deletion of any directory, given sufficient access rights. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34"]
[18.561097, "o", "m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48480\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, an authorized user with the administrator role or with the privilege User::PERM_EDIT_USERS can create a user, specifying the path to the user's avatar ../.htaccess during creation, and then delete the user's avatar, resulting in the deletion of the file .htaccess in the folder /storage/app/public. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48481\"\u001b[0m\u001b[1;39m,\r\n"]
[18.561223, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, an attacker with an unactivated email invitation containing invite_hash, can exploit this vulnerability to self-activate their account, despite it being blocked or deleted, by leveraging the invitation link from the email to gain initial access to the account. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48482\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, there is a mass assignment vulnerability. The Customer object is updated using the fill() method, which processes fields such as channel and channel_id. However, the fill() method is called with all client-provided data"]
[18.561278, "o", ", including unexpected values for channel and channel_id, leading to a mass assignment vulnerability. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48483\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, the application is vulnerable to Cross-Site Scripting (XSS) attacks due to incorrect input validation and sanitization of user-input data during mail signature sanitization. An attacker can inject arbitrary HTML code, including JavaScript scripts, into the page processed by the user's browser, allowing them to steal sensitive data, hijack user sessions, or conduct other malicious activities. Additionally, if an administrator accesses one of these emails with a modified signature, it could result in a subsequent Cros"]
[18.561324, "o", "s-Site Request Forgery (CSRF) vulnerability. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48484\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.178, the application is vulnerable to Cross-Site Scripting (XSS) attacks due to incorrect input validation and sanitization of user-input data in the conversation POST data body. This issue has been patched in version 1.8.178.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48485\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, the"]
[18.561449, "o", " application is vulnerable to Cross-Site Scripting (XSS) attacks due to incorrect input validation and sanitization of user-input data when an authenticated user updates the profile of an arbitrary customer. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48486\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, the cross-site scripiting (XSS) vulnerability is caused by the lack of input validation and sanitization in both \\\\Session::flash and __, allowing user input to be executed without proper filtering. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m:"]
[18.561477, "o", " \u001b[0m\u001b[0;32m\"CVE-2025-48487\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, when creating a translation of a phrase that appears in a flash-message after a completed action, it is possible to inject a payload to exploit XSS vulnerability. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48488\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, deleting the file .htaccess allows an attacker to upload an HTML file containing malicious JavaScript code to the server, which can result in a Cross-Site Scripting (XSS) vulnerability. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_k"]
[18.561514, "o", "eyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48489\"\u001b[0m\u001b[1;39m,\r\n"]
[18.56156, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.180, the application is vulnerable to Cross-Site Scripting (XSS) attacks due to insufficient data validation and sanitization during data reception. This issue has been patched in version 1.8.180.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48494\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Gokapi is a self-hosted file sharing server with automatic expiration and encryption support. When using end-to-end encryption, a stored cross-site scripting vulnerability can be exploited by uploading a file with JavaScript code embedded in the filename. After upload and every time someone opens the upload list, the script is then parsed. Prior to version 2.0.0, there was no user permission system implemented, therefore"]
[18.561591, "o", " all authenticated users were already able to see and modify all resources, even if end-to-end encrypted, as the encryption key had to be the same for all users using a version prior to 2.0.0. If a user is the only authenticated user using Gokapi, they are not affected. This issue has been fixed in v2.0.0. A possible workaround would be to disable end-to-end encryption.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48495\"\u001b[0m\u001b[1;39m,\r\n"]
[18.561621, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Gokapi is a self-hosted file sharing server with automatic expiration and encryption support. By renaming the friendly name of an API key, an authenticated user could inject JS into the API key overview, which would also be executed when another user clicks on his API tab. Prior to version 2.0.0, there was no user permission system implemented, therefore all authenticated users were already able to see and modify all resources, even if end-to-end encrypted, as the encryption key had to be the same for all users of versions prior to 2.0.0. If a user is the only authenticated user using Gokapi, they are not affected. This issue has been fixed in v2.0.0. A workaround would be to not open the API page if it is possible that another user might have injected code.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n"]
[18.561627, "o", "      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48875\"\u001b[0m\u001b[1;39m,\r\n"]
[18.561673, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.181, the system's incorrect validation of last_name and first_name during profile data updates allows for the injection of arbitrary JavaScript code, which will be executed in a flesh-message when the data is deleted, potentially leading to a Cross-Site Scripting (XSS) vulnerability. This issue has been patched in version 1.8.181.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n"]
[18.561681, "o", "    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-48880\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"FreeScout is a free self-hosted help desk and shared mailbox. Prior to version 1.8.181, when an administrative account is a deleting a user, there is the the possibility of a race condition occurring. This issue has been patched in version 1.8.181.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.561712, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49005\"\u001b[0m\u001b[1;39m,\r\n"]
[18.561766, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Next.js is a React framework for building full-stack web applications. In Next.js App Router from 15.3.0 to before 15.3.3 and Vercel CLI from 41.4.1 to 42.2.0, a cache poisoning vulnerability was found. The issue allowed page requests for HTML content to return a React Server Component (RSC) payload instead under certain conditions. When deployed to Vercel, this would only impact the browser cache, and would not lead to the CDN being poisoned. When self-hosted and deployed externally, this could lead to cache poisoning if the CDN does not properly distinguish between RSC / HTML in the cache keys. This issue has been resolved in Next.js 15.3.3.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n"]
[18.561859, "o", "      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49008\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Atheos is a self-hosted browser-based cloud integrated development environment. Prior to version 6.0.4, improper use of `escapeshellcmd()` in `/components/codegit/traits/execute.php` allows argument injection, leading to arbitrary command execution. Atheos administrators and users of vulnerable versions are at risk of data breaches or server compromise. Version 6.0.4 introduces a `Common::safe_execute` function that sanitizes all arguments using `escapeshellarg()` prior to execution and migrated all components potentially vulnerable to similar exploits to use this new templated execution system.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49136\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"listmonk is a standalo"]
[18.561888, "o", "ne, self-hosted, newsletter and mailing list manager. Starting in version 4.0.0 and prior to version 5.0.2, the `env` and `expandenv` template functions which is enabled by default in Sprig enables capturing of env variables on host. While this may not be a problem on single-user (super admin) installations, on multi-user installations, this allows non-super-admin users with campaign or template permissions to use the `{{ env }}` template expression to capture sensitive environment variables. Users should upgrade to v5.0.2 to mitigate the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49588\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Linkwarden is a self-hosted, open-source collaborative bookmark manager to collect, organize and archive webpages. In version 2.10.2, the server accepts links of format file:///etc/passwd and doesn't do any "]
[18.561922, "o", "validation before sending them to parsers and playwright, this can result in leak of other user's links (and in some cases it might be possible to leak environment secrets). This issue has been patched in version 2.10.3 which has not been made public at time of publication.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49827\"\u001b[0m\u001b[1;39m,\r\n"]
[18.562007, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Conjur provides secrets management and application identity for infrastructure. Conjur OSS versions 1.19.5 through 1.22.0 and Secrets Manager, Self-Hosted (formerly known as Conjur Enterprise) 13.1 through 13.5 and 13.6 are vulnerable to bypass of the IAM authenticator. An attacker who can manipulate the headers signed by AWS can take advantage of a malformed regular expression to redirect the authentication validation request that Secrets Manager, Self-Hosted sends to AWS to a malicious server controlled by the attacker. This redirection could result in a bypass of the Secrets Manager, Self-Hosted IAM Authenticator, granting the attacker the permissions granted to the client whose request was manipulated. This issue affects both Secrets Manager, Self-Hosted (formerly Conjur Enterprise) and Conjur OSS. Conjur OSS version 1.22.1 and Secrets Manager, Self-Hosted versions 13.5.1 and 13.6.1 fix the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b["]
[18.562087, "o", "1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49828\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Conjur provides secrets management and application identity for infrastructure. Conjur OSS versions 1.19.5 through 1.21.1 and Secrets Manager, Self-Hosted (formerly known as Conjur Enterprise) 13.1 through 13.4.1 are vulnerable to remote code execution An authenticated attacker who can inject secrets or templates into the Secrets Manager, Self-Hosted database could take advantage of an exposed API endpoint to execute arbitrary Ruby code within the Secrets Manager process. This issue affects both Secrets Manager, Self-Hosted (formerly Conjur Enterprise) and Conjur OSS. Conjur OSS version 1.21.2 and Secrets Manager, Self-Hosted version 13.5 fix the issue.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.562143, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49829\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Conjur provides secrets management and application identity for infrastructure. Missing validations in Secrets Manager, Self-Hosted allows authenticated attackers to inject resources into the database and to bypass permission checks. This issue affects Secrets Manager, Self-Hosted (formerly Conjur Enterprise) prior to versions 13.5.1 and 13.6.1 and Conjur OSS prior to version 1.22.1. Conjur OSS version 1.22.1 and Secrets Manager, Self-Hosted versions 13.5.1 and 13.6.1 fix the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49830\"\u001b[0m\u001b[1;39m,\r\n"]
[18.56222, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Conjur provides secrets management and application identity for infrastructure. An authenticated attacker who is able to load policy can use the policy yaml parser to reference files on the Secrets Manager, Self-Hosted server. These references may be used as reconnaissance to better understand the folder structure of the Secrets Manager/Conjur server or to have the yaml parser include files on the server in the yaml that is processed as the policy loads. This issue affects Secrets Manager, Self-Hosted (formerly Conjur Enterprise) prior to versions 13.5.1 and 13.6.1 and Conjur OSS prior to version 1.22.1. Conjur OSS version 1.22.1 and Secrets Manager, Self-Hosted versions 13.5.1 and 13.6.1 fix the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49831\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0"]
[18.562269, "o", "m\u001b[0;32m\"An attacker of Secrets Manager, Self-Hosted installations that route traffic from Secrets Manager to AWS through a misconfigured network device can reroute authentication requests to a malicious server under the attacker’s control. CyberArk believes there to be very few installations where this issue can be actively exploited, though Secrets Manager, Self-Hosted (formerly Conjur Enterprise) prior to versions 13.5.1 and 13.6.1 and Conjur OSS prior to version 1.22.1 may be affected. Conjur OSS version 1.22.1 and Secrets Manager, Self-Hosted versions 13.5.1 and 13.6.1 fix the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-49846\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"wire-ios is an iOS client for the Wire secure messaging application. From Wire iOS 3.111.1 to before 3.124.1, messages that were visible in the view port have be"]
[18.562314, "o", "en logged to the iOS system logs in clear text. Wire application logs created and managed by the application itself were not affected, especially not the logs users can export and send to Wire support. The iOS logs can only be accessed if someone had (physical) access to the underlying unlocked device. The issue manifested itself by calling canOpenUrl() and passing an invalid URL object. When iOS then performs the check and fails, it logs the contents to the system log. This is not documented behaviour. Wire released an emergency fix with version 3.124.1. As a workaround, users can reset their iOS device to remove the offending logs. Since Wire cannot access or modify iOS system logs, there's no other workaround other than a reset.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-50182\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"urllib3 is a user"]
[18.562353, "o", "-friendly HTTP client library for Python. Starting in version 2.2.0 and prior to 2.5.0, urllib3 does not control redirects in browsers and Node.js. urllib3 supports being used in a Pyodide runtime utilizing the JavaScript Fetch API or falling back on XMLHttpRequest. This means Python libraries can be used to make HTTP requests from a browser or Node.js. Additionally, urllib3 provides a mechanism to control redirects, but the retries and redirect parameters are ignored with Pyodide; the runtime itself determines redirect behavior. This issue has been patched in version 2.5.0.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-52559\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Zulip is an open-source team chat application. From versions 2.0.0-rc1 to before 10.4 in Zulip Server, the /digest/ URL of a server shows a preview of what the email weekly dige"]
[18.562391, "o", "st would contain. This URL, though not the digest itself, contains a cross-site scripting (XSS) vulnerability in both topic names and channel names. This issue has been fixed in Zulip Server 10.4. A workaround for this issue involves denying access to /digest/.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-52898\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Frappe is a full-stack web application framework. Prior to versions 14.94.3 and 15.58.0, a carefully crafted request could lead to a malicious actor getting access to a user's password reset token. This can only be exploited on self hosted instances configured in a certain way. Frappe Cloud users are safe. This issue has been patched in versions 14.94.3 and 15.58.0. Workarounds for this issue involve verifying password reset URLs before clicking on them or upgrading for self hosted users.\"\u001b[0"]
[18.562507, "o", "m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53095\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Sunshine is a self-hosted game stream host for Moonlight. Prior to version 2025.628.4510, the web UI of Sunshine lacks protection against Cross-Site Request Forgery (CSRF) attacks. This vulnerability allows an attacker to craft a malicious web page that, when visited by an authenticated user, can trigger unintended actions within the Sunshine application on behalf of that user. Specifically, since the application does OS command execution by design, this issue can be exploited to abuse the \\\"Command Preparations\\\" feature, enabling an attacker to inject arbitrary commands that will be executed with Administrator privileges when an application is launched. This issue has been patched in version 2025.628.4510.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyw"]
[18.562553, "o", "ord\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53096\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Sunshine is a self-hosted game stream host for Moonlight. Prior to version 2025.628.4510, the web UI of Sunshine lacks protection against Clickjacking attacks. This vulnerability allows an attacker to embed the Sunshine interface within a malicious website using an invisible or disguised iframe. If a user is tricked into interacting (one or multiple clicks) with the malicious page while authenticated, they may unknowingly perform actions within the Sunshine application without their consent. This issue has been patched in version 2025.628.4510.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n"]
[18.562581, "o", "    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53099\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Sentry is a developer-first error tracking and performance monitoring tool. Prior to version 25.5.0, an attacker with a malicious OAuth application registered with Sentry can take advantage of a race condition and improper handling of authorization code within Sentry to maintain persistence to a user's account. With a specially timed requests and redirect flows, an attacker could generate multiple authorization codes that could be used to exchange for access and refresh tokens. This was possible even after de-authorizing the particular application. This issue has been patched in version 25.5.0. Self-hosted Sentry users should upgrade to version 25.5.0 or higher. Sentry SaaS users do not need to take any action.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id"]
[18.562671, "o", "\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53359\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"ethereum is a common ethereum structs for Rust. Prior to ethereum crate v0.18.0, signature malleability (according to EIP-2) was only checked for \\\"legacy\\\" transactions, but not for EIP-2930, EIP-1559 and EIP-7702 transactions. This is a specification deviation. The signature malleability itself is not a security issue and not as high of a risk if the ethereum crate is used on a single-implementation blockchain. This issue has been patched in version v0.18.0. A workaround for this issue involves manually checking transaction malleability outside of the crate, however upgrading is recommended.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53374\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Dokploy is a self-hostable Platform as a Service"]
[18.562707, "o", " (PaaS) that simplifies the deployment and management of applications and databases. An authenticated low-privileged account can retrieve detailed profile information about another users in the same organization by directly invoking user.one. The response discloses personally-identifiable information (PII) such as e-mail address, role, two-factor status, organization ID, and various account flags. The fix will be available in the v0.23.7.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53375\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Dokploy is a self-hostable Platform as a Service (PaaS) that simplifies the deployment and management of applications and databases. An authenticated attacker can read any file that the Traefik process user can access (e.g., /etc/passwd, application source, environment variable files containing credentials and secr"]
[18.562741, "o", "ets). This may lead to full compromise of other services or lateral movement. This vulnerability is fixed in 0.23.7.\"\u001b[0m\u001b[1;39m,\r\n"]
[18.562764, "o", "      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53376\"\u001b[0m\u001b[1;39m,\r\n"]
[18.562785, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Dokploy is a self-hostable Platform as a Service (PaaS) that simplifies the deployment and management of applications and databases. An authenticated, low-privileged user can run arbitrary OS commands on the Dokploy host. The tRPC procedure\\ndocker.getContainersByAppNameMatch interpolates the attacker-supplied appName value into a Docker CLI call without sanitisation, enabling command injection under the Dokploy service account. This vulnerability is fixed in 0.23.7.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n"]
[18.56282, "o", "    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53532\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"giscus is a commenting system powered by GitHub Discussions. A bug in giscus' discussions creation API allowed an unauthorized user to create discussions on any repository where giscus is installed. This affects the server-side part of giscus, which is provided via http://giscus.app or your own self-hosted service. This vulnerability is fixed by the c43af7806e65adfcf4d0feeebef76dc36c95cb9a and 4b9745fe1a326ce08d69f8a388331bc993d19389 commits.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53825\"\u001b[0m\u001b[1;39m,\r\n"]
[18.562883, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"Dokploy is a free, self-hostable Platform as a Service (PaaS). Prior to version 0.24.3, an unauthenticated preview deployment vulnerability in Dokploy allows any user to execute arbitrary code and access sensitive environment variables by simply opening a pull request on a public repository. This exposes secrets and potentially enables remote code execution, putting all public Dokploy users using these preview deployments at risk. Version 0.24.3 contains a fix for the issue.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-53908\"\u001b[0m\u001b[1;39m,\r\n"]
[18.562898, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"RomM is a self-hosted rom manager and player. Versions prior to 3.10.3 and 4.0.0-beta.3 have an authenticated path traversal vulnerability in the `/api/raw` endpoint. Anyone running the latest version of RomM and has multiple users, even unprivileged users, such as the kiosk user in the official implementation, may be affected. This allows the leakage of passwords and users that may be stored on the system. Versions 3.10.3 and 4.0.0-beta.3 contain a patch.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-6173\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"A vulnerability classified as critical was found in Webkul QloApps 1.6.1. Affected by this vulnerability is an unknown functionality of the file /admin/ajax_products_list.php. The manipulation of the argument packItself leads to sql injection. "]
[18.562946, "o", "The attack can be launched remotely. The exploit has been disclosed to the public and may be used. The vendor confirms the existence of this flaw but considers it a low-level issue due to admin privilege pre-requisites. Still, a fix is planned for a future release.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m,\r\n    \u001b[1;39m{\r\n      \u001b[0m\u001b[1;34m\"cve_id\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"CVE-2025-6997\"\u001b[0m\u001b[1;39m,\r\n"]
[18.563012, "o", "      \u001b[0m\u001b[1;34m\"description\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"The ThemeREX Addons plugin for WordPress is vulnerable to Stored Cross-Site Scripting via SVG File uploads in all versions up to, and including, 2.35.1.1 due to insufficient input sanitization and output escaping. The plugin’s SVG rendering routine calls the trx_addons_get_svg_from_file() function on an unvalidated 'svg' parameter supplied via the shortcode or Elementor widget settings, then outputs it via the trx_addons_show_layout() function.  Because there is no check on the URL’s origin, scheme, or the SVG content itself, authenticated attackers, with Contributor-level access and above, can supply a remote SVG and inject arbitrary web scripts in pages that will execute whenever a user accesses the SVG file.\"\u001b[0m\u001b[1;39m,\r\n      \u001b[0m\u001b[1;34m\"matched_keyword\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"self\"\u001b[0m\u001b[1;39m\r\n    \u001b[1;39m}\u001b[0m\u001b[1;39m\r\n  \u001b[1;39m]\u001b[0m\u001b[1;39m\r\n"]
[18.56308, "o", "\u001b[1;39m}\u001b[0m\r\n"]
[18.563407, "o", "\r\n\u001b[1;33m⏸️  Press Enter to continue...\u001b[0m\r\n"]
[23.948225, "o", "\r\n"]
[23.955341, "o", "\u001b[3J\u001b[H\u001b[2J"]
[23.956237, "o", "\r\n\u001b[1;33m╔══════════════════════════════════════════════════════════════╗\u001b[0m\r\n\u001b[1;33m║\u001b[0m \u001b[1;37m5. Remote AI-Powered Binary Analysis\u001b[0m \u001b[1;33m║\u001b[0m\r\n\u001b[1;33m╚══════════════════════════════════════════════════════════════╝\u001b[0m\r\n\r\n"]
[23.956266, "o", "\u001b[0;34m🔗 Endpoint:\u001b[0m /binary/chat\r\n\u001b[0;34m📝 Description:\u001b[0m Chat with binary using remote AI service\r\n\u001b[0;34m📋 Method:\u001b[0m POST\r\n\r\n"]
[23.964204, "o", "\u001b[0;36m💻 Command:\u001b[0m\r\n\u001b[0;32mcurl -X POST http://localhost:8080/binary/chat \\\r\n        -H \"Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJQb3J0Y3VsbGlzIiwiZXhwIjoxNzU0NDkzMzg0LCJpYXQiOjE3NTMyODM3ODQsImp0aSI6Ijk0NWY4ZjBlLTgyNDctNDUyMS1hMDg5LThmNzUwNzBmZjNmNyIsInBsYW4iOiJmcmVlIiwicmF0ZV9saW1pdCI6MTAwMCwiZGVwbG95bWVudF9pZCI6IjEyM2U0NTY3LWU4OWItMTJkMy1hNDU2LTQyNjYxNDE3NDAwMCJ9.2c-1o9kuERyrVxGunTBVfc6M3SFV_7YdLyvt4TJsfXw\" \\\r\n        -H \"Content-Type: application/json\" \\\r\n        -d @./demo_files/chat_request.json\u001b[0m\r\n\r\n"]
[23.964251, "o", "\u001b[0;35m📡 Response:\u001b[0m\r\n"]
[23.977528, "o", "  % Total    % Received % Xf"]
[23.977591, "o", "erd  Average Speed   Time    Time     Time  Curren"]
[23.977602, "o", "t\r\n                           "]
[23.977675, "o", "      Dloa"]
[23.977738, "o", "d  Upload   Total   Spent    Left  Speed\r\n\r  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0"]
[25.185018, "o", "\r100   423    0     0  100   423    "]
[25.18518, "o", "  0    350  0:00:01  0:00:01 --:--:--   350"]
[26.185457, "o", "\r100   423    0     0  100   423"]
[26.185785, "o", "      0    191  0:00:02  0:00:02 --:--:--   191"]
[27.190762, "o", "\r100   423    0     0  100   423    "]
[27.19118, "o", "  0    131  0:00:03  0:00:03 --:--:--   131"]
[28.191927, "o", "\r100   423    0     0  100   423      0  "]
[28.192039, "o", "  100  0:00:04  0:00:04 --:--:--   100"]
[29.197457, "o", "\r100   423    0     0  100   423      0     81  0:00:05  0:00:05 --:--:--    81"]
[30.20264, "o", "\r100   423    0     0  100   423   "]
[30.20278, "o", "   0     67  0:00:06  0:00:06 --:--:--     0"]
[30.592114, "o", "\r100  1572  100  1149  100   423    173     63  0"]
[30.592198, "o", ":00:06  0:00:06 --:--:--   260\r100  1572  100  1149  100   423    173     63  0:00:06  0:00:06 --:--:-"]
[30.592216, "o", "-   337\r\n"]
[30.594203, "o", "\u001b[1;39m{\r\n"]
[30.594345, "o", "  \u001b[0m\u001b[1;34m\"answer\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"What you have here is a 33 kB **stand-alone 64-bit ARM macOS executable** (“mach-o” format, architecture **aarch64**).  \\nIt is dynamically linked only to the system runtime library (`/usr/lib/libSystem.B.dylib`) and exports nothing but the usual symbols (`_main`, `__mh_execute_header`), so it’s a plain user-space command-line program rather than a dylib, framework, or kernel extension.\\n\\nFrom the embedded strings we can already guess what it does:\\n\\n- It prints “Hello from Nabla demo!” and then “Processing data…”.  \\n- It contains the literal string **“demo_secret_key_123”**, which is almost certainly a hard-coded key used for some quick-and-dirty encryption / decryption demonstration.  \\n- The odd-looking fragments (`2wH`, `3h|`, `bv5h`, `j8H`, etc.) are probably short encrypted or encoded payloads that the program decrypts with that key.\\n\\nSo, in short:  \\nThis is a **demo / proof-of-concept program** (likely named **“demo”**) that sh"]
[30.594554, "o", "ows off some very simple crypto routine. When you run it, it greets you, claims to be “processing data,” and then\"\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"model_used\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;32m\"unknown\"\u001b[0m\u001b[1;39m,\r\n  \u001b[0m\u001b[1;34m\"tokens_used\"\u001b[0m\u001b[1;39m: \u001b[0m\u001b[0;39m487\u001b[0m\u001b[1;39m\r\n\u001b[1;39m}\u001b[0m\r\n"]
[30.595122, "o", "\r\n\u001b[1;33m⏸️  Press Enter to continue...\u001b[0m\r\n"]
[33.079643, "o", "\r\n"]
[33.089408, "o", "\u001b[3J\u001b[H\u001b[2J"]
[33.090217, "o", "\r\n\u001b[1;33m╔══════════════════════════════════════════════════════════════╗\u001b[0m\r\n"]
[33.090257, "o", "\u001b[1;33m║\u001b[0m \u001b[1;37mDemo Complete!\u001b[0m \u001b[1;33m║\u001b[0m\r\n"]
[33.09036, "o", "\u001b[1;33m╚══════════════════════════════════════════════════════════════╝\u001b[0m\r\n\r\n\u001b[0;32m🎉 All endpoints demonstrated successfully!\u001b[0m\r\n\u001b[1;37m📊 Endpoints covered:\u001b[0m\r\n"]
[33.09038, "o", "   • \u001b[0;36m/binary/analyze\u001b[0m - Binary analysis\r\n   • \u001b[0;36m/binary/diff\u001b[0m - Binary comparison\r\n"]
[33.0904, "o", "   • \u001b[0;36m/binary/attest\u001b[0m - Binary attestation\r\n"]
[33.090409, "o", "   • \u001b[0;36m/binary/check-cves\u001b[0m - CVE scanning\r\n"]
[33.090614, "o", "   • \u001b[0;36m/binary/chat\u001b[0m - Remote AI-powered analysis\r\n\r\n\u001b[1;33m✨ Thank you for watching the Nabla API demo!\u001b[0m\r\n\r\n"]
[33.097286, "o", "\u001b[0;32m🧹 Demo files cleaned up\u001b[0m\r\n"]
[33.097751, "o", "\u001b[1m\u001b[7m%\u001b[27m\u001b[1m\u001b[0m                                                                                                                                                                                                               \r \r"]
[33.098366, "o", "\u001b]7;file://Jamess-MacBook-Air.local/Users/jdbohrman/nabla\u0007"]
[33.098494, "o", "\r\u001b[0m\u001b[27m\u001b[24m\u001b[Jjdbohrman@Jamess-MacBook-Air nabla % \u001b[K\u001b[?2004h"]
[35.923234, "o", "e"]
[36.147816, "o", "\bex"]
[36.306249, "o", "i"]
[36.430813, "o", "t"]
[36.690685, "o", "\u001b[?2004l\r\r\n"]
[36.694028, "o", "\r\nSaving session..."]
[36.713114, "o", "\r\n...saving history..."]
[36.722705, "o", "truncating history files..."]
[36.74212, "o", "\r\n..."]
[36.742168, "o", "completed.\r\n"]
